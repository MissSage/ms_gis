import{dR as xt,$ as Y,a5 as Mt,W as lt,S as yt,a2 as K,ae as kt,c6 as ct,b6 as bt,ez as At,gn as It}from"./vendor.faf54504.js";import{r as rt,g as $}from"./pixelUtils.34cd9289.js";const z=new Map;z.set("meter-per-second",1),z.set("kilometer-per-hour",.277778),z.set("knots",.514444),z.set("feet-per-second",.3048),z.set("mile-per-hour",.44704);const ot=180/Math.PI,at=5,tt=new xt({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function it(t,n){return z.get(t)/z.get(n)||1}function ht(t){return(450-t)%360}function ft(t,n="geographic"){const[r,c]=t,i=Math.sqrt(r*r+c*c);let a=Math.atan2(c,r)*ot;return a=(360+a)%360,n==="geographic"&&(a=ht(a)),[i,a]}function ut(t,n="geographic"){let r=t[1];n==="geographic"&&(r=ht(r)),r%=360;const c=t[0];return[c*Math.cos(r/ot),c*Math.sin(r/ot)]}function Ct(t,n,r,c="geographic"){if(!rt(t)||Y(r))return t;const i=n==="vector-magdir"?t.clone():Mt(dt(t,n)),a=i.pixels[1];for(let d=0;d<a.length;d++)a[d]=c==="geographic"?(a[d]+r[d]+270)%360:(a[d]+360-r[d])%360;return n==="vector-magdir"?i:dt(i,"vector-magdir")}function dt(t,n,r="geographic",c=1){if(!rt(t))return t;const{pixels:i,width:a,height:d}=t,h=a*d,l=i[0],e=i[1],o=t.pixelType.startsWith("f")?t.pixelType:"f32",s=$.createEmptyBand(o,h),m=$.createEmptyBand(o,h);let u=0;for(let b=0;b<d;b++)for(let k=0;k<a;k++)n==="vector-uv"?([s[u],m[u]]=ft([l[u],e[u]],r),s[u]*=c):([s[u],m[u]]=ut([l[u],e[u]],r),s[u]*=c,m[u]*=c),u++;const g=new $({pixelType:o,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[s,m]});return g.updateStatistics(),g}function Wt(t,n,r=1){if(r===1||!rt(t))return t;const c=t.clone(),{pixels:i,width:a,height:d}=c,h=i[0],l=i[1];let e=0;for(let o=0;o<d;o++)for(let s=0;s<a;s++)n==="vector-uv"?(h[e]*=r,l[e]*=r):h[e]*=r,e++;return c.updateStatistics(),c}function zt(t,n,r,c,i){if(Y(i)||!i.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(n/c),height:Math.round(r/c),resolution:t.width/n};const a=i.xmin,d=i.ymax,h=(t.xmax-t.xmin)/n*c,l=(t.ymax-t.ymin)/r*c,e=(h+l)/2;return t.xmin=a+Math.floor((t.xmin-a)/h)*h,t.xmax=a+Math.ceil((t.xmax-a)/h)*h,t.ymin=d+Math.floor((t.ymin-d)/l)*l,t.ymax=d+Math.ceil((t.ymax-d)/l)*l,{extent:t,width:Math.round(t.width/h),height:Math.round(t.height/l),resolution:e}}const vt=mt(0,0,0);function mt(t=0,n=0,r=Math.PI,c=!0){c&&(r=(2*Math.PI-r)%(2*Math.PI));const i=c?-1:1,a=13*i,d=-7*i,h=-2*i,l=-16*i,e=21.75,[o,s]=T(0,n+a,r,e),[m,u]=T(t-5.5,n+d,r,e),[g,b]=T(t+5.5,n+d,r,e),[k,I]=T(t-1.5,n+h,r,e),[y,w]=T(t+1.5,n+h,r,e),[x,f]=T(t-1.5,n+l,r,e),[p,A]=T(t+1.5,n+l,r,e);return[o,s,m,u,k,I,y,w,g,b,x,f,p,A]}function Pt(t=0,n=Math.PI,r=!0){r&&(n=(2*Math.PI-n)%(2*Math.PI));const c=10,i=r?-1:1,a=5*i,d=20*i,h=25*i,l=45,e=0,o=0,s=2,m=0,u=s*i,g=r?1:-1,b=c/2*g;let[k,I]=[e+b,o-d],[y,w]=[k+s*g,I],[x,f]=[y-m*g,w+u],[p,A]=[e-b,o-h],[M,P]=[p+m*g,A-u],v=Math.ceil(t/at),U=Math.floor(v/10);v-=8*U;const S=[],_=[];for(let C=0;C<v/2;C++,U--){U<=0&&v%2==1&&C===(v-1)/2&&(p=e,M=p+m*g,A=(A+I)/2,P=A-u);const[W,Z]=T(p,A,n,l);if(U>0){const[X,G]=T(y,A,n,l),[Q,L]=T(k,I,n,l);S.push(X),S.push(G),S.push(W),S.push(Z),S.push(Q),S.push(L)}else{const[X,G]=T(y,w,n,l),[Q,L]=T(x,f,n,l),[O,nt]=T(M,P,n,l);_.push(W),_.push(Z),_.push(O),_.push(nt),_.push(Q),_.push(L),_.push(X),_.push(G)}A+=a,I+=a,w+=a,f+=a,P+=a}const[N,F]=T(e+b,o+d,n,l),D=(c/2+s)*g,[V,q]=T(e+D,o+d,n,l),[B,J]=T(e+b,o-h,n,l),[j,E]=T(e+D,o-h,n,l);return{pennants:S,barbs:_,shaft:[N,F,V,q,B,J,j,E]}}function T(t,n,r,c=1){const i=Math.sqrt(t*t+n*n)/c,a=(2*Math.PI+Math.atan2(n,t))%(2*Math.PI);return[i,(2*Math.PI+a-r)%(2*Math.PI)]}const et=[0,1,3,6,10,16,21,27,33,40,47,55,63],Dt=[0,.5,1,1.5,2],St=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function H(t,n,r,c){const i=it(c||"knots",r);let a;for(a=1;a<n.length;a++)if(a===n.length-1){if(t<n[a]*i)break}else if(t<=n[a]*i)break;return Math.min(a-1,n.length-2)}function Ft(t,n,r,c,i){let a=0;switch(n){case"beaufort_kn":a=H(t,et,"knots",r);break;case"beaufort_km":a=H(t,et,"kilometer-per-hour",r);break;case"beaufort_ft":a=H(t,et,"feet-per-second",r);break;case"beaufort_m":a=H(t,et,"meter-per-second",r);break;case"classified_arrow":a=H(t,i!=null?i:[],c,r);break;case"ocean_current_m":a=H(t,Dt,"meter-per-second",r);break;case"ocean_current_kn":a=H(t,St,"knots",r)}return a}function Vt(t,n){const{style:r,inputUnit:c,outputUnit:i,breakValues:a}=n,d=tt.fromJSON(c),h=tt.fromJSON(i),l=7*6,e=15;let o=0,s=0;const{width:m,height:u,mask:g}=t,b=t.pixels[0],k=t.pixels[1],I=lt(g)?g.filter(f=>f>0).length:m*u,y=new Float32Array(I*l),w=new Uint32Array(e*I),x=n.invertDirection?mt(0,0,0,!1):vt;for(let f=0;f<u;f++)for(let p=0;p<m;p++){const A=f*m+p;if(!g||g[f*m+p]){const M=(k[A]+360)%360/180*Math.PI,P=Ft(b[A],r,d,h,a);for(let U=0;U<x.length;U+=2)y[o++]=(p+.5)/m,y[o++]=(f+.5)/u,y[o++]=x[U],y[o++]=x[U+1]+M,y[o++]=P,y[o++]=b[A];const v=7*(o/l-1);w[s++]=v,w[s++]=v+1,w[s++]=v+2,w[s++]=v+0,w[s++]=v+4,w[s++]=v+3,w[s++]=v+0,w[s++]=v+2,w[s++]=v+3,w[s++]=v+2,w[s++]=v+5,w[s++]=v+3,w[s++]=v+5,w[s++]=v+6,w[s++]=v+3}}return{vertexData:y,indexData:w}}const st=[];function Ut(t,n){if(st.length===0)for(let u=0;u<30;u++)st.push(Pt(5*u,0,!n.invertDirection));const r=it(tt.fromJSON(n.inputUnit),"knots"),{width:c,height:i,mask:a}=t,d=t.pixels[0],h=t.pixels[1],l=6,e=[],o=[];let s=0,m=0;for(let u=0;u<i;u++)for(let g=0;g<c;g++){const b=u*c+g,k=d[b]*r;if((!a||a[u*c+g])&&k>=at){const I=(h[b]+360)%360/180*Math.PI,{pennants:y,barbs:w,shaft:x}=st[Math.min(Math.floor(k/5),29)];if(y.length+w.length===0)continue;let f=e.length/l;const p=(g+.5)/c,A=(u+.5)/i;for(let M=0;M<y.length;M+=2)e[s++]=p,e[s++]=A,e[s++]=y[M],e[s++]=y[M+1]+I,e[s++]=0,e[s++]=k;for(let M=0;M<w.length;M+=2)e[s++]=p,e[s++]=A,e[s++]=w[M],e[s++]=w[M+1]+I,e[s++]=0,e[s++]=k;for(let M=0;M<x.length;M+=2)e[s++]=p,e[s++]=A,e[s++]=x[M],e[s++]=x[M+1]+I,e[s++]=0,e[s++]=k;for(let M=0;M<y.length/6;M++)o[m++]=f,o[m++]=f+1,o[m++]=f+2,f+=3;for(let M=0;M<w.length/8;M++)o[m++]=f,o[m++]=f+1,o[m++]=f+2,o[m++]=f+1,o[m++]=f+2,o[m++]=f+3,f+=4;o[m++]=f+0,o[m++]=f+1,o[m++]=f+2,o[m++]=f+1,o[m++]=f+3,o[m++]=f+2,f+=4}}return{vertexData:new Float32Array(e),indexData:new Uint32Array(o)}}function _t(t,n){const r=4*6;let c=0,i=0;const{width:a,height:d,mask:h}=t,l=t.pixels[0],e=[],o=[],s=it(tt.fromJSON(n.inputUnit),"knots"),m=n.style==="wind_speed"?at:Number.MAX_VALUE;for(let u=0;u<d;u++)for(let g=0;g<a;g++){const b=l[u*a+g]*s;if((!h||h[u*a+g])&&b<m){for(let I=0;I<4;I++)e[c++]=(g+.5)/a,e[c++]=(u+.5)/d,e[c++]=I<2?-.5:.5,e[c++]=I%2==0?-.5:.5,e[c++]=0,e[c++]=b;const k=4*(c/r-1);o[i++]=k,o[i++]=k+1,o[i++]=k+2,o[i++]=k+1,o[i++]=k+2,o[i++]=k+3}}return{vertexData:new Float32Array(e),indexData:new Uint32Array(o)}}function Ht(t,n){return n.style==="simple_scalar"?_t(t,n):n.style==="wind_speed"?Ut(t,n):Vt(t,n)}function Kt(t,n,r,c=[0,0],i=.5){const{width:a,height:d,mask:h}=t,[l,e]=t.pixels,[o,s]=c,m=Math.round((a-o)/r),u=Math.round((d-s)/r),g=m*u,b=new Float32Array(g),k=new Float32Array(g),I=new Uint8Array(g),y=n==="vector-uv";for(let x=0;x<u;x++)for(let f=0;f<m;f++){let p=0;const A=x*m+f,M=Math.max(0,x*r+s),P=Math.max(0,f*r+o),v=Math.min(d,M+r),U=Math.min(a,P+r);for(let S=M;S<v;S++)for(let _=P;_<U;_++){const N=S*a+_;if(!h||h[N]){p++;const F=y?[l[N],e[N]]:[l[N],(360+e[N])%360],[D,V]=y?F:ut(F);b[A]+=D,k[A]+=V}}if(p>=(v-M)*(U-P)*(1-i)){I[A]=1;const[S,_]=ft([b[A]/p,k[A]/p]);b[A]=S,k[A]=_}else I[A]=0,b[A]=0,k[A]=0}const w=new $({width:m,height:u,pixels:[b,k],mask:I});return w.updateStatistics(),w}const R=yt.getLogger("esri.views.2d.engine.flow.dataUtils"),qt=10;async function Xt(t,n,r,c){const i=performance.now(),a=Lt(n,r),d=performance.now(),h=Tt(n,a,r.width,r.height),l=performance.now(),e=jt(h,!0),o=performance.now(),s=t==="Streamlines"?Bt(e,qt):Rt(e),m=performance.now();return K("esri-2d-profiler")&&(R.info("I.1","_createFlowFieldFromData (ms)",Math.round(d-i)),R.info("I.2","_getStreamlines (ms)",Math.round(l-d)),R.info("I.3","createAnimatedLinesData (ms)",Math.round(o-l)),R.info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round(m-o)),R.info("I.5","createFlowMesh (ms)",Math.round(m-i)),R.info("I.6","Mesh size (bytes)",s.vertexData.buffer.byteLength+s.indexData.buffer.byteLength)),await Promise.resolve(),kt(c),s}function Lt(t,n){const r=Nt(n.data,n.width,n.height,t.smoothing);return t.interpolate?(c,i)=>{const a=Math.floor(c),d=Math.floor(i);if(a<0||a>=n.width)return[0,0];if(d<0||d>=n.height)return[0,0];const h=c-a,l=i-d,e=a,o=d,s=a<n.width-1?a+1:a,m=d<n.height-1?d+1:d,u=r[2*(o*n.width+e)],g=r[2*(o*n.width+s)],b=r[2*(m*n.width+e)],k=r[2*(m*n.width+s)],I=r[2*(o*n.width+e)+1],y=r[2*(o*n.width+s)+1];return[(u*(1-l)+b*l)*(1-h)+(g*(1-l)+k*l)*h,(I*(1-l)+r[2*(m*n.width+e)+1]*l)*(1-h)+(y*(1-l)+r[2*(m*n.width+s)+1]*l)*h]}:(c,i)=>{const a=Math.round(c),d=Math.round(i);return a<0||a>=n.width||d<0||d>=n.height?[0,0]:[r[2*(d*n.width+a)+0],r[2*(d*n.width+a)+1]]}}function Ot(t,n,r,c,i,a,d,h,l){const e=[];let o=r,s=c,m=0,[u,g]=n(o,s);u*=t.velocityScale,g*=t.velocityScale;const b=Math.sqrt(u*u+g*g);let k,I;e.push({x:o,y:s,t:m,speed:b});for(let y=0;y<t.verticesPerLine;y++){let[w,x]=n(o,s);w*=t.velocityScale,x*=t.velocityScale;const f=Math.sqrt(w*w+x*x);if(f<t.minSpeedThreshold)return e;const p=w/f,A=x/f;if(o+=p*t.segmentLength,s+=A*t.segmentLength,m+=t.segmentLength/f,Math.acos(p*k+A*I)>t.maxTurnAngle)return e;if(t.collisions){const M=Math.round(o*l),P=Math.round(s*l);if(M<0||M>d-1||P<0||P>h-1)return e;const v=a[P*d+M];if(v!==-1&&v!==i)return e;a[P*d+M]=i}e.push({x:o,y:s,t:m,speed:f}),k=p,I=A}return e}function Tt(t,n,r,c){const i=[],a=new ct,d=1/Math.max(t.lineCollisionWidth,1),h=Math.round(r*d),l=Math.round(c*d),e=new Int32Array(h*l);for(let s=0;s<e.length;s++)e[s]=-1;const o=[];for(let s=0;s<c;s+=t.lineSpacing)for(let m=0;m<r;m+=t.lineSpacing)o.push({x:m,y:s,sort:a.getFloat()});o.sort((s,m)=>s.sort-m.sort);for(const{x:s,y:m}of o)if(a.getFloat()<t.density){const u=Ot(t,n,s,m,i.length,e,h,l,d);if(u.length<2)continue;i.push(u)}return i}function Nt(t,n,r,c){if(c===0)return t;const i=Math.round(3*c),a=new Array(2*i+1);let d=0;for(let e=-i;e<=i;e++){const o=Math.exp(-e*e/(c*c));a[e+i]=o,d+=o}for(let e=-i;e<=i;e++)a[e+i]/=d;const h=new Float32Array(t.length);for(let e=0;e<r;e++)for(let o=0;o<n;o++){let s=0,m=0;for(let u=-i;u<=i;u++){if(o+u<0||o+u>=n)continue;const g=a[u+i];s+=g*t[2*(e*n+(o+u))+0],m+=g*t[2*(e*n+(o+u))+1]}h[2*(e*n+o)+0]=s,h[2*(e*n+o)+1]=m}const l=new Float32Array(t.length);for(let e=0;e<n;e++)for(let o=0;o<r;o++){let s=0,m=0;for(let u=-i;u<=i;u++){if(o+u<0||o+u>=r)continue;const g=a[u+i];s+=g*h[2*((o+u)*n+e)+0],m+=g*h[2*((o+u)*n+e)+1]}l[2*(o*n+e)+0]=s,l[2*(o*n+e)+1]=m}return l}function jt(t,n){const r=new ct,c=t.reduce((l,e)=>l+e.length,0),i=new Float32Array(4*c),a=new Array(t.length);let d=0,h=0;for(const l of t){const e=d;for(const o of l)i[4*d+0]=o.x,i[4*d+1]=o.y,i[4*d+2]=o.t,i[4*d+3]=o.speed,d++;a[h++]={startVertex:e,numberOfVertices:l.length,totalTime:l[l.length-1].t,timeSeed:n?r.getFloat():0}}return{lineVertices:i,lineDescriptors:a}}function Bt(t,n){const r=9,{lineVertices:c,lineDescriptors:i}=t;let a=0,d=0;for(const u of i)a+=2*u.numberOfVertices,d+=6*(u.numberOfVertices-1);const h=new Float32Array(a*r),l=new Uint32Array(d);let e=0,o=0;function s(){l[o++]=e-2,l[o++]=e,l[o++]=e-1,l[o++]=e,l[o++]=e+1,l[o++]=e-1}function m(u,g,b,k,I,y,w,x){const f=e*r;let p=0;h[f+p++]=u,h[f+p++]=g,h[f+p++]=1,h[f+p++]=b,h[f+p++]=y,h[f+p++]=w,h[f+p++]=k/2,h[f+p++]=I/2,h[f+p++]=x,e++,h[f+p++]=u,h[f+p++]=g,h[f+p++]=-1,h[f+p++]=b,h[f+p++]=y,h[f+p++]=w,h[f+p++]=-k/2,h[f+p++]=-I/2,h[f+p++]=x,e++}for(const u of i){const{totalTime:g,timeSeed:b}=u;let k=null,I=null,y=null,w=null,x=null,f=null;for(let p=0;p<u.numberOfVertices;p++){const A=c[4*(u.startVertex+p)+0],M=c[4*(u.startVertex+p)+1],P=c[4*(u.startVertex+p)+2],v=c[4*(u.startVertex+p)+3];let U=null,S=null,_=null,N=null;if(p>0){U=A-k,S=M-I;const F=Math.sqrt(U*U+S*S);if(U/=F,S/=F,p>1){let D=U+x,V=S+f;const q=Math.sqrt(D*D+V*V);D/=q,V/=q;const B=Math.min(1/(D*U+V*S),n);D*=B,V*=B,_=-V,N=D}else _=-S,N=U;_!==null&&N!==null&&(m(k,I,y,_,N,g,b,v),s())}k=A,I=M,y=P,x=U,f=S,w=v}m(k,I,y,-f,x,g,b,w)}return{vertexData:h,indexData:l}}function Rt(t){const n=16,r=1,c=2,{lineVertices:i,lineDescriptors:a}=t;let d=0,h=0;for(const F of a){const D=F.numberOfVertices-1;d+=4*D*2,h+=6*D*2}const l=new Float32Array(d*n),e=new Uint32Array(h);let o,s,m,u,g,b,k,I,y,w,x,f,p,A,M=0,P=0;function v(){e[P++]=M-8,e[P++]=M-7,e[P++]=M-6,e[P++]=M-7,e[P++]=M-5,e[P++]=M-6,e[P++]=M-4,e[P++]=M-3,e[P++]=M-2,e[P++]=M-3,e[P++]=M-1,e[P++]=M-2}function U(F,D,V,q,B,J,j,E,C,W,Z,X,G,Q){const L=M*n;let O=0;for(const nt of[r,c])for(const wt of[1,2,3,4])l[L+O++]=F,l[L+O++]=D,l[L+O++]=V,l[L+O++]=q,l[L+O++]=j,l[L+O++]=E,l[L+O++]=C,l[L+O++]=W,l[L+O++]=nt,l[L+O++]=wt,l[L+O++]=G,l[L+O++]=Q,l[L+O++]=B/2,l[L+O++]=J/2,l[L+O++]=Z/2,l[L+O++]=X/2,M++}function S(F,D){let V=y+x,q=w+f;const B=Math.sqrt(V*V+q*q);V/=B,q/=B;const J=y*V+w*q;V/=J,q/=J;let j=x+p,E=f+A;const C=Math.sqrt(j*j+E*E);j/=C,E/=C;const W=x*j+f*E;j/=W,E/=W,U(o,s,m,u,-q,V,g,b,k,I,-E,j,F,D),v()}function _(F,D,V,q,B,J){if(y=x,w=f,x=p,f=A,y==null&&w==null&&(y=x,w=f),g!=null&&b!=null){p=F-g,A=D-b;const j=Math.sqrt(p*p+A*A);p/=j,A/=j}y!=null&&w!=null&&S(B,J),o=g,s=b,m=k,u=I,g=F,b=D,k=V,I=q}function N(F,D){y=x,w=f,x=p,f=A,y==null&&w==null&&(y=x,w=f),y!=null&&w!=null&&S(F,D)}for(const F of a){o=null,s=null,m=null,u=null,g=null,b=null,k=null,I=null,y=null,w=null,x=null,f=null,p=null,A=null;const{totalTime:D,timeSeed:V}=F;for(let q=0;q<F.numberOfVertices;q++)_(i[4*(F.startVertex+q)+0],i[4*(F.startVertex+q)+1],i[4*(F.startVertex+q)+2],i[4*(F.startVertex+q)+3],D,V);N(D,V)}return{vertexData:l,indexData:e}}function pt(t,n){const r=n.pixels,{width:c,height:i}=n,a=new Float32Array(c*i*2),d=n.mask||new Uint8Array(c*i*2);if(n.mask||d.fill(255),t==="vector-uv")for(let h=0;h<c*i;h++)a[2*h+0]=r[0][h],a[2*h+1]=-r[1][h];else if(t==="vector-magdir")for(let h=0;h<c*i;h++){const l=r[0][h],e=It(r[1][h]),o=Math.cos(e-Math.PI/2),s=Math.sin(e-Math.PI/2);a[2*h+0]=o*l,a[2*h+1]=s*l}return{data:a,mask:d,width:c,height:i}}async function Gt(t,n,r,c,i,a){const d=performance.now(),h=bt(n.spatialReference);if(!h){const x=await gt(t,n,r,c,i,a);return K("esri-2d-profiler")&&R.info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-d)),K("esri-2d-profiler")&&R.info("I.9","Number of parts",1),x}const[l,e]=h.valid,o=e-l,s=Math.ceil(n.width/o),m=n.width/s,u=Math.round(r/s);let g=n.xmin;const b=[],k=performance.now();for(let x=0;x<s;x++){const f=new At({xmin:g,xmax:g+m,ymin:n.ymin,ymax:n.ymax,spatialReference:n.spatialReference});b.push(gt(t,f,u,c,i,a)),g+=m}const I=await Promise.all(b);K("esri-2d-profiler")&&R.info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-k)),K("esri-2d-profiler")&&R.info("I.9","Number of parts",I.length);const y={data:new Float32Array(r*c*2),mask:new Uint8Array(r*c),width:r,height:c};let w=0;for(const x of I){for(let f=0;f<x.height;f++)for(let p=0;p<x.width;p++)w+p>=r||(y.data[2*(f*r+w+p)+0]=x.data[2*(f*x.width+p)+0],y.data[2*(f*r+w+p)+1]=x.data[2*(f*x.width+p)+1],y.mask[f*r+w+p]=x.mask[f*x.width+p]);w+=x.width}return K("esri-2d-profiler")&&R.info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-d)),y}async function gt(t,n,r,c,i,a){const d={requestProjectedLocalDirections:!0,signal:a};if(lt(i)&&(d.timeExtent=i),t.type==="imagery"){await t.load({signal:a});const e=t.rasterInfo.dataType,o=await t.fetchImage(n,r,c,d);return!o||Y(o.pixelData)||Y(o.pixelData.pixelBlock)?{data:new Float32Array(r*c*2),mask:new Uint8Array(r*c),width:r,height:c}:pt(e,o.pixelData.pixelBlock)}await t.load({signal:a});const h=t.rasterInfo.dataType,l=await t.fetchPixels(n,r,c,d);return!l||Y(l.pixelBlock)?{data:new Float32Array(r*c*2),mask:new Uint8Array(r*c),width:r,height:c}:pt(h,l.pixelBlock)}export{_t as D,Ht as F,Gt as a,ft as b,tt as c,dt as d,Xt as f,Wt as g,Kt as j,it as l,Ct as m,zt as x};
