var ut=Object.defineProperty,pt=Object.defineProperties;var ct=Object.getOwnPropertyDescriptors;var ze=Object.getOwnPropertySymbols;var mt=Object.prototype.hasOwnProperty,dt=Object.prototype.propertyIsEnumerable;var ke=(r,i,o)=>i in r?ut(r,i,{enumerable:!0,configurable:!0,writable:!0,value:o}):r[i]=o,v=(r,i)=>{for(var o in i||(i={}))mt.call(i,o)&&ke(r,o,i[o]);if(ze)for(var o of ze(i))dt.call(i,o)&&ke(r,o,i[o]);return r},J=(r,i)=>pt(r,ct(i));import{bG as q,qu as ht,U as z,na as xe,aD as a,aE as u,lM as M,oT as pe,dO as yt,aL as Y,aF as L,dP as H,lL as V,bo as ae,ec as He,O as F,m_ as te,qv as ce,qw as me,a1 as j,nk as Ie,et as be,qx as Ue,dm as Qe,eu as Fe,b3 as Te,eV as gt,oC as oe,qp as ft,nv as Rt,dw as bt,d8 as vt,K as Ge,Y as k,lO as le,$ as wt,ep as De,qy as St,eg as xt,ee as It,b2 as Ft,at as Tt,ez as Dt,qz as Nt,ii as Pt,pI as Ct,qj as _t,pJ as Ot,nr as Vt,ns as jt,pQ as Mt,qg as At,nq as $t,nt as Jt,ll as Et,bp as qt,pT as Lt,qA as zt,qc as kt,pV as Ht,mK as Ut}from"./vendor.1bde3be2.js";import{w as I,o as ie,i as ge,c as Qt,l as Gt,a as Bt,u as Wt,m as Kt,k as Zt,L as Xt,j as Yt,$ as ei,f as ti,n as ii}from"./fetchRasterInfo.e83849e0.js";import{p as Ne,m as Be,d as ri,c as si}from"./multidimensionalUtils.4795889a.js";import{k as ni,_ as We,h as Ke,n as ai,f as oi,b as li,e as Ze,T as ui,S as Xe,P as pi}from"./RasterSymbolizer.64970087.js";import{g as Pe}from"./pixelUtils.56448565.js";import{f as ci,b as mi}from"./dataUtils.98de3211.js";const di={StretchFunction:{arguments:{ComputeGamma:{isDataset:!1,isPublic:!1,name:"ComputeGamma",type:"RasterFunctionVariable",value:!1},DRA:{isDataset:!1,isPublic:!1,name:"DRA",type:"RasterFunctionVariable",value:!1},EstimateStatsHistogram:{isDataset:!1,isPublic:!1,name:"EstimateStatsHistogram",type:"RasterFunctionVariable",value:!1},Gamma:{displayName:"Gamma",isDataset:!1,isPublic:!1,name:"Gamma",type:"RasterFunctionVariable"},Histograms:{isDataset:!1,isPublic:!1,name:"Histograms",type:"RasterFunctionVariable"},Max:{isDataset:!1,isPublic:!1,name:"Max",type:"RasterFunctionVariable",value:255},MaxPercent:{isDataset:!1,isPublic:!1,name:"MaxPercent",type:"RasterFunctionVariable",value:.5},Min:{isDataset:!1,isPublic:!1,name:"Min",type:"RasterFunctionVariable",value:0},MinPercent:{isDataset:!1,isPublic:!1,name:"MinPercent",type:"RasterFunctionVariable",value:.25},NumberOfStandardDeviations:{isDataset:!1,isPublic:!1,name:"NumberOfStandardDeviation",type:"RasterFunctionVariable",value:2},Raster:{isDataset:!0,isPublic:!1,name:"Raster",type:"RasterFunctionVariable"},SigmoidStrengthLevel:{isDataset:!1,isPublic:!1,name:"SigmoidStrengthLevel",type:"RasterFunctionVariable",value:2},Statistics:{isDataset:!1,isPublic:!1,name:"Statistics",type:"RasterFunctionVariable"},StretchType:{isDataset:!1,isPublic:!1,name:"StretchType",type:"RasterFunctionVariable",value:0},type:"StretchFunctionArguments",UseGamma:{isDataset:!1,isPublic:!1,name:"UseGamma",type:"RasterFunctionVariable",value:!1}},description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",function:{description:"Enhances an image by adjusting the range of values displayed. This does not alter the underlying pixel values. If a pixel has a value outside of the specified range, it will appear as either the minimum or maximum value.",name:"Stretch",pixelType:"UNKNOWN",type:"StretchFunction"},functionType:0,name:"Stretch",thumbnail:""},RemapFunction:{name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table.",function:{type:"RemapFunction",pixelType:"UNKNOWN",name:"Remap",description:"Changes pixel values by assigning new values to ranges of pixel values or using an external table."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},UseTable:{name:"UseTable",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},InputRanges:{name:"InputRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Input Ranges"},OutputValues:{name:"OutputValues",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"Output Values"},NoDataRanges:{name:"NoDataRanges",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable",displayName:"NoData Ranges"},Table:{name:"Table",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputField:{name:"InputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},OutputField:{name:"OutputField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},InputMaxField:{name:"InputMaxField",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},RemapTableType:{name:"RemapTableType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},AllowUnmatched:{name:"AllowUnmatched",isPublic:!1,isDataset:!1,value:!0,type:"RasterFunctionVariable"},type:"RemapFunctionArguments"},functionType:0,thumbnail:""},ColormapFunction:{name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp.",function:{type:"ColormapFunction",pixelType:"UNKNOWN",name:"Colormap",description:"Changes pixel values to display the raster data as either a grayscale or a red, green, blue (RGB) image, based on a colormap or a color ramp."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},ColormapName:{name:"ColormapName",isPublic:!1,isDataset:!1,value:"Gray",type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},type:"ColormapFunctionArguments"},functionType:0,thumbnail:""},ShadedReliefFunction:{name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image.",function:{type:"ShadedReliefFunction",pixelType:"UNKNOWN",name:"Shaded Relief",description:"Creates a multiband, color coded, 3D representation of the surface, with the sun's relative position taken into account for shading the image."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ColorSchemeType:{name:"ColorSchemeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ColorRamp:{name:"ColorRamp",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Colormap:{name:"Colormap",isPublic:!1,isDataset:!1,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"ShadedReliefFunctionArguments"},functionType:0,thumbnail:""},HillshadeFunction:{name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image",function:{type:"HillshadeFunction",pixelType:"UNKNOWN",name:"Hillshade",description:"Creates a 3D representation of the surface, with the sun's relative position taken into account for shading the image"},arguments:{DEM:{name:"DEM",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},HillshadeType:{name:"HillshadeType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},Azimuth:{name:"Azimuth",isPublic:!1,isDataset:!1,value:315,type:"RasterFunctionVariable"},Altitude:{name:"Altitude",isPublic:!1,isDataset:!1,value:45,type:"RasterFunctionVariable"},SlopeType:{name:"SlopeType",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},ZFactor:{name:"ZFactor",isPublic:!1,isDataset:!1,value:1,type:"RasterFunctionVariable"},PSPower:{name:"PSPower",isPublic:!1,isDataset:!1,value:.664,type:"RasterFunctionVariable"},PSZFactor:{name:"PSZFactor",isPublic:!1,isDataset:!1,value:.024,type:"RasterFunctionVariable"},RemoveEdgeEffect:{name:"RemoveEdgeEffect",isPublic:!1,isDataset:!1,value:!1,type:"RasterFunctionVariable"},type:"HillshadeFunctionArguments"},functionType:0,thumbnail:""},ResampleFunction:{name:"Resample",description:"Changes the cell size of a raster.",function:{type:"ResampleFunction",pixelType:"UNKNOWN",name:"Resample",description:"Changes the cell size of a raster."},arguments:{Raster:{name:"Raster",isPublic:!1,isDataset:!0,type:"RasterFunctionVariable"},ResamplingType:{name:"ResamplingType",isPublic:!1,isDataset:!1,value:0,type:"RasterFunctionVariable"},InputCellSize:{name:"InputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},OutputCellSize:{name:"OutputCellsize",isPublic:!1,isDataset:!1,value:{x:0,y:0},type:"RasterFunctionVariable"},type:"ResampleFunctionArguments"},functionType:0,thumbnail:""}},hi={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767]},yi={simple_scalar:"Simple Scalar",wind_barb:"Wind Barb",single_arrow:"Single Arrow",beaufort_kn:"Beaufort Wind (Knots)",beaufort_m:"Beaufort Wind (MetersPerSecond)",ocean_current_m:"Ocean Current (MetersPerSecond)",ocean_current_kn:"Ocean Current (Knots)"},gi=new Set(["raster-stretch","unique-value","class-breaks","raster-shaded-relief","vector-field","raster-colormap"]);function Ye(r){return gi.has(r.type)}function Ce(r,i){if(!r||!i)return q(r||i);const o=q(r);if(i.rasterFunctionDefinition){const e=i.rasterFunctionDefinition;(e.thumbnail||e.thumbnailEx)&&(e.thumbnail=e.thumbnailEx=null),et(o.rasterFunctionDefinition.arguments,i)}else i.functionName.toLowerCase()!=="none"&&(tt(o.functionArguments).Raster=i);return o}function et(r,i){for(const o in r)o.toLowerCase()==="raster"&&(r[o].type==="RasterFunctionVariable"?(r[o]=i.rasterFunctionDefinition,r[o].type="RasterFunctionTemplate"):r[o].type==="RasterFunctionTemplate"&&et(r[o].arguments,i))}function K(r){const i=q(di[r.functionName+"Function"]),o=r.functionArguments;for(const e in o)e.toLowerCase()==="raster"?(i.arguments[e]=K(o[e]),i.arguments[e].type="RasterFunctionTemplate"):e.toLowerCase()==="colormap"?(i.arguments[e].value=Fi(o[e]),i.arguments.ColorSchemeType.value=0):i.arguments[e].value=o[e];return i}function fi(r,i){switch(i=i||{},r.type){case"raster-stretch":return vi(r,i);case"class-breaks":return wi(r,i);case"unique-value":return Si(r,i);case"raster-colormap":return xi(r,i);case"vector-field":return Ri(r,i);case"raster-shaded-relief":return bi(r,i);case"flow":throw new Error("Unsupported rendering rule.")}}function tt(r){const i=r==null?void 0:r.Raster;return i&&i.declaredClass==="esri.layers.support.RasterFunction"?tt(i.functionArguments):r}const fe={none:0,standardDeviation:3,histogramEqualization:4,minMax:5,percentClip:6,sigmoid:9};function Ri(r,i){const o=new I;o.functionName="VectorFieldRenderer";const{dataType:e,bandProperties:t}=i,s=e==="vector-uv";let n,l;t&&t.length===2&&(n=t.map(h=>h.BandName.toLowerCase()).indexOf("magnitude"),l=t.map(h=>h.BandName.toLowerCase()).indexOf("direction")),n!==-1&&n!==null||(n=0,l=1);const p=r.rotationType==="arithmetic"?1:2,m=r.flowRepresentation==="flow-from"?0:1,c=r.visualVariables?r.visualVariables.find(h=>h.field==="Magnitude"):new ht,d={magnitudeBandID:n,directionBandID:l,isUVComponents:s,referenceSystem:p,massFlowAngleRepresentation:m,symbolTileSize:50,symbolTileSizeUnits:100,calculationMethod:"Vector Average",symbologyName:yi[r.style.toLowerCase().replace("-","_")],minimumMagnitude:c.minDataValue,maximumMagnitude:c.maxDataValue,minimumSymbolSize:c.minSize,maximumSymbolSize:c.maxSize};return o.functionArguments=d,i.convertToRFT?new I({rasterFunctionDefinition:K(o)}):o}function bi(r,i){const o=i.convertToRFT;if(i.dataType!=="elevation"&&(i.dataType!=="generic"||i.bandCount!==1||i.pixelType!=="s16"&&i.pixelType!=="s32"&&i.pixelType!=="f32"&&i.pixelType!=="f64"))return new I;const e=new I;e.functionName="Hillshade";const t=r.hillshadeType==="traditional"?0:1,s=r.scalingType==="none"?1:3,n={HillshadeType:t,SlopeType:s,ZFactor:r.zFactor};return t===0&&(n.Azimuth=r.azimuth,n.Altitude=r.altitude),s===3&&(n.PSPower=r.pixelSizePower,n.PSZFactor=r.pixelSizeFactor),e.functionArguments=n,e.variableName="Raster",r.colorRamp&&(e.functionName="ShadedRelief",o?n.ColorRamp=We(r.colorRamp):n.Colormap=Ke(r.colorRamp,256)),o?new I({rasterFunctionDefinition:K(e)}):e}function vi(r,i){var l;const o=i.convertToRFT,e=new I;e.functionName="Stretch";const t=fe[ai.toJSON(r.stretchType)],s="u8",n={StretchType:t,Statistics:Ii(r.statistics),DRA:r.dynamicRangeAdjustment,UseGamma:r.useGamma,Gamma:r.gamma,ComputeGamma:r.computeGamma};if(r.outputMin!=null&&(n.Min=r.outputMin),r.outputMax!=null&&(n.Max=r.outputMax),t===fe.standardDeviation?(n.NumberOfStandardDeviations=r.numberOfStandardDeviations,e.outputPixelType=s):t===fe.percentClip?(n.MinPercent=r.minPercent,n.MaxPercent=r.maxPercent,e.outputPixelType=s):t===fe.minMax?e.outputPixelType=s:t===fe.sigmoid&&(n.SigmoidStrengthLevel=r.sigmoidStrengthLevel),e.functionArguments=n,e.variableName="Raster",r.colorRamp){const p=r.colorRamp,m=new I;if(o)m.functionArguments={ColorRamp:We(p)};else{const c=oi(p);if(c)m.functionArguments={colorRamp:c};else if(!i.convertColorRampToColormap||p.type!=="algorithmic"&&p.type!=="multipart"){const d=r.colorRamp.toJSON();d.type==="algorithmic"?d.algorithm=d.algorithm||"esriCIELabAlgorithm":d.type==="multipart"&&((l=d.colorRamps)==null?void 0:l.length)&&d.colorRamps.forEach(h=>h.algorithm=h.algorithm||"esriCIELabAlgorithm"),m.functionArguments={colorRamp:d}}else m.functionArguments={Colormap:Ke(p,256)}}return m.variableName="Raster",m.functionName="Colormap",m.functionArguments.Raster=e,o?new I({rasterFunctionDefinition:K(m)}):m}return o?new I({rasterFunctionDefinition:K(e)}):e}function wi(r,i){const o=[],e=[],t=[],s=[],n=1e-6,{pixelType:l,rasterAttributeTable:p}=i,m=z(p)?null:p.features,c=it(p);if(m&&Array.isArray(m)&&r.classBreakInfos){r.classBreakInfos.forEach((g,T)=>{const D=g.symbol.color;let C;D.a&&m.forEach(f=>{C=f.attributes[r.field],(C>=g.minValue&&C<g.maxValue||T===r.classBreakInfos.length-1&&C>=g.minValue)&&s.push([f.attributes[c],D.r,D.g,D.b])})});const b=l?ve(s,l):s,y=new I;return y.functionName="Colormap",y.functionArguments={},y.functionArguments.Colormap=b,y.variableName="Raster",i.convertToRFT?new I({rasterFunctionDefinition:K(y)}):y}r.classBreakInfos.forEach((b,y)=>{const g=b.symbol&&b.symbol.color;g.a?(y===0?o.push(b.minValue,b.maxValue+n):o.push(b.minValue+n,b.maxValue+n),e.push(y),s.push([y,g.r,g.g,g.b])):t.push(b.minValue,b.maxValue)});const d=l?ve(s,l):s,h=new I;h.functionName="Remap",h.functionArguments={InputRanges:o,OutputValues:e,NoDataRanges:t},h.variableName="Raster";const R=new I;return R.functionName="Colormap",R.functionArguments={Colormap:d,Raster:h},i.convertToRFT?new I({rasterFunctionDefinition:K(R)}):R}function ve(r,i){const o=hi[String(i).toLowerCase()];return o&&r.push([Math.floor(o[0]-1),0,0,0],[Math.ceil(o[1]+1),0,0,0]),r}function it(r){if(z(r))return;const{fields:i}=r,o=i&&i.find(e=>e&&e.name&&e.name.toLowerCase()==="value");return o&&o.name}function Si(r,i){var d,h;const o=[],{pixelType:e,rasterAttributeTable:t}=i,s=z(t)?null:t.features,n=it(t),l=(h=(d=r.defaultSymbol)==null?void 0:d.color)==null?void 0:h.toRgb(),p=r.uniqueValueInfos;if(p)if(s){const R=new Map;p.forEach(y=>{const g=y.value,T=y.symbol.color;g!=null&&T&&T.a&&R.set(String(g),T.toRgb())});const b=r.field;s.forEach(({attributes:y})=>{const g=String(y[b]),T=y[n];if(R.has(g)){const D=R.get(g);o.push([T,...D])}else l&&o.push([T,...l])})}else for(let R=0;R<p.length;R++){const b=p[R],y=b.symbol.color,g=+b.value;if(y==null?void 0:y.a){if(isNaN(g))return null;o.push([g,y.r,y.g,y.b])}}const m=e&&o.length>0?ve(o,e):o,c=new I;return c.functionName="Colormap",c.functionArguments={},c.functionArguments.Colormap=m,c.variableName="Raster",i.convertToRFT?new I({rasterFunctionDefinition:K(c)}):c}function xi(r,i){const o=r.extractColormap();if(!o||o.length===0)return;const{pixelType:e}=i,t=e?ve(o,e):o,s=new I;return s.functionName="Colormap",s.functionArguments={},s.functionArguments.Colormap=t,i.convertToRFT?new I({rasterFunctionDefinition:K(s)}):s}function Ii(r){const i=[];return r.forEach(o=>{const e=o;if(Array.isArray(e))i.push(e);else{if(e.min==null||e.max==null)return;const t=[e.min,e.max,e.avg||0,e.stddev||0];i.push(t)}}),i}function Fi(r){const i=[],o=[];return r.forEach(e=>{i.push(e[0]),o.push(ni([...e.slice(1),255]))}),{type:"RasterColormap",values:i,colors:o}}var _e;const Re=xe()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),Oe=xe()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function Ti(r){let i;switch(r?r.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":i="esriMosaicAttribute";break;case"lockraster":i="esriMosaicLockRaster";break;case"center":i="esriMosaicCenter";break;case"northwest":i="esriMosaicNorthwest";break;case"nadir":i="esriMosaicNadir";break;case"viewpoint":i="esriMosaicViewpoint";break;case"seamline":i="esriMosaicSeamline";break;default:i="esriMosaicNone"}return Oe.fromJSON(i)}let A=_e=class extends H{constructor(r){super(r),this.ascending=!0,this.itemRenderingRule=null,this.lockRasterIds=null,this.method=null,this.multidimensionalDefinition=null,this.objectIds=null,this.operation=null,this.sortField=null,this.sortValue=null,this.viewpoint=null,this.where=null}readAscending(r,i){return i.ascending!=null?i.ascending:i.sortAscending==null||i.sortAscending}readMethod(r,i){return Ti(i.mosaicMethod||i.defaultMosaicMethod)}readOperation(r,i){const o=i.mosaicOperation,e=i.mosaicOperator&&i.mosaicOperator.toLowerCase(),t=o||(e?Re.toJSON(e):null);return Re.fromJSON(t)||"first"}castSortValue(r){return r==null||typeof r=="string"||typeof r=="number"?r:`${r}`}clone(){return new _e({ascending:this.ascending,itemRenderingRule:q(this.itemRenderingRule),lockRasterIds:q(this.lockRasterIds),method:this.method,multidimensionalDefinition:q(this.multidimensionalDefinition),objectIds:q(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:q(this.viewpoint),where:this.where})}};a([u({type:Boolean,json:{write:!0}})],A.prototype,"ascending",void 0),a([M("ascending",["ascending","sortAscending"])],A.prototype,"readAscending",null),a([u({type:I,json:{write:!0}})],A.prototype,"itemRenderingRule",void 0),a([u({type:[pe],json:{write:{overridePolicy(){return{enabled:this.method==="lock-raster"}}}}})],A.prototype,"lockRasterIds",void 0),a([u({type:String,json:{type:Oe.jsonValues,write:{target:"mosaicMethod",writer:Oe.write}}})],A.prototype,"method",void 0),a([M("method",["mosaicMethod","defaultMosaicMethod"])],A.prototype,"readMethod",null),a([u({type:[Ne],json:{write:!0}})],A.prototype,"multidimensionalDefinition",void 0),a([u({type:[pe],json:{name:"fids",write:!0}})],A.prototype,"objectIds",void 0),a([u({json:{type:Re.jsonValues,read:{reader:Re.read},write:{target:"mosaicOperation",writer:Re.write}}})],A.prototype,"operation",void 0),a([M("operation",["mosaicOperation","mosaicOperator"])],A.prototype,"readOperation",null),a([u({type:String,json:{write:{overridePolicy(){return{enabled:this.method==="attribute"}}}}})],A.prototype,"sortField",void 0),a([u({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:this.method==="attribute",allowNull:!0}}}}})],A.prototype,"sortValue",void 0),a([yt("sortValue")],A.prototype,"castSortValue",null),a([u({type:Y,json:{write:!0}})],A.prototype,"viewpoint",void 0),a([u({type:String,json:{write:!0}})],A.prototype,"where",void 0),A=_e=a([L("esri.layers.support.MosaicRule")],A);const U=A;let _=class extends H{constructor(){super(...arguments),this.layer=null,this.adjustAspectRatio=void 0,this.compression=void 0,this.pixelType=void 0,this.lercVersion=2}writeAdjustAspectRatio(r,i,o){this.layer.version<10.3||(i[o]=r)}get bandIds(){return this.layer.bandIds}set bandIds(r){this.layer&&(this.layer.bandIds=r)}get compressionQuality(){var r;return(r=this.layer)==null?void 0:r.compressionQuality}set compressionQuality(r){this.layer&&(this.layer.compressionQuality=r)}writeCompressionQuality(r,i,o){this.format&&this.format.toLowerCase().includes("jpg")&&r!=null&&(i[o]=r)}get compressionTolerance(){var r;return(r=this.layer)==null?void 0:r.compressionTolerance}set compressionTolerance(r){this.layer&&(this.layer.compressionTolerance=r)}writeCompressionTolerance(r,i,o){this.format==="lerc"&&r!=null&&(i[o]=r)}get format(){var r;return((r=this.layer.renderer)==null?void 0:r.type)==="vector-field"?"lerc":this.layer.format}get interpolation(){var r;return(r=this.layer)==null?void 0:r.interpolation}set interpolation(r){this.layer&&(this.layer.interpolation=r)}get noData(){var r;return(r=this.layer)==null?void 0:r.noData}set noData(r){this.layer&&(this.layer.noData=r)}get noDataInterpretation(){var r;return(r=this.layer)==null?void 0:r.noDataInterpretation}set noDataInterpretation(r){this.layer&&(this.layer.noDataInterpretation=r)}writeLercVersion(r,i,o){this.format==="lerc"&&this.layer.version>=10.5&&(i[o]=r)}get version(){const r=this.layer;return r.commitProperty("bandIds"),r.commitProperty("format"),r.commitProperty("compressionQuality"),r.commitProperty("compressionTolerance"),r.commitProperty("interpolation"),r.commitProperty("noData"),r.commitProperty("noDataInterpretation"),r.commitProperty("mosaicRule"),r.commitProperty("renderingRule"),r.commitProperty("adjustAspectRatio"),r.commitProperty("pixelFilter"),r.commitProperty("definitionExpression"),r.commitProperty("multidimensionalSubset"),(this._get("version")||0)+1}set version(r){this._set("version",r)}get mosaicRule(){const r=this.layer;let i=r.mosaicRule;const o=r.definitionExpression;return i?o&&o!==i.where&&(i=i.clone(),i.where=o):o&&(i=new U({where:o})),i}get renderingRule(){var s,n;const r=this.layer;let i=r.renderingRule;const o=r.pixelFilter,e=!r.format||r.format.includes("jpg")||r.format.includes("png");i=this._addResampleRasterFunction(i);const t=(s=r.multidimensionalSubset)==null?void 0:s.areaOfInterest;return t&&(i=this._addClipFunction(i,t)),e&&!o&&((n=r.renderer)==null?void 0:n.type)!=="vector-field"&&(i=this.combineRendererWithRenderingRule(i)),i}combineRendererWithRenderingRule(r){var t;const i=this.layer,{rasterInfo:o,renderer:e}=i;return r=r||i.renderingRule,!e||!Ye(e)?r:Ce(fi(e,{rasterAttributeTable:o.attributeTable,pixelType:o.pixelType,dataType:o.dataType,bandProperties:(t=o.keyProperties)==null?void 0:t.BandProperties,convertColorRampToColormap:i.version<10.6,convertToRFT:!!(r==null?void 0:r.rasterFunctionDefinition),bandCount:o.bandCount}),r)}_addResampleRasterFunction(r){var t;if(((t=this.layer.renderer)==null?void 0:t.type)!=="vector-field"||(r==null?void 0:r.functionName)==="Resample")return r;const i=this.layer.serviceDataType==="esriImageServiceDataTypeVector-UV"?7:10,o=this.layer.serviceRasterInfo.pixelSize;let e=new I({functionName:"Resample",functionArguments:{ResamplingType:i,InputCellSize:o}});return e=(r==null?void 0:r.rasterFunctionDefinition)?new I({rasterFunctionDefinition:K(e)}):e,Ce(e,r)}_addClipFunction(r,i){const o=new I({functionName:"Clip",functionArguments:{ClippingGeometry:i.toJSON(),ClippingType:1}});return Ce(o,r)}};a([u()],_.prototype,"layer",void 0),a([u({json:{write:!0}})],_.prototype,"adjustAspectRatio",void 0),a([V("adjustAspectRatio")],_.prototype,"writeAdjustAspectRatio",null),a([u({json:{write:!0}})],_.prototype,"bandIds",null),a([u({json:{write:!0}})],_.prototype,"compression",void 0),a([u({json:{write:!0}})],_.prototype,"compressionQuality",null),a([V("compressionQuality")],_.prototype,"writeCompressionQuality",null),a([u({json:{write:!0}})],_.prototype,"compressionTolerance",null),a([V("compressionTolerance")],_.prototype,"writeCompressionTolerance",null),a([u({json:{write:!0}})],_.prototype,"format",null),a([u({type:String,json:{read:{reader:ie.read},write:{writer:ie.write}}})],_.prototype,"interpolation",null),a([u({json:{write:!0}})],_.prototype,"noData",null),a([u({type:String,json:{read:{reader:ge.read},write:{writer:ge.write}}})],_.prototype,"noDataInterpretation",null),a([u({json:{write:!0}})],_.prototype,"pixelType",void 0),a([u({json:{write:!0}})],_.prototype,"lercVersion",void 0),a([V("lercVersion")],_.prototype,"writeLercVersion",null),a([u({type:Number})],_.prototype,"version",null),a([u({json:{write:!0}})],_.prototype,"mosaicRule",null),a([u({json:{write:!0}})],_.prototype,"renderingRule",null),_=a([L("esri.layers.mixins.ExportImageServiceParameters")],_);let de=class extends H{constructor(){super(...arguments),this.north=null,this.up=null,this.spatialReference=null}};a([u({type:Number,json:{write:!0}})],de.prototype,"north",void 0),a([u({type:Number,json:{write:!0}})],de.prototype,"up",void 0),a([u({type:ae,json:{write:!0}})],de.prototype,"spatialReference",void 0),de=a([L("esri.rest.support.ImageAngleResult")],de);const Di=de;let G=class extends H{constructor(){super(...arguments),this.catalogItemVisibilities=null,this.catalogItems=null,this.location=null,this.name=null,this.objectId=null,this.processedValues=null,this.properties=null,this.value=null}};a([u({json:{write:!0}})],G.prototype,"catalogItemVisibilities",void 0),a([u({type:He,json:{write:!0}})],G.prototype,"catalogItems",void 0),a([u({type:Y,json:{write:!0}})],G.prototype,"location",void 0),a([u({json:{write:!0}})],G.prototype,"name",void 0),a([u({json:{write:!0}})],G.prototype,"objectId",void 0),a([u({json:{write:!0}})],G.prototype,"processedValues",void 0),a([u({json:{write:!0}})],G.prototype,"properties",void 0),a([u({json:{write:!0}})],G.prototype,"value",void 0),G=a([L("esri.rest.support.ImageIdentifyResult")],G);const Ni=G;let we=class extends H{constructor(){super(...arguments),this.geometries=null}};a([u({json:{write:!0}})],we.prototype,"geometries",void 0),we=a([L("esri.rest.support.ImagePixelLocationResult")],we);const Pi=we;let ee=class extends H{constructor(){super(...arguments),this.attributes=null,this.location=null,this.locationId=null,this.rasterId=null,this.resolution=null,this.pixelValue=null}};a([u({json:{write:!0}})],ee.prototype,"attributes",void 0),a([u({type:Y,json:{write:!0}})],ee.prototype,"location",void 0),a([u({json:{write:!0}})],ee.prototype,"locationId",void 0),a([u({json:{write:!0}})],ee.prototype,"rasterId",void 0),a([u({json:{write:!0}})],ee.prototype,"resolution",void 0),a([u({json:{write:!0}})],ee.prototype,"pixelValue",void 0),ee=a([L("esri.rest.support.ImageSample")],ee);const Ci=ee;let Se=class extends H{constructor(){super(...arguments),this.samples=null}};a([u({type:[Ci],json:{write:!0}})],Se.prototype,"samples",void 0),Se=a([L("esri.rest.support.ImageSampleResult")],Se);const _i=Se;function rt(r){const i=r==null?void 0:r.time;if(i&&(i.start!=null||i.end!=null)){const o=[];i.start!=null&&o.push(i.start),i.end==null||o.includes(i.end)||o.push(i.end),r.time=o.join(",")}}async function st(r,i,o){const e=te(r),t=i.geometry?[i.geometry]:[],s=await Ie(t),n=i.toJSON();rt(n);const l=s&&s[0];F(l)&&(n.geometry=l.toJSON());const p=ce(v(J(v({},e.query),{f:"json"}),n));return me(p,o)}async function Oi(r,i,o){var p;const e=i.toJSON();F(e.angleName)&&(e.angleName=e.angleName.join(",")),F(i.point)&&((p=i.point.spatialReference)==null?void 0:p.imageCoordinateSystem)&&(e.point.spatialReference=Ve(i.point.spatialReference)),F(i.spatialReference)&&i.spatialReference.imageCoordinateSystem&&(e.spatialReference=at(i.spatialReference));const t=te(r),s=ce(v(J(v({},t.query),{f:"json"}),e)),n=me(s,o),{data:l}=await j(`${t.path}/computeAngles`,n);return l.spatialReference=l.spatialReference?l.spatialReference.geodataXform!=null?new ae({wkid:0,imageCoordinateSystem:l.spatialReference}):ae.fromJSON(l.spatialReference):null,l.north==="NaN"&&(l.north=null),l.up==="NaN"&&(l.up=null),new Di(l)}async function Vi(r,i,o){var m;const e=i.toJSON(),{geometries:t}=i;if(t)for(let c=0;c<t.length;c++)((m=t[c].spatialReference)==null?void 0:m.imageCoordinateSystem)&&(e.geometries.geometries[c].spatialReference=Ve(t[c].spatialReference));const s=te(r),n=ce(v(J(v({},s.query),{f:"json"}),e)),l=me(n,o),{data:p}=await j(`${s.path}/computePixelLocation`,l);return Pi.fromJSON(p)}async function ji(r,i,o){const e=await st(r,i,o),t=te(r),{data:s}=await j(`${t.path}/computeStatisticsHistograms`,e),{statistics:n}=s;return(n==null?void 0:n.length)&&n.forEach(l=>{l.avg=l.mean,l.stddev=l.standardDeviation}),{statistics:n,histograms:s.histograms}}async function Mi(r,i,o){const e=await st(r,i,o),t=te(r),{data:s}=await j(`${t.path}/computeHistograms`,e);return{histograms:s.histograms}}async function Ai(r,i,o){var c,d,h;const e=i.toJSON();rt(e),((c=e.outFields)==null?void 0:c.length)&&(e.outFields=e.outFields.join(","));const t=(d=await Ie(i.geometry))==null?void 0:d[0];F(t)&&(e.geometry=t.toJSON());const s=te(r),n=ce(v(J(v({},s.query),{f:"json"}),e)),l=me(n,o),{data:p}=await j(`${s.path}/getSamples`,l),m=(h=p==null?void 0:p.samples)==null?void 0:h.map(R=>{const b=R.value==="NaN"||R.value===""?null:R.value.split(" ").map(y=>Number(y));return J(v({},R),{pixelValue:b})});return _i.fromJSON({samples:m})}async function nt(r,i,o){const e=te(r),t=i.geometry?[i.geometry]:[];return Ie(t).then(s=>{const n=i.toJSON(),l=s&&s[0];F(l)&&(n.geometry=JSON.stringify(l.toJSON()));const p=ce(v(J(v({},e.query),{f:"json"}),n)),m=me(p,o);return j(e.path+"/identify",m)}).then(s=>Ni.fromJSON(s.data))}function Ve(r){const{imageCoordinateSystem:i}=r;if(i){const{id:o,referenceServiceName:e}=i;return o!=null?e?{icsid:o,icsns:e}:{icsid:o}:{ics:i}}return r.toJSON()}function at(r,i){const o=Ve(r),{icsid:e,icsns:t,wkid:s}=o;return e!=null?t==null||(i==null?void 0:i.toLowerCase().includes("/"+t.toLowerCase()+"/"))?`0:${e}`:JSON.stringify(o):s?s.toString():JSON.stringify(o)}async function $i(r,i,o){var f,S;const e=te(r),t=ce(J(v({},e==null?void 0:e.query),{f:"json"})),s=me(t,o),n=`${e==null?void 0:e.path}/${i}/info`,l=j(`${n}`,s),p=j(`${n}/keyProperties`,s),m=await Promise.allSettled([l,p]),c=m[0].status==="fulfilled"?m[0].value.data:null,d=m[1].status==="fulfilled"?m[1].value.data:null;let h=null;((f=c.statistics)==null?void 0:f.length)&&(h=c.statistics.map(w=>({min:w[0],max:w[1],avg:w[2],stddev:w[3]})));const R=be.fromJSON(c.extent),b=Math.ceil(R.width/c.pixelSizeX-.1),y=Math.ceil(R.height/c.pixelSizeY-.1),g=R.spatialReference,T=new Y({x:c.pixelSizeX,y:c.pixelSizeY,spatialReference:g}),D=((S=c.histograms)==null?void 0:S.length)?c.histograms:null,C=new li({origin:c.origin,blockWidth:c.blockWidth,blockHeight:c.blockHeight,firstPyramidLevel:c.firstPyramidLevel,maximumPyramidLevel:c.maxPyramidLevel});return new Ze({width:b,height:y,bandCount:c.bandCount,extent:R,spatialReference:g,pixelSize:T,pixelType:c.pixelType.toLowerCase(),statistics:h,histograms:D,keyProperties:d,storageInfo:C})}var je;let ue=je=class extends H{constructor(){super(...arguments),this.angleNames=null,this.point=null,this.spatialReference=null,this.rasterId=null}clone(){return new je(q({angleNames:this.angleNames,point:this.point,spatialReference:this.spatialReference,rasterId:this.rasterId}))}};a([u({type:[String],json:{name:"angleName",write:!0}})],ue.prototype,"angleNames",void 0),a([u({type:Y,json:{write:!0}})],ue.prototype,"point",void 0),a([u({type:ae,json:{write:!0}})],ue.prototype,"spatialReference",void 0),a([u({type:pe,json:{write:!0}})],ue.prototype,"rasterId",void 0),ue=je=a([L("esri.rest.support.ImageAngleParameters")],ue);const Ji=ue;var Me;let Z=Me=class extends H{constructor(){super(...arguments),this.geometry=null,this.mosaicRule=null,this.renderingRule=null,this.pixelSize=null,this.raster=void 0,this.timeExtent=null}writeGeometry(r,i,o){r!=null&&(i.geometryType=Te(r),i[o]=r.toJSON())}clone(){return new Me(q({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,raster:this.raster,timeExtent:this.timeExtent}))}};a([u({types:Ue,json:{read:Qe}})],Z.prototype,"geometry",void 0),a([V("geometry")],Z.prototype,"writeGeometry",null),a([u({type:U,json:{write:!0}})],Z.prototype,"mosaicRule",void 0),a([u({type:I,json:{write:!0}})],Z.prototype,"renderingRule",void 0),a([u({type:Y,json:{write:!0}})],Z.prototype,"pixelSize",void 0),a([u({json:{write:!0}})],Z.prototype,"raster",void 0),a([u({type:Fe,json:{read:{source:"time"},write:{target:"time"}}})],Z.prototype,"timeExtent",void 0),Z=Me=a([L("esri.rest.support.ImageHistogramParameters")],Z);const ot=Z;var Ae;let O=Ae=class extends H{constructor(){super(...arguments),this.geometry=null,this.renderingRules=null,this.pixelSize=null,this.returnGeometry=!0,this.returnCatalogItems=!0,this.returnPixelValues=!0,this.maxItemCount=null,this.timeExtent=null,this.raster=void 0,this.viewId=void 0,this.processAsMultidimensional=!1}writeGeometry(r,i,o){r!=null&&(i.geometryType=Te(r),i[o]=JSON.stringify(r.toJSON()))}set mosaicRule(r){let i=r;i&&i.mosaicMethod&&(i=U.fromJSON(J(v({},i.toJSON()),{mosaicMethod:i.mosaicMethod,mosaicOperation:i.mosaicOperation}))),this._set("mosaicRule",i)}writeMosaicRule(r,i,o){r!=null&&(i[o]=JSON.stringify(r.toJSON()))}set renderingRule(r){let i=r;i&&i.rasterFunction&&(i=I.fromJSON(J(v({},i.toJSON()),{rasterFunction:i.rasterFunction,rasterFunctionArguments:i.rasterFunctionArguments}))),this._set("renderingRule",i)}writeRenderingRule(r,i,o){r!=null&&(i[o]=JSON.stringify(r.toJSON())),r.rasterFunctionDefinition&&(i[o]=JSON.stringify(r.rasterFunctionDefinition))}writeRenderingRules(r,i,o){r!=null&&(i[o]=JSON.stringify(r.map(e=>e.rasterFunctionDefinition||e.toJSON())))}writePixelSize(r,i,o){r!=null&&(i[o]=JSON.stringify(r))}writeTimeExtent(r,i,o){if(r!=null){const e=F(r.start)?r.start.getTime():null,t=F(r.end)?r.end.getTime():null;i[o]=e!=null?t!=null?`${e},${t}`:`${e}`:null}}clone(){return new Ae(q({geometry:this.geometry,mosaicRule:this.mosaicRule,renderingRule:this.renderingRule,pixelSize:this.pixelSize,returnGeometry:this.returnGeometry,returnCatalogItems:this.returnCatalogItems,returnPixelValues:this.returnPixelValues,maxItemCount:this.maxItemCount,processAsMultidimensional:this.processAsMultidimensional,raster:this.raster,viewId:this.viewId,timeExtent:this.timeExtent}))}};a([u({json:{write:!0}})],O.prototype,"geometry",void 0),a([V("geometry")],O.prototype,"writeGeometry",null),a([u({type:U,json:{write:!0}})],O.prototype,"mosaicRule",null),a([V("mosaicRule")],O.prototype,"writeMosaicRule",null),a([u({type:I,json:{write:!0}})],O.prototype,"renderingRule",null),a([V("renderingRule")],O.prototype,"writeRenderingRule",null),a([u({type:[I],json:{write:!0}})],O.prototype,"renderingRules",void 0),a([V("renderingRules")],O.prototype,"writeRenderingRules",null),a([u({type:Y,json:{write:!0}})],O.prototype,"pixelSize",void 0),a([V("pixelSize")],O.prototype,"writePixelSize",null),a([u({type:Boolean,json:{write:!0}})],O.prototype,"returnGeometry",void 0),a([u({type:Boolean,json:{write:!0}})],O.prototype,"returnCatalogItems",void 0),a([u({type:Boolean,json:{write:!0}})],O.prototype,"returnPixelValues",void 0),a([u({type:Number,json:{write:!0}})],O.prototype,"maxItemCount",void 0),a([u({type:Fe,json:{write:{target:"time"}}})],O.prototype,"timeExtent",void 0),a([V("timeExtent")],O.prototype,"writeTimeExtent",null),a([u({json:{write:!0}})],O.prototype,"raster",void 0),a([u({json:{write:!0}})],O.prototype,"viewId",void 0),a([u({type:Boolean,json:{write:!0}})],O.prototype,"processAsMultidimensional",void 0),O=Ae=a([L("esri.rest.support.ImageIdentifyParameters")],O);const lt=O;var $e;let he=$e=class extends H{constructor(){super(...arguments),this.geometries=null,this.rasterId=null}writeGeometry(r,i,o){i.geometries={geometryType:"esriGeometryPoint",geometries:r.map(e=>e.toJSON())}}clone(){var r,i;return new $e({geometries:(i=(r=this.geometries)==null?void 0:r.map(o=>o.clone()))!=null?i:[],rasterId:this.rasterId})}};a([u({type:[Y],json:{write:!0}})],he.prototype,"geometries",void 0),a([V("geometries")],he.prototype,"writeGeometry",null),a([u({type:pe,json:{write:!0}})],he.prototype,"rasterId",void 0),he=$e=a([L("esri.rest.support.ImagePixelLocationParameters")],he);const Ei=he;var Je;let E=Je=class extends H{constructor(){super(...arguments),this.geometry=null,this.interpolation="nearest",this.mosaicRule=null,this.outFields=null,this.pixelSize=null,this.returnFirstValueOnly=!0,this.sampleDistance=null,this.sampleCount=null,this.sliceId=null,this.timeExtent=null}writeGeometry(r,i,o){r!=null&&(i.geometryType=Te(r),i[o]=r.toJSON())}set locations(r){if(r==null?void 0:r.length){const i=new gt({spatialReference:r[0].spatialReference});i.points=r.map(o=>[o.x,o.y]),this._set("locations",r),this.geometry=i}}clone(){return new Je(q({geometry:this.geometry,locations:this.locations,interpolation:this.interpolation,mosaicRule:this.mosaicRule,outFields:this.outFields,raster:this.raster,returnFirstValueOnly:this.returnFirstValueOnly,sampleDistance:this.sampleDistance,sampleCount:this.sampleCount,sliceId:this.sliceId,pixelSize:this.pixelSize,timeExtent:this.timeExtent}))}};a([u({types:Ue,json:{read:Qe}})],E.prototype,"geometry",void 0),a([V("geometry")],E.prototype,"writeGeometry",null),a([u()],E.prototype,"locations",null),a([u({type:String,json:{type:ie.jsonValues,read:ie.read,write:ie.write}})],E.prototype,"interpolation",void 0),a([u({type:U,json:{write:!0}})],E.prototype,"mosaicRule",void 0),a([u({type:[String],json:{write:!0}})],E.prototype,"outFields",void 0),a([u({type:Y,json:{write:!0}})],E.prototype,"pixelSize",void 0),a([u({type:String,json:{write:!0}})],E.prototype,"raster",void 0),a([u({type:Boolean,json:{write:!0}})],E.prototype,"returnFirstValueOnly",void 0),a([u({type:Number,json:{write:!0}})],E.prototype,"sampleDistance",void 0),a([u({type:Number,json:{write:!0}})],E.prototype,"sampleCount",void 0),a([u({type:Number,json:{write:!0}})],E.prototype,"sliceId",void 0),a([u({type:Fe,json:{read:{source:"time"},write:{target:"time"}}})],E.prototype,"timeExtent",void 0),E=Je=a([L("esri.rest.support.ImageSampleParameters")],E);const qi=E,Ee=xe()({U1:"u1",U2:"u2",U4:"u4",U8:"u8",S8:"s8",U16:"u16",S16:"s16",U32:"u32",S32:"s32",F32:"f32",F64:"f64",C64:"c64",C128:"c128",UNKNOWN:"unknown"}),Li=new Set(["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"]),zi=Nt(Pt,{min:0,max:255});function ki(r){var o;if(!r)return null;const i=(o=JSON.stringify(r).match(/"rasterFunction":"(.*?")/gi))==null?void 0:o.map(e=>e.replace('"rasterFunction":"',"").replace('"',""));return i?i.join("/"):null}const Hi=r=>{let i=class extends r{constructor(){super(...arguments),this._functionRasterInfos={},this._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},this._cachedRendererJson=null,this._serviceSupportsMosaicRule=null,this._rasterAttributeTableFieldPrefix="Raster.",this.adjustAspectRatio=null,this.bandIds=void 0,this.capabilities=null,this.compressionQuality=void 0,this.compressionTolerance=.01,this.copyright=null,this.defaultMosaicRule=null,this.definitionExpression=null,this.exportImageServiceParameters=null,this.rasterInfo=null,this.fields=null,this.fullExtent=null,this.hasMultidimensions=!1,this.imageMaxHeight=4100,this.imageMaxWidth=4100,this.interpolation=void 0,this.minScale=0,this.maxScale=0,this.multidimensionalSubset=null,this.noData=null,this.noDataInterpretation=void 0,this.objectIdField=null,this.geometryType="polygon",this.typeIdField=null,this.types=[],this.pixelFilter=null,this.raster=void 0,this.sourceType=null,this.viewId=void 0,this.symbolizer=null,this.rasterFunctionInfos=null,this.serviceDataType=null,this.spatialReference=null,this.pixelType=null,this.serviceRasterInfo=null,this.sourceJSON=null,this.url=null,this.version=void 0}initialize(){this._set("exportImageServiceParameters",new _({layer:this}))}readServiceSupportsMosaicRule(e,t){return this._isMosaicRuleSupported(t)}get _rasterFunctionNamesIndex(){const e=new Map;return!this.rasterFunctionInfos||F(this.rasterFunctionInfos)&&this.rasterFunctionInfos.length<1||F(this.rasterFunctionInfos)&&this.rasterFunctionInfos.forEach(t=>{e.set(t.name.toLowerCase().replace(/ /gi,"_"),t.name)}),e}readBandIds(e,t){if(Array.isArray(e)&&e.length>0&&e.every(s=>typeof s=="number"))return e}readCapabilities(e,t){return this._readCapabilities(t)}writeCompressionQuality(e,t,s){e!=null&&this.format!=="lerc"&&(t[s]=e)}writeCompressionTolerance(e,t,s){this.format==="lerc"&&e!=null&&(t[s]=e)}readDefaultMosaicRule(e,t){return this._serviceSupportsMosaicRule?U.fromJSON(t):null}get fieldsIndex(){return this.fields?new bt(this.fields):null}set format(e){e&&Li.has(e.toLowerCase())&&this._set("format",e.toLowerCase())}readFormat(e,t){return t.serviceDataType==="esriImageServiceDataTypeVector-UV"||t.serviceDataType==="esriImageServiceDataTypeVector-MagDir"||this.pixelFilter!=null?"lerc":"jpgpng"}readMinScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}readMaxScale(e,t){return t.minLOD!=null&&t.maxLOD!=null?e:0}set mosaicRule(e){let t=e;t&&t.mosaicMethod&&(t=U.fromJSON(J(v({},t.toJSON()),{mosaicMethod:t.mosaicMethod,mosaicOperation:t.mosaicOperation}))),this._set("mosaicRule",t)}readMosaicRule(e,t){const s=e||t.mosaicRule;return s?U.fromJSON(s):this._isMosaicRuleSupported(t)?U.fromJSON(t):null}writeMosaicRule(e,t,s){let n=this.mosaicRule;const l=this.definitionExpression;n?l&&l!==n.where&&(n=n.clone(),n.where=l):l&&(n=new U({where:l})),this._isValidCustomizedMosaicRule(n)&&(t[s]=n.toJSON())}get multidimensionalInfo(){return F(this.serviceRasterInfo)?this.serviceRasterInfo.multidimensionalInfo:null}writeNoData(e,t,s){e!=null&&typeof e=="number"&&(t[s]=zi(e))}readObjectIdField(e,t){if(!e){const s=t.fields.filter(n=>n.type==="esriFieldTypeOID"||n.type==="oid");e=s&&s[0]&&s[0].name}return e}get parsedUrl(){return vt(this.url)}readSourceType(e,t){return this._isMosaicDataset(t)?"mosaic-dataset":"raster-dataset"}set renderer(e){this.loaded&&(e=this._configRenderer(e)),this._set("renderer",e)}readRenderer(e,t,s){var p,m;const n=(m=(p=t==null?void 0:t.layerDefinition)==null?void 0:p.drawingInfo)==null?void 0:m.renderer,l=Wt(n,s);return l==null?null:(l.type==="vector-field"&&t.symbolTileSize&&!n.symbolTileSize&&(l.symbolTileSize=t.symbolTileSize),Ye(l)||Ge.getLogger(this.declaredClass).warn("ArcGISImageService","Imagery layer doesn't support given renderer type."),l)}writeRenderer(e,t,s){t.layerDefinition=t.layerDefinition||{},t.layerDefinition.drawingInfo=t.layerDefinition.drawingInfo||{},t.layerDefinition.drawingInfo.renderer=e.toJSON(),e.type==="vector-field"&&(t.symbolTileSize=e.symbolTileSize)}get rasterFields(){var m,c;const e=this._rasterAttributeTableFieldPrefix||"Raster.",t=new oe({name:"Raster.ItemPixelValue",alias:"Item Pixel Value",domain:null,editable:!1,length:50,type:"string"}),s=new oe({name:"Raster.ServicePixelValue",alias:"Service Pixel Value",domain:null,editable:!1,length:50,type:"string"}),n=new oe({name:"Raster.ServicePixelValue.Raw",alias:"Raw Service Pixel Value",domain:null,editable:!1,length:50,type:"string"});let l=this.fields?q(this.fields):[];l.push(s),((m=this.capabilities)==null?void 0:m.operations.supportsQuery)&&this.fields&&this.fields.length>0&&l.push(t),this.version>=10.4&&F(this.rasterFunctionInfos)&&this.rasterFunctionInfos.some(d=>d.name.toLowerCase()==="none")&&l.push(n),F(this.rasterFunctionInfos)&&this.rasterFunctionInfos.filter(d=>d.name.toLowerCase()!=="none").forEach(d=>{l.push(new oe({name:"Raster.ServicePixelValue."+d.name,alias:d.name,domain:null,editable:!1,length:50,type:"string"}))}),this._isVectorDataSet()&&(l.push(new oe({name:"Raster.Magnitude",alias:"Magnitude",domain:null,editable:!1,type:"double"})),l.push(new oe({name:"Raster.Direction",alias:"Direction",domain:null,editable:!1,type:"double"})));const{attributeTable:p}=(c=this.rasterInfo)!=null?c:{};if(F(p)){const d=p.fields.filter(h=>h.type!=="esriFieldTypeOID"&&h.name.toLowerCase()!=="value").map(h=>{const R=q(h);return R.name=e+h.name,R});l=l.concat(d)}return l}set renderingRule(e){let t=e;t&&t.rasterFunction&&(t=I.fromJSON(J(v({},t.toJSON()),{rasterFunction:t.rasterFunction,rasterFunctionArguments:t.rasterFunctionArguments}))),this._set("renderingRule",t)}readRenderingRule(e,t){const s=t.rasterFunctionInfos;return t.renderingRule||s&&s.length&&s[0].name!=="None"?this._isRFTJson(t.renderingRule)?I.fromJSON({rasterFunctionDefinition:t.renderingRule}):I.fromJSON(t.renderingRule||{rasterFunctionInfos:t.rasterFunctionInfos}):null}writeRenderingRule(e,t,s){const n=e.toJSON();n.rasterFunctionDefinition?t[s]=n.rasterFunctionDefinition:t[s]=n}readSpatialReference(e,t){const s=e||t.extent.spatialReference;return s?ae.fromJSON(s):null}readPixelType(e){return Ee.fromJSON(e)||e}writePixelType(e,t,s){(z(this.serviceRasterInfo)||this.pixelType!==this.serviceRasterInfo.pixelType)&&(t[s]=Ee.toJSON(e))}readVersion(e,t){let s=t.currentVersion;return s||(s=t.hasOwnProperty("fields")||t.hasOwnProperty("timeInfo")?10:9.3),s}applyFilter(e){let t=e;return this.pixelFilter&&(t=this._clonePixelData(e),this.pixelFilter(t)),t}async applyRenderer(e,t){let s=e;const{renderer:n,symbolizer:l,pixelFilter:p,bandIds:m}=this;if(!this._isPicture()&&n&&l&&!p){const c=JSON.stringify(this._cachedRendererJson)!==JSON.stringify(n.toJSON()),d=this._rasterJobHandler.instance;if(d){c&&(l.bind(),await d.updateSymbolizer(l,t),this._cachedRendererJson=n.toJSON());const h=await d.symbolize(v({bandIds:m},e),t);s={extent:e.extent,pixelBlock:h}}else s={extent:e.extent,pixelBlock:l.symbolize(v({bandIds:m},e))}}return s}destroy(){this._shutdownJobHandler()}increaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount++}decreaseRasterJobHandlerUsage(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()}async computeAngles(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeAngles)throw new k("imagery-layer:compute-angles","this operation is not supported on the input image service");return e=le(Ji,e).clone(),Oi(this.url,e,this._getRequestOptions(t))}async computePixelSpaceLocations(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputePixelLocation)throw new k("imagery-layer:compute-pixel-space-locations","this operation is not supported on the input image service");return e=le(Ei,e).clone(),Vi(this.url,e,this._getRequestOptions(t))}async computeHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeHistograms)throw new k("imagery-layer:compute-histograms","this operation is not supported on the input image service");e=le(ot,e).clone();const{raster:s,mosaicRule:n,renderingRule:l}=this;return l&&e.renderingRule==null&&(e.renderingRule=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),s&&e.raster==null&&(e.raster=s),Mi(this.url,e,this._getRequestOptions(t))}async computeStatisticsHistograms(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsComputeStatisticsHistograms)throw new k("imagery-layer:compute-statistics-histograms","this operation is not supported on the input image service");e=le(ot,e).clone();const{raster:s,mosaicRule:n,renderingRule:l}=this;return l&&e.renderingRule==null&&(e.renderingRule=l),n&&e.mosaicRule==null&&(e.mosaicRule=n),s&&e.raster==null&&(e.raster=s),ji(this.url,e,this._getRequestOptions(t))}getField(e){const{fieldsIndex:t}=this;return F(t)?t.get(e):void 0}getFieldDomain(e,t){const s=this.getField(e);return s?s.domain:null}async fetchImage(e,t,s,n={}){var m,c,d,h,R;if(e==null||t==null||s==null)throw new k("imagery-layer:fetch-image","Insufficient parameters for requesting an image. A valid extent, width and height values are required.");if(this.renderer||this.symbolizer){const b=await this.generateRasterInfo(this.renderingRule,{signal:n.signal});b&&(this.rasterInfo=b)}const l=this.getExportImageServiceParameters(e,t,s,n.timeExtent);if(l==null){if(n.requestAsImageElement&&this._canRequestImageElement(this.format)){const D=document.createElement("canvas");return D.width=t,D.height=s,{imageOrCanvasElement:D}}const b=(d=((m=this.bandIds)==null?void 0:m.length)||((c=this.rasterInfo)==null?void 0:c.bandCount))!=null?d:0,y=t*s,g=(R=(h=this.rasterInfo)==null?void 0:h.pixelType)!=null?R:"unknown",T=[];for(let D=0;D<b;D++)T.push(Pe.createEmptyBand(g,y));return{pixelData:{pixelBlock:new Pe({width:t,height:s,pixels:T,mask:new Uint8Array(y),pixelType:g}),extent:e}}}const p={imageServiceParameters:l,imageProps:{extent:e,width:t,height:s,format:this.format},requestAsImageElement:n.requestAsImageElement&&!this.pixelFilter||!1,signal:n.signal};return this._requestArrayBuffer(p)}fetchKeyProperties(e){return j(o(this.parsedUrl)+"/keyProperties",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>t.data)}fetchRasterAttributeTable(e){return this.version<10.1?Promise.reject(new k("#fetchRasterAttributeTable()","Failed to get rasterAttributeTable")):j(o(this.parsedUrl)+"/rasterAttributeTable",{query:this._getQueryParams({renderingRule:this.version>=10.3?e==null?void 0:e.renderingRule:null})}).then(t=>He.fromJSON(t.data))}getCatalogItemRasterInfo(e,t){const s=J(v({},t),{query:this._getQueryParams()});return $i(o(this.parsedUrl),e,s)}async getCatalogItemICSInfo(e,t){var X,qe,Le;const{data:s}=await j(o(this.parsedUrl)+"/"+e+"/info/ics",v({query:this._getQueryParams()},t)),n=s&&s.ics;if(!n)return;let l=null;try{l=(await j(o(this.parsedUrl)+"/"+e+"/info",v({query:this._getQueryParams()},t))).data.extent}catch{}if(!l||!l.spatialReference)return{ics:n,icsToPixelTransform:null,icsExtent:null,northDirection:null};const p=this.version>=10.7?j(o(this.parsedUrl)+"/"+e+"/info/icstopixel",v({query:this._getQueryParams()},t)).then(x=>x.data).catch(()=>({})):{},m=l.spatialReference,c={geometries:JSON.stringify({geometryType:"esriGeometryEnvelope",geometries:[l]}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},d=j(o(this.parsedUrl)+"/project",v({query:this._getQueryParams(c)},t)).then(x=>x.data).catch(()=>({})),h=5,R=(l.xmin+l.xmax)/2,b=(l.ymax-l.ymin)/(h+1),y=l.ymin+b,g=[];for(let x=0;x<h;x++)g.push({x:R,y:y+b*x});const T={geometries:JSON.stringify({geometryType:"esriGeometryPoint",geometries:g}),inSR:m.wkid||JSON.stringify(m),outSR:"0:"+e},D=j(o(this.parsedUrl)+"/project",v({query:this._getQueryParams(T)},t)).then(x=>x.data).catch(()=>({})),C=await Promise.all([p,d,D]);let f=C[0].ipxf;if(f==null){const x=(X=n.geodataXform)==null?void 0:X.xf_0;((qe=x==null?void 0:x.name)==null?void 0:qe.toLowerCase())==="topup"&&((Le=x==null?void 0:x.coefficients)==null?void 0:Le.length)===6&&(f={affine:{name:"ics [sensor: Frame] to pixel (column, row) transformation",coefficients:x.coefficients,cellsizeRatio:0,type:"GeometricXform"}})}const S=be.fromJSON(C[1]&&C[1].geometries&&C[1].geometries[0]);S&&(S.spatialReference=new ae({wkid:0,imageCoordinateSystem:n}));const w=C[2].geometries?C[2].geometries.filter(x=>x!=null&&x.x!=null&&x.y!=null&&x.x!=="NaN"&&x.y!=="NaN"):[],N=w.length;if(N<3)return{ics:n,icsToPixelTransform:f,icsExtent:S,northDirection:null};let P=0,$=0,B=0,ye=0;for(let x=0;x<N;x++)P+=w[x].x,$+=w[x].y,B+=w[x].x*w[x].x,ye+=w[x].x*w[x].y;const W=(N*ye-P*$)/(N*B-P*P);let re=0;const se=w[h-1].x>w[0].x,ne=w[h-1].y>w[0].y;return W===1/0?re=ne?90:270:W===0?re=se?0:180:W>0?re=se?180*Math.atan(W)/Math.PI:180*Math.atan(W)/Math.PI+180:W<0&&(re=ne?180+180*Math.atan(W)/Math.PI:360+180*Math.atan(W)/Math.PI),{ics:n,icsToPixelTransform:f,icsExtent:S,northDirection:re}}async generateRasterInfo(e,t){var l;if(this.serviceRasterInfo&&(!e||((l=e.functionName)==null?void 0:l.toLowerCase())==="none"||this._isVectorFieldResampleFunction(e)))return this.serviceRasterInfo;const s=ki(e);if(!s)return null;if(this._functionRasterInfos[s])return this._functionRasterInfos[s];const n=this._generateRasterInfo(e,t);this._functionRasterInfos[s]=n;try{return await n}catch{return this._functionRasterInfos[s]=null,null}}getExportImageServiceParameters(e,t,s,n){var T,D,C;e=e.clone().shiftCentralMeridian();const l=at(e.spatialReference,o(this.parsedUrl));this.pixelType!==((T=this.serviceRasterInfo)==null?void 0:T.pixelType)&&(this.exportImageServiceParameters.pixelType=this.pixelType);const p=this.exportImageServiceParameters.toJSON(),{bandIds:m,noData:c}=p;let{renderingRule:d}=p;const h=(D=this.renderingRule)==null?void 0:D.rasterFunctionDefinition,R=!this.renderer||this.renderer.type==="raster-stretch";if((m==null?void 0:m.length)&&this._hasRenderingRule(this.renderingRule)&&!h&&R){const f={rasterFunction:"ExtractBand",rasterFunctionArguments:{BandIds:m}};if(d.rasterFunction==="Stretch")f.rasterFunctionArguments.Raster=d.rasterFunctionArguments.Raster,d.rasterFunctionArguments.Raster=f;else if(d.rasterFunction==="Colormap"){const S=d.rasterFunctionArguments.Raster;(S==null?void 0:S.rasterFunction)==="Stretch"?(f.rasterFunctionArguments.Raster=S.rasterFunctionArguments.Raster,S.rasterFunctionArguments.Raster=f):(f.rasterFunctionArguments.Raster=S,d.rasterFunctionArguments.Raster=f)}else f.rasterFunctionArguments.Raster=d,d=f;p.bandIds=void 0}else p.bandIds=m==null?void 0:m.join(",");c instanceof Array&&c.length>0&&(p.noData=c.join(","));const b=this._serviceSupportsMosaicRule?this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,n):null;p.mosaicRule=F(b)?JSON.stringify(b):null;const{multidimensionalSubset:y}=this;if(y&&F(b)&&b.multidimensionalDefinition&&Be(b.multidimensionalDefinition,y,!0))return null;p.renderingRule=this._getRenderingRuleString(I.fromJSON(d));const g={};if(n){const{start:f,end:S}=n.toJSON();let w;if(f&&S&&f===S?(g.time=""+f,w=[f]):f==null&&S==null||(g.time=`${f!=null?f:"null"},${S!=null?S:"null"}`,w=f!=null&&S!=null?[f,S]:[f!=null?f:S]),w&&y){const N=y.dimensions.find(({name:$})=>$==="StdTime");if(w.length===2&&N.extent.length){if(w[0]=Math.max(w[0],N.extent[0]),w[1]=Math.min(w[1],(C=N.extent[1])!=null?C:N.extent[0]),w[1]<w[0])return null;g.time=w.join()}const P=new Ne({variableName:"",dimensionName:"StdTime",isSlice:w.length===1,values:w});if(Be([P],y,!0))return null}}return v(v({bbox:e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:t+","+s},p),g)}async getSamples(e,t){var n;if(!((n=await this._fetchCapabilities(t==null?void 0:t.signal))==null?void 0:n.operations.supportsGetSamples))throw new k("imagery-layer:get-samples","getSamples operation is not supported on the input image service");e=le(qi,e).clone();const{raster:s}=this;return s&&e.raster==null&&(e.raster=s),Ai(this.url,e,this._getRequestOptions(t))}async identify(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsIdentify)throw new k("imagery-layer:query-rasters","query operation is not supported on the input image service");e=le(lt,e).clone();const{raster:s,mosaicRule:n,renderingRule:l}=this;if(l&&e.renderingRule==null&&(e.renderingRule=l),n&&e.mosaicRule==null){const p=this._combineMosaicRuleWithTimeExtent(n,e.timeExtent);e.mosaicRule=wt(p)}return s&&e.raster==null&&(e.raster=s),nt(this.url,e,this._getRequestOptions(t))}createQuery(){const e=new De;return e.outFields=["*"],e.returnGeometry=!0,e.where=this.definitionExpression||"1=1",e}async queryRasters(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),St(this.url,e,t)}async queryObjectIds(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),xt(this.url,e,t)}async queryRasterCount(e,t){return{query:e,requestOptions:t}=await this._prepareForQuery(e,t),It(this.url,e,t)}async queryVisibleRasters(e,t){var C,f,S,w;if(!e)throw new k("imagery-layer: query-visible-rasters","missing query parameter");await this.load();const{pixelSize:s,returnDomainValues:n,returnTopmostRaster:l,showNoDataRecords:p}=t||{pixelSize:null,returnDomainValues:!1,returnTopmostRaster:!1,showNoDataRecords:!1};let m=!1,c=null,d=null;const h="raster.servicepixelvalue",R=this._rasterFunctionNamesIndex;if(F(e.outFields)&&(m=e.outFields.some(N=>!N.toLowerCase().includes(h)),this.version>=10.4)){const N=e.outFields.filter($=>$.toLowerCase().includes(h)&&$.length>h.length).map($=>{const B=$.slice(h.length+1);return[this._updateRenderingRulesFunctionName(B,R),B]});c=N.map($=>new I({functionName:$[0]})),d=N.map($=>$[1]);const{renderingRule:P}=this;c.length===0?(P==null?void 0:P.functionName)?(c.push(P),d.push(P.functionName)):c=null:(P==null?void 0:P.functionName)&&!c.some($=>$.functionName===P.functionName)&&(c.push(P),d.push(P.functionName))}const b=z(e.outSpatialReference)||e.outSpatialReference.equals(this.spatialReference),y=e.timeExtent||this.timeExtent,g=this._combineMosaicRuleWithTimeExtent(this.exportImageServiceParameters.mosaicRule,y),T=this._getQueryParams({geometry:e.geometry,timeExtent:y,mosaicRule:g,renderingRule:this.version<10.4?this.renderingRule:null,renderingRules:c,pixelSize:s,returnCatalogItems:m,returnGeometry:b,raster:this.raster,maxItemCount:l?1:null});delete T.f;const D=new lt(T);try{await this.generateRasterInfo(this.renderingRule);const N=await nt(this.url,D,{signal:t==null?void 0:t.signal,query:v({},this.customParameters)}),P=e.outFields,$=N.value!=null&&N.value.toLowerCase().includes("nodata");if(!(m&&!b&&((C=N==null?void 0:N.catalogItems)==null?void 0:C.features.length)&&(p||!$)))return this._processVisibleRastersResponse(N,{returnDomainValues:n,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P});const B=this.objectIdField||"ObjectId",ye=(S=(f=N.catalogItems)==null?void 0:f.features)!=null?S:[],W=ye.map(ne=>{var X;return(X=ne.attributes)==null?void 0:X[B]}),re=new De({objectIds:W,returnGeometry:!0,outSpatialReference:e.outSpatialReference,outFields:[B]}),se=await this.queryRasters(re);return((w=se==null?void 0:se.features)==null?void 0:w.length)&&se.features.forEach(ne=>{ye.forEach(X=>{X.attributes[B]===ne.attributes[B]&&(X.geometry=new Ft(ne.geometry),F(e.outSpatialReference)&&(X.geometry.spatialReference=e.outSpatialReference))})}),this._processVisibleRastersResponse(N,{returnDomainValues:n,templateRRFunctionNames:d,showNoDataRecords:p,templateFields:P})}catch{throw new k("imagery-layer:query-visible-rasters","encountered error when querying visible rasters")}}async fetchVariableStatisticsHistograms(e,t){const s=j(o(this.parsedUrl)+"/statistics",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.statistics}),n=j(o(this.parsedUrl)+"/histograms",{query:this._getQueryParams({variable:e}),signal:t}).then(p=>{var m;return(m=p.data)==null?void 0:m.histograms}),l=await Promise.all([s,n]);return l[0]&&l[0].forEach(p=>{p.avg=p.mean,p.stddev=p.standardDeviation}),{statistics:l[0]||null,histograms:l[1]||null}}async createFlowMesh(e,t){const s=this._rasterJobHandler.instance;return s?s.createFlowMesh(e,t):ci(e.meshType,e.simulationSettings,e.flowData,F(t.signal)?t.signal:new AbortController().signal)}getMultidimensionalSubsetVariables(e){const t=e!=null?e:this.multidimensionalInfo;return ri(this.multidimensionalSubset,t)}async _fetchService(e){await this._fetchServiceInfo(e),this.rasterInfo||(this.rasterInfo=this.serviceRasterInfo);const t=this.sourceJSON,s=F(this.serviceRasterInfo)?Promise.resolve(this.serviceRasterInfo):Kt(o(this.parsedUrl),t,{signal:e,query:this._getQueryParams()}).then(p=>(this._set("serviceRasterInfo",p),p)),n=this._hasRenderingRule(this.renderingRule)?this.generateRasterInfo(this.renderingRule,{signal:e}):null,l=this._getRasterFunctionInfos();return Promise.all([s,n,l]).then(p=>{p[1]?this._set("rasterInfo",p[1]):this._set("rasterInfo",p[0]),p[2]&&this._set("rasterFunctionInfos",p[2]),this.renderer&&!this._isSupportedRenderer(this.renderer)&&(this._set("renderer",null),Ge.getLogger(this.declaredClass).warn("ArcGISImageService","Switching to the default renderer. Renderer applied is not valid for this Imagery Layer")),this._set("renderer",this._configRenderer(this.renderer)),this.addHandles([Tt(()=>this.renderingRule,c=>{(this.renderer||this.symbolizer||this.popupEnabled&&this.popupTemplate)&&this.generateRasterInfo(c).then(d=>{d&&(this.rasterInfo=d)})})]);const{serviceRasterInfo:m}=this;m&&F(m.multidimensionalInfo)&&this._updateMultidimensionalDefinition(m)})}_combineMosaicRuleWithTimeExtent(e,t){var b;const s=this.timeInfo;if(z(e)||z(this.multidimensionalInfo)||z(t)||z(s==null?void 0:s.startField))return e;const{startField:n}=s,l=this.multidimensionalInfo.variables.some(y=>y.dimensions.some(g=>g.name===n))?n:"StdTime";if(e=e.clone(),this.sourceType==="mosaic-dataset")return e.multidimensionalDefinition=(b=e.multidimensionalDefinition)==null?void 0:b.filter(y=>y.dimensionName!==l),this._cleanupMultidimensionalDefinition(e);e.multidimensionalDefinition=e.multidimensionalDefinition||[];const p=e.multidimensionalDefinition.filter(y=>y.dimensionName===l),m=F(t.start)?t.start.getTime():null,c=F(t.end)?t.end.getTime():null,d=m==null||c==null||m===c,h=d?[m||c]:[[m,c]],R=this.version>=10.8;if(p.length)p.forEach(y=>{y.dimensionName===l&&(R?(y.dimensionName=null,y.isSlice=!1,y.values=[]):(y.isSlice=d,y.values=h))});else if(!R){const y=e.multidimensionalDefinition.filter(g=>g.variableName!=null&&g.dimensionName==null);y.length?y.forEach(g=>{g.dimensionName=l,g.isSlice=d,g.values=h}):e.multidimensionalDefinition.push(new Ne({variableName:"",dimensionName:l,isSlice:d,values:h}))}return this._cleanupMultidimensionalDefinition(e)}_cleanupMultidimensionalDefinition(e){return z(e)?null:(e.multidimensionalDefinition&&(e.multidimensionalDefinition=e.multidimensionalDefinition.filter(t=>!(!t.variableName&&!t.dimensionName)),e.multidimensionalDefinition.length===0&&(e.multidimensionalDefinition=null)),this.sourceType!=="mosaic-dataset"&&e.multidimensionalDefinition==null?null:e)}async _prepareForQuery(e,t){if(!(await this._fetchCapabilities(t==null?void 0:t.signal)).operations.supportsQuery)throw new k("imagery-layer:query-rasters","query operation is not supported on the input image service");return e=F(e)?le(De,e):this.createQuery(),t=this._getRequestOptions(t),this.raster&&(t.query=J(v({},t.query),{raster:this.raster})),{query:e,requestOptions:t}}async _initJobHandler(){if(this._rasterJobHandler.connectionPromise!=null)return this._rasterJobHandler.connectionPromise;const e=new ii;this._rasterJobHandler.connectionPromise=e.initialize().then(()=>{this._rasterJobHandler.instance=e},()=>{}),await this._rasterJobHandler.connectionPromise}_shutdownJobHandler(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null}_isSupportedRenderer(e){const{rasterInfo:t,renderingRule:s}=this;return e.type==="unique-value"&&this._hasRenderingRule(s)&&(t==null?void 0:t.bandCount)===1&&["u8","s8"].includes(t.pixelType)||t!=null&&e!=null&&Zt(t).includes(e.type)}async _fetchCapabilities(e){return this.capabilities||await this._fetchServiceInfo(e),this.capabilities}async _fetchServiceInfo(e){var s;let t=this.sourceJSON;if(!t){const{data:n,ssl:l}=await j(o(this.parsedUrl),{query:this._getQueryParams(),signal:e});t=n,this.sourceJSON=t,l&&(this.url=this.url.replace(/^http:/i,"https:"))}if(((s=t.capabilities)==null?void 0:s.toLowerCase().split(",").map(n=>n.trim()).indexOf("tilesonly"))>-1)throw new k("imagery-layer:fetch-service-info","use ImageryTileLayer to open tiles-only image services");this.read(t,{origin:"service",url:this.parsedUrl})}_isMosaicDataset(e){var t;return e.serviceSourceType?e.serviceSourceType==="esriImageServiceSourceTypeMosaicDataset":((t=e.fields)==null?void 0:t.length)>0}_isMosaicRuleSupported(e){var n;if(!e)return!1;const t=this._isMosaicDataset(e),s=e.currentVersion>=10.71&&e.hasMultidimensions&&!(((n=e.fields)==null?void 0:n.length)>1);return t||s}_isVectorFieldResampleFunction(e){if(z(e))return!1;const{functionName:t,functionArguments:s}=e,n=(t==null?void 0:t.toLowerCase())==="resample",l=(s==null?void 0:s.ResampleType)||(s==null?void 0:s.resampleType);return n&&(l===7||l===10)}_isPicture(){return!this.format||this.format.includes("jpg")||this.format.includes("png")}_configRenderer(e){var t,s;if(!this._isPicture()&&!this.pixelFilter||this._isVectorDataSet()){if(!this.bandIds&&this.rasterInfo&&this.rasterInfo.bandCount>=3){const l=Xt(this.rasterInfo);!l||this.rasterInfo.bandCount===3&&l[0]===0&&l[1]===1&&l[2]===2||(this.bandIds=l)}e||(e=Yt(this.rasterInfo,{bandIds:this.bandIds,variableName:this.renderingRule?null:(s=(t=this.mosaicRule)==null?void 0:t.multidimensionalDefinition)==null?void 0:s[0].variableName}));const n=ei(e.toJSON());this.symbolizer?(this.symbolizer.rendererJSON=n,this.symbolizer.rasterInfo=this.rasterInfo):this.symbolizer=new ui({rendererJSON:n,rasterInfo:this.rasterInfo}),this.symbolizer.bind().success||(this.symbolizer=null)}return e}_clonePixelData(e){return e==null?e:{extent:e.extent&&e.extent.clone(),pixelBlock:F(e.pixelBlock)?e.pixelBlock.clone():null}}_getQueryParams(e){e&&F(e.renderingRule)&&typeof e.renderingRule!="string"&&(e.renderingRule=this._getRenderingRuleString(e.renderingRule));const{raster:t,viewId:s}=this;return v(v({raster:t,viewId:s,f:"json"},e),this.customParameters)}_getRequestOptions(e){return J(v({},e),{query:v(v({},e==null?void 0:e.query),this.customParameters)})}_decodePixelBlock(e,t,s){return this._rasterJobHandler.instance?this._rasterJobHandler.instance.decode({data:e,options:t}):Xe(e,t,s)}async _getRasterFunctionInfos(e){var s;const t=this.sourceJSON.rasterFunctionInfos;return this.loaded?t:t&&this.version>=10.3?t.length===1&&t[0].name.toLowerCase()==="none"?t:(s=(await j(o(this.parsedUrl)+"/rasterFunctionInfos",{query:this._getQueryParams(),signal:e})).data)==null?void 0:s.rasterFunctionInfos:null}_canRequestImageElement(e){return!this.pixelFilter&&(!e||e.includes("png"))}async _requestArrayBuffer(e){const{imageProps:t,requestAsImageElement:s,signal:n}=e;if(s&&this._canRequestImageElement(t.format))return{imageOrCanvasElement:(await j(o(this.parsedUrl)+"/exportImage",{responseType:"image",query:this._getQueryParams(v(v({f:"image"},this.refreshParameters),e.imageServiceParameters)),signal:n})).data,params:t};const l=this._initJobHandler(),p=j(o(this.parsedUrl)+"/exportImage",{responseType:"array-buffer",query:this._getQueryParams(v({f:"image"},e.imageServiceParameters)),signal:n}),m=(await Promise.all([p,l]))[0].data,c=t.format||"jpgpng";let d=c;if(d!=="bsq"&&d!=="bip"&&(d=pi(m)),!d)throw new k("imagery-layer:fetch-image","unsupported format signature "+String.fromCharCode.apply(null,new Uint8Array(m)));const h={signal:n};return{pixelData:{pixelBlock:await(c==="gif"||c==="bmp"||c.includes("png")&&(d==="png"||d==="jpg")?Xe(m,v({useCanvas:!0},t),h):this._decodePixelBlock(m,{width:t.width,height:t.height,planes:null,pixelType:null,noDataValue:null,format:c},h)),extent:t.extent},params:t}}_generateRasterInfo(e,t){const s=J(v({},t),{query:this._getQueryParams()});return ti(o(this.parsedUrl),e,s)}_isValidCustomizedMosaicRule(e){var t;return e&&JSON.stringify(e.toJSON())!==JSON.stringify((t=this.defaultMosaicRule)==null?void 0:t.toJSON())}_updateMultidimensionalDefinition(e){var s;if(this._isValidCustomizedMosaicRule(this.mosaicRule))return;const t=si(e,{multidimensionalSubset:this.multidimensionalSubset});if(F(t)&&t.length>0){this.mosaicRule=this.mosaicRule||new U;const n=this.mosaicRule.multidimensionalDefinition;!this.sourceJSON.defaultVariableName&&this.renderingRule&&((s=this.renderingRule.functionName)==null?void 0:s.toLowerCase())!=="none"&&t.forEach(l=>l.variableName=""),(!n||n&&n.length<=0)&&(this.mosaicRule.multidimensionalDefinition=t)}}_processVisibleRastersResponse(e,t){var C;t=t||{};const s=e.value,{templateRRFunctionNames:n,showNoDataRecords:l,returnDomainValues:p,templateFields:m}=t,c=e.processedValues;let d=e.catalogItems&&e.catalogItems.features,h=e.properties&&e.properties.Values&&e.properties.Values.map(f=>f.replace(/ /gi,", "))||[];const R=this.objectIdField||"ObjectId",b=typeof s=="string"&&s.toLowerCase().includes("nodata"),y=[];if(s&&!d&&!b){const f={};f[R]=0,h=[s],d=[new Dt(this.fullExtent,null,f)]}if(!d)return[];let g,T,D;this._updateResponseFieldNames(d,m),b&&!l&&(d=[]);for(let f=0;f<d.length;f++){if(g=d[f],s!=null){if(T=h[f],D=this.renderingRule&&c&&c.length>0&&n&&n.length>0&&n.includes(this.renderingRule.functionName)?c[n.indexOf(this.renderingRule.functionName)]:s,T.toLowerCase()==="nodata"&&!l)continue;const S="Raster.ItemPixelValue",w="Raster.ServicePixelValue";g.attributes[S]=T,g.attributes[w]=D,this._updateFeatureWithMagDirValues(g,T);const N=this.fields&&this.fields.length>0;let P=this.renderingRule&&F((C=this.serviceRasterInfo)==null?void 0:C.attributeTable)?N?T:s:D;this.renderingRule||(P=N?T:s),this._updateFeatureWithRasterAttributeTableValues(g,P)}if(g.sourceLayer=g.layer=this,p&&this._updateFeatureWithDomainValues(g),n&&c&&n.length===c.length)for(let S=0;S<n.length;S++){const w="Raster.ServicePixelValue."+n[S];g.attributes[w]=c[S]}y.push(d[f])}return y}_updateFeatureWithRasterAttributeTableValues(e,t){var d;const s=this.rasterInfo&&this.rasterInfo.attributeTable||((d=this.serviceRasterInfo)==null?void 0:d.attributeTable);if(z(s))return;const{features:n,fields:l}=s,p=l.map(h=>h.name).filter(h=>h.toLowerCase()==="value"),m=p&&p[0];if(!m)return;const c=n.filter(h=>h.attributes[m]===(t!=null?parseInt(t,10):null));c&&c[0]&&l.forEach(h=>{const R=this._rasterAttributeTableFieldPrefix+h.name;e.attributes[R]=c[0].attributes[h.name]})}_updateFeatureWithMagDirValues(e,t){if(!this._isVectorDataSet())return;const s=t.split(/,\s*/).map(c=>parseFloat(c)),n=s.map(c=>[c]),l=s.map(c=>({minValue:c,maxValue:c,noDataValue:null})),p=new Pe({height:1,width:1,pixelType:"f32",pixels:n,statistics:l});this.pixelFilter!=null&&this.pixelFilter({pixelBlock:p,extent:new be(0,0,0,0,this.spatialReference)});const m=this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"?[p.pixels[0][0],p.pixels[1][0]]:mi([p.pixels[0][0],p.pixels[1][0]]);e.attributes["Raster.Magnitude"]=m[0],e.attributes["Raster.Direction"]=m[1]}_updateFeatureWithDomainValues(e){const t=this.fields&&this.fields.filter(s=>s.domain&&s.domain.type==="coded-value");t!=null&&t.forEach(s=>{const n=e.attributes[s.name];if(n!=null){const l=s.domain.codedValues.find(p=>p.code===n);l&&(e.attributes[s.name]=l.name)}})}_updateResponseFieldNames(e,t){if(!t||t.length<1)return;const s=this.fieldsIndex;z(s)||e.forEach(n=>{var l;if(n&&n.attributes)for(const p of t){const m=(l=s.get(p))==null?void 0:l.name;m&&m!==p&&(n.attributes[p]=n.attributes[m],delete n.attributes[m])}})}_getRenderingRuleString(e){var t;if(this._hasRenderingRule(e)){let s=e.toJSON();return s=(t=s.rasterFunctionDefinition)!=null?t:s,(s.thumbnail||s.thumbnailEx)&&(s.thumbnail=s.thumbnailEx=null),JSON.stringify(s)}return null}_hasRenderingRule(e){return e!=null&&e.functionName!=null&&e.functionName.toLowerCase()!=="none"}_updateRenderingRulesFunctionName(e,t){if(!e||e.length<1)return;if(e==="Raw")return e.replace("Raw","None");const s=e.toLowerCase().replace(/ /gi,"_");return t.has(s)?t.get(s):e}_isRFTJson(e){return e&&e.name&&e.arguments&&e.function&&e.hasOwnProperty("functionType")}_isVectorDataSet(){return this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir"}_readCapabilities(e){const t=e.capabilities?e.capabilities.toLowerCase().split(",").map(h=>h.trim()):["image","catalog"],{currentVersion:s,advancedQueryCapabilities:n,maxRecordCount:l}=e,p=t.includes("image"),m=e.serviceDataType==="esriImageServiceDataTypeElevation",c=!!(e.spatialReference||e.extent&&e.extent.spatialReference),d=t.includes("edit");return{data:{supportsAttachment:!1},operations:{supportsComputeHistograms:p,supportsExportImage:p,supportsIdentify:p,supportsMeasure:t.includes("mensuration")&&c,supportsDownload:t.includes("download"),supportsQuery:t.includes("catalog")&&e.fields&&e.fields.length>0,supportsGetSamples:s>=10.2&&p,supportsProject:s>=10.3&&p,supportsComputeStatisticsHistograms:s>=10.4&&p,supportsQueryBoundary:s>=10.6&&p,supportsCalculateVolume:s>=10.7&&m,supportsComputePixelLocation:s>=10.7&&t.includes("catalog"),supportsComputeAngles:s>=10.91,supportsAdd:d,supportsDelete:d,supportsEditing:d,supportsUpdate:d,supportsCalculate:!1,supportsTruncate:!1,supportsValidateSql:!1,supportsChangeTracking:!1,supportsQueryAttachments:!1,supportsResizeAttachments:!1,supportsSync:!1,supportsExceedsLimitStatistics:!1,supportsQueryAnalytics:!1,supportsQueryTopFeatures:!1},query:{maxRecordCount:l,maxRecordCountFactor:void 0,supportsStatistics:!!(n==null?void 0:n.supportsStatistics),supportsOrderBy:!!(n==null?void 0:n.supportsOrderBy),supportsDistinct:!!(n==null?void 0:n.supportsDistinct),supportsPagination:!!(n==null?void 0:n.supportsPagination),supportsStandardizedQueriesOnly:!!(n==null?void 0:n.useStandardizedQueries),supportsPercentileStatistics:!!(n==null?void 0:n.supportsPercentileStatistics),supportsCentroid:!!(n==null?void 0:n.supportsReturningGeometryCentroid),supportsDistance:!!(n==null?void 0:n.supportsQueryWithDistance),supportsExtent:!!(n==null?void 0:n.supportsReturningQueryExtent),supportsGeometryProperties:!!(n==null?void 0:n.supportsReturningGeometryProperties),supportsHavingClause:!!(n==null?void 0:n.supportsHavingClause),supportsQuantization:!1,supportsQuantizationEditMode:!1,supportsQueryGeometry:!1,supportsResultType:!1,supportsMaxRecordCountFactor:!1,supportsSqlExpression:!1,supportsTopFeaturesQuery:!1,supportsQueryByOthers:!1,supportsHistoricMoment:!1,supportsFormatPBF:!1,supportsDisjointSpatialRelationship:!1,supportsCacheHint:!1,supportsSpatialAggregationStatistics:!1,supportedSpatialAggregationStatistics:{envelope:!1,centroid:!1,convexHull:!1},supportsDefaultSpatialReference:!!(n==null?void 0:n.supportsDefaultSR),supportsFullTextSearch:!1,supportsCompactGeometry:!1,standardMaxRecordCount:void 0,tileMaxRecordCount:void 0}}}};function o(e){var t;return(t=e==null?void 0:e.path)!=null?t:""}return a([u()],i.prototype,"_functionRasterInfos",void 0),a([u()],i.prototype,"_rasterJobHandler",void 0),a([u()],i.prototype,"_cachedRendererJson",void 0),a([u({readOnly:!0})],i.prototype,"_serviceSupportsMosaicRule",void 0),a([M("_serviceSupportsMosaicRule",["currentVersion","fields"])],i.prototype,"readServiceSupportsMosaicRule",null),a([u()],i.prototype,"_rasterAttributeTableFieldPrefix",void 0),a([u({readOnly:!0})],i.prototype,"_rasterFunctionNamesIndex",null),a([u()],i.prototype,"adjustAspectRatio",void 0),a([u({type:[pe],json:{write:!0}})],i.prototype,"bandIds",void 0),a([M("bandIds")],i.prototype,"readBandIds",null),a([u({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",void 0),a([M("service","capabilities",["capabilities","currentVersion","serviceDataType"])],i.prototype,"readCapabilities",null),a([u({type:Number})],i.prototype,"compressionQuality",void 0),a([V("compressionQuality")],i.prototype,"writeCompressionQuality",null),a([u({type:Number})],i.prototype,"compressionTolerance",void 0),a([V("compressionTolerance")],i.prototype,"writeCompressionTolerance",null),a([u({json:{read:{source:"copyrightText"}}})],i.prototype,"copyright",void 0),a([u({readOnly:!0,dependsOn:["_serviceSupportsMosaicRule"]})],i.prototype,"defaultMosaicRule",void 0),a([M("defaultMosaicRule",["defaultMosaicMethod"])],i.prototype,"readDefaultMosaicRule",null),a([u({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),a([u({readOnly:!0,constructOnly:!0})],i.prototype,"exportImageServiceParameters",void 0),a([u()],i.prototype,"rasterInfo",void 0),a([u({readOnly:!0,type:[oe]})],i.prototype,"fields",void 0),a([u({readOnly:!0})],i.prototype,"fieldsIndex",null),a([u({type:["png","png8","png24","png32","jpg","bmp","gif","jpgpng","lerc","tiff"],json:{write:!0}})],i.prototype,"format",null),a([M("service","format",["serviceDataType"])],i.prototype,"readFormat",null),a([u({type:be})],i.prototype,"fullExtent",void 0),a([u({readOnly:!0})],i.prototype,"hasMultidimensions",void 0),a([u({json:{read:{source:"maxImageHeight"}}})],i.prototype,"imageMaxHeight",void 0),a([u({json:{read:{source:"maxImageWidth"}}})],i.prototype,"imageMaxWidth",void 0),a([u({type:String,json:{type:ie.jsonValues,read:ie.read,write:ie.write}})],i.prototype,"interpolation",void 0),a([u()],i.prototype,"minScale",void 0),a([M("service","minScale")],i.prototype,"readMinScale",null),a([u()],i.prototype,"maxScale",void 0),a([M("service","maxScale")],i.prototype,"readMaxScale",null),a([u({type:U})],i.prototype,"mosaicRule",null),a([M("mosaicRule",["mosaicRule","defaultMosaicMethod"])],i.prototype,"readMosaicRule",null),a([V("mosaicRule")],i.prototype,"writeMosaicRule",null),a([u()],i.prototype,"multidimensionalInfo",null),a([u({type:Qt,json:{write:!0}})],i.prototype,"multidimensionalSubset",void 0),a([u({json:{type:pe}})],i.prototype,"noData",void 0),a([V("noData")],i.prototype,"writeNoData",null),a([u({type:String,json:{type:ge.jsonValues,read:ge.read,write:ge.write}})],i.prototype,"noDataInterpretation",void 0),a([u({type:String,readOnly:!0,json:{read:{source:["fields"]}}})],i.prototype,"objectIdField",void 0),a([M("objectIdField")],i.prototype,"readObjectIdField",null),a([u({})],i.prototype,"geometryType",void 0),a([u({})],i.prototype,"typeIdField",void 0),a([u({})],i.prototype,"types",void 0),a([u({readOnly:!0})],i.prototype,"parsedUrl",null),a([u({type:Function})],i.prototype,"pixelFilter",void 0),a([u()],i.prototype,"raster",void 0),a([u({readOnly:!0})],i.prototype,"sourceType",void 0),a([M("sourceType",["serviceSourceType","fields"])],i.prototype,"readSourceType",null),a([u()],i.prototype,"viewId",void 0),a([u({types:Gt,json:{name:"layerDefinition.drawingInfo.renderer",origins:{"web-scene":{types:Bt,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&e.type!=="vector-field"&&e.type!=="flow"})}}}}})],i.prototype,"renderer",null),a([M("renderer")],i.prototype,"readRenderer",null),a([V("renderer")],i.prototype,"writeRenderer",null),a([u()],i.prototype,"symbolizer",void 0),a([u(ft)],i.prototype,"opacity",void 0),a([u({readOnly:!0})],i.prototype,"rasterFields",null),a([u({constructOnly:!0})],i.prototype,"rasterFunctionInfos",void 0),a([u({type:I})],i.prototype,"renderingRule",null),a([M("renderingRule",["renderingRule","rasterFunctionInfos"])],i.prototype,"readRenderingRule",null),a([V("renderingRule")],i.prototype,"writeRenderingRule",null),a([u()],i.prototype,"serviceDataType",void 0),a([u({readOnly:!0,type:ae})],i.prototype,"spatialReference",void 0),a([M("spatialReference",["spatialReference","extent"])],i.prototype,"readSpatialReference",null),a([u({json:{type:Ee.jsonValues}})],i.prototype,"pixelType",void 0),a([M("pixelType")],i.prototype,"readPixelType",null),a([V("pixelType")],i.prototype,"writePixelType",null),a([u({constructOnly:!0,type:Ze})],i.prototype,"serviceRasterInfo",void 0),a([u()],i.prototype,"sourceJSON",void 0),a([u(Rt)],i.prototype,"url",void 0),a([u({readOnly:!0})],i.prototype,"version",void 0),a([M("version",["currentVersion","fields","timeInfo"])],i.prototype,"readVersion",null),i=a([L("esri.layers.mixins.ArcGISImageService")],i),i};let Q=class extends Ct(_t(Ot(Vt(jt(Hi(Mt(At($t(Jt(Et)))))))))){constructor(...r){super(...r),this.legendEnabled=!0,this.isReference=null,this.operationalLayerType="ArcGISImageServiceLayer",this.popupEnabled=!0,this.popupTemplate=null,this.type="imagery"}normalizeCtorArgs(r,i){return typeof r=="string"?v({url:r},i):r}load(r){const i=F(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"]},r).catch(qt).then(()=>this._fetchService(i))),Promise.resolve(this)}writeOperationalLayerType(r,i,o){var t;const e=((t=this.renderer)==null?void 0:t.type)==="vector-field";i[o]=e?"ArcGISImageServiceVectorLayer":"ArcGISImageServiceLayer"}get defaultPopupTemplate(){return this.createPopupTemplate()}createPopupTemplate(r){const i=this.rasterFields,o=this.title,e=new Set;let t=!1,s=!1;this.capabilities&&(t=this.capabilities.operations.supportsQuery&&this.fields&&this.fields.length>0,s=this.serviceDataType==="esriImageServiceDataTypeVector-UV"||this.serviceDataType==="esriImageServiceDataTypeVector-MagDir");const n=new Set;t&&n.add("raster.itempixelvalue");for(const l of i){const p=l.name.toLowerCase();n.has(p)||p.includes("raster.servicepixelvalue.")||e.add(l.name)}return s&&e.add("raster.magnitude").add("raster.direction"),Lt({fields:i,title:o},J(v({},r),{visibleFieldNames:e}))}queryFeatures(r,i){return this.queryRasters(r,i).then(o=>{if(o==null?void 0:o.features)for(const e of o.features)e.layer=e.sourceLayer=this;return o})}queryFeatureCount(r,i){return this.queryRasterCount(r,i)}redraw(){this.emit("redraw")}serviceSupportsSpatialReference(r){return zt(this,r)}};a([u(kt)],Q.prototype,"legendEnabled",void 0),a([u({type:["show","hide"]})],Q.prototype,"listMode",void 0),a([u({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],Q.prototype,"isReference",void 0),a([u({type:["ArcGISImageServiceLayer"],json:{origins:{"web-map":{type:["ArcGISImageServiceLayer","ArcGISImageServiceVectorLayer"],read:!1,write:{target:"layerType",ignoreOrigin:!0}}}}})],Q.prototype,"operationalLayerType",void 0),a([V("web-map","operationalLayerType")],Q.prototype,"writeOperationalLayerType",null),a([u(Ht)],Q.prototype,"popupEnabled",void 0),a([u({type:Ut,json:{read:{source:"popupInfo"},write:{target:"popupInfo"}}})],Q.prototype,"popupTemplate",void 0),a([u({readOnly:!0})],Q.prototype,"defaultPopupTemplate",null),a([u({readOnly:!0,json:{read:!1}})],Q.prototype,"type",void 0),Q=a([L("esri.layers.ImageryLayer")],Q);const Xi=Q;export{Xi as default};
