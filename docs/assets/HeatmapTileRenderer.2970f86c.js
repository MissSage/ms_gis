import{rT as a,aJ as m,aL as l,bQ as c}from"./vendor.faf54504.js";import{n as p}from"./BitmapTileContainer.7ce35fb5.js";import{o as d}from"./BaseTileRenderer.f37302b5.js";import"./Bitmap.64843fff.js";import"./utils.f12e4514.js";import"./Utils.b66268a2.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.5f3d51a1.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.41925623.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./TileContainer.c0bbe6b2.js";import"./WGLContainer.3275b1cd.js";import"./pixelUtils.34cd9289.js";import"./VertexArrayObject.cccbf8c8.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.c4ecd603.js";import"./StyleDefinition.099454d7.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";class h{constructor(){this.gradient=null,this.height=512,this.width=512}render(e){a(e,512,this.intensities,this.gradient,this.minDensity,this.maxDensity)}}let o=class extends d{constructor(t){super(t),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new p(t.tileInfoView)}createTile(t){const e=this._container.createTile(t);return this.tileInfoView.getTileCoords(e.bitmap,t),e.bitmap.resolution=this.tileInfoView.getTileResolution(t),e}onConfigUpdate(){const t=this.layer.renderer;if(t.type==="heatmap"){const{minDensity:e,maxDensity:s,colorStops:n}=t;this._intensityInfo.minDensity=e,this._intensityInfo.maxDensity=s,this._gradient=c(n),this.tiles.forEach(r=>{const i=r.bitmap.source;i&&(i.minDensity=e,i.maxDensity=s,i.gradient=this._gradient,r.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&t.type==="heatmap"}onTileData(t){const e=this.tiles.get(t.tileKey);if(!e)return;const s=t.intensityInfo,{minDensity:n,maxDensity:r}=this._intensityInfo,i=e.bitmap.source||new h;i.intensities=s&&s.matrix||null,i.minDensity=n,i.maxDensity=r,i.gradient=this._gradient,e.bitmap.source=i,this._container.addChild(e),this._container.requestRender(),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(t,e){return console.error(t),Promise.reject()}};o=m([l("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const k=o;export{k as default};
