import{aD as e,aE as i,aF as d,dP as P,dm as q,ml as $,et as A,b2 as j,hN as V,mm as x,Y as C,at as u,fd as h,g6 as N}from"./vendor.1bde3be2.js";import{i as U}from"./utils.1743b4db.js";let y=class extends P{get version(){return this.commitVersionProperties(),(this._get("version")||0)+1}};e([i({readOnly:!0})],y.prototype,"version",null),y=e([d("esri.views.layers.support.ClipArea")],y);const f=y;var g;let p=g=class extends f{constructor(o){super(o),this.type="rect",this.left=null,this.right=null,this.top=null,this.bottom=null}clone(){return new g({left:this.left,right:this.right,top:this.top,bottom:this.bottom})}commitVersionProperties(){this.commitProperty("left"),this.commitProperty("right"),this.commitProperty("top"),this.commitProperty("bottom")}};e([i({type:[Number,String],json:{write:!0}})],p.prototype,"left",void 0),e([i({type:[Number,String],json:{write:!0}})],p.prototype,"right",void 0),e([i({type:[Number,String],json:{write:!0}})],p.prototype,"top",void 0),e([i({type:[Number,String],json:{write:!0}})],p.prototype,"bottom",void 0),p=g=e([d("esri.views.layers.support.ClipRect")],p);const M=p;var w;const T={base:$,key:"type",typeMap:{extent:A,polygon:j}};let m=w=class extends f{constructor(o){super(o),this.type="geometry",this.geometry=null}clone(){var o,r;return new w({geometry:(r=(o=this.geometry)==null?void 0:o.clone())!=null?r:null})}commitVersionProperties(){this.commitProperty("geometry")}};e([i({types:T,json:{read:q,write:!0}})],m.prototype,"geometry",void 0),m=w=e([d("esri.views.layers.support.Geometry")],m);const _=m;let v=class extends f{constructor(o){super(o),this.type="path",this.path=[]}commitVersionProperties(){this.commitProperty("path")}};e([i({type:[[[Number]]],json:{write:!0}})],v.prototype,"path",void 0),v=e([d("esri.views.layers.support.Path")],v);const D=v,R=V.ofType({key:"type",base:null,typeMap:{rect:M,path:D,geometry:_}}),k=o=>{let r=class extends o{constructor(){super(...arguments),this.attached=!1,this.clips=new R,this.lastUpdateId=-1,this.moving=!1,this.updateRequested=!1,this.visibleAtCurrentScale=!1}initialize(){var n,l,b,S;const t=(l=(n=this.view)==null?void 0:n.spatialReferenceLocked)!=null?l:!0;((b=this.view)==null?void 0:b.spatialReference)&&t&&!this.spatialReferenceSupported?this.addResolvingPromise(Promise.reject(new C("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",{layer:this.layer}))):(this.container||(this.container=new U),this.container.fadeTransitionEnabled=!0,this.container.visible=!1,this.container.endTransitions(),this.handles.add([u(()=>this.suspended,s=>{this.container&&(this.container.visible=!s),this.view&&!s&&this.updateRequested&&this.view.requestUpdate()},h),u(()=>{var s,c;return(c=(s=this.layer)==null?void 0:s.opacity)!=null?c:1},s=>{this.container&&(this.container.opacity=s)},h),u(()=>this.layer&&"blendMode"in this.layer?this.layer.blendMode:"normal",s=>{this.container&&(this.container.blendMode=s)},h),u(()=>this.layer&&"effect"in this.layer?this.layer.effect:null,s=>{this.container&&(this.container.effect=s)},h),N(()=>this.clips,"change",()=>{this.container&&(this.container.clips=this.clips)},h),u(()=>{var s;return{scale:(s=this.view)==null?void 0:s.scale,scaleRange:this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null}},({scale:s})=>{const c=s&&this.isVisibleAtScale(s);c!==this.visibleAtCurrentScale&&this._set("visibleAtCurrentScale",c)},h)]),((S=this.view)==null?void 0:S.whenLayerView)?this.view.whenLayerView(this.layer).then(s=>{s===this&&this.processAttach()},()=>{}):this.when().then(()=>{this.processAttach()},()=>{}))}destroy(){this.processDetach(),this.updateRequested=!1}get spatialReferenceSupported(){var a;const t=(a=this.view)==null?void 0:a.spatialReference;return t==null||this.supportsSpatialReference(t)}get updating(){var t;return this.spatialReferenceSupported&&(!this.attached||!this.suspended&&(this.updateRequested||this.isUpdating())||!!((t=this.updatingHandles)==null?void 0:t.updating))}processAttach(){this.isResolved()&&!this.attached&&!this.destroyed&&this.spatialReferenceSupported&&(this.attach(),this.attached=!0,this.requestUpdate())}processDetach(){this.attached&&(this.attached=!1,this.detach(),this.updateRequested=!1)}isVisibleAtScale(t){const a=this.layer&&"effectiveScaleRange"in this.layer?this.layer.effectiveScaleRange:null;if(!a)return!0;const{minScale:n,maxScale:l}=a;return(n===0||t<=n)&&(l===0||t>=l)}requestUpdate(){this.destroyed||this.updateRequested||(this.updateRequested=!0,this.suspended||this.view.requestUpdate())}processUpdate(t){!this.isFulfilled()||this.isResolved()?(this._set("updateParameters",t),this.updateRequested&&!this.suspended&&(this.updateRequested=!1,this.update(t))):this.updateRequested=!1}hitTest(t,a){return Promise.resolve(null)}supportsSpatialReference(t){return!0}canResume(){return!!this.spatialReferenceSupported&&!!super.canResume()&&this.visibleAtCurrentScale}getSuspendInfo(){const t=super.getSuspendInfo(),a=!this.spatialReferenceSupported,n=this.visibleAtCurrentScale;return a&&(t.spatialReferenceNotSupported=a),n&&(t.outsideScaleRange=n),t}};return e([i()],r.prototype,"attached",void 0),e([i({type:R,set(t){const a=x(t,this._get("clips"),R);this._set("clips",a)}})],r.prototype,"clips",void 0),e([i()],r.prototype,"container",void 0),e([i()],r.prototype,"moving",void 0),e([i({readOnly:!0})],r.prototype,"spatialReferenceSupported",null),e([i({readOnly:!0})],r.prototype,"updateParameters",void 0),e([i()],r.prototype,"updateRequested",void 0),e([i()],r.prototype,"updating",null),e([i()],r.prototype,"view",void 0),e([i({readOnly:!0})],r.prototype,"visibleAtCurrentScale",void 0),r=e([d("esri.views.2d.layers.LayerView2D")],r),r};export{k as y};
