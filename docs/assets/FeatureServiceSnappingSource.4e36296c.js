var q=Object.defineProperty;var x=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,Q=Object.prototype.propertyIsEnumerable;var R=(e,t,i)=>t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,U=(e,t)=>{for(var i in t||(t={}))G.call(t,i)&&R(e,i,t[i]);if(x)for(var i of x(t))Q.call(t,i)&&R(e,i,t[i]);return e};import{ai as X,g5 as K,aD as n,aE as a,aF as b,aB as T,O as h,ls as Y,U as $,mK as C,at as S,hU as A,hJ as L,au as I,m0 as ee,ee as V,bI as te,k3 as ie,pE as se,ld as ne,iZ as D,aZ as ae,ez as re,b2 as oe,mH as le,dU as de,px as he,cg as ue,nc as pe,aL as ce,pF as ye,aA as ge,a8 as J,pG as fe,pH as ve,bN as we,dH as _e,gp as Z,pI as be,pJ as Se}from"./vendor.ad8aa1ba.js";import{G as me,Q as Ie,e as Oe}from"./boundedPlane.49c502fd.js";import{r as ke,a as He}from"./queryEngineUtils.2798e634.js";import{h as Ee}from"./WorkerHandle.3accf0bd.js";import"./lineSegment.bfe799ff.js";import"./VertexSnappingCandidate.8b04d233.js";function H(e,t){return Ie(t.extent,B),Oe(B,X(Te,e.x,e.y,0))}const B=me(),Te=K();let c=class extends T{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=h(this.pointOfInterest)?this.pointOfInterest:this.view.center;return e.sort((i,o)=>H(t,i)-H(t,o)),e}_scaleEnabled(){return Y(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||$(this.tileInfo))return[];if(!this._scaleEnabled)return[];const{spans:e,lodInfo:t}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:i}=t,o=[];for(const{row:s,colFrom:l,colTo:r}of e)for(let d=l;d<=r;d++){const u=t.normalizeCol(d),v=new C(null,i,s,u);this.tileInfo.updateTileInfo(v),o.push(v)}return o}get tileInfo(){var e,t;return(t=(e=this.view.featuresTilingScheme)==null?void 0:e.tileInfo)!=null?t:null}get tileSize(){return h(this.tileInfo)?this.tileInfo.size[0]:256}initialize(){this.addHandles(S(()=>{var e,t;return(t=(e=this.view)==null?void 0:e.state)==null?void 0:t.viewpoint},()=>this.notifyChange("tilesCoveringView"),A))}};n([a({readOnly:!0})],c.prototype,"tiles",null),n([a({readOnly:!0})],c.prototype,"_scaleEnabled",null),n([a({readOnly:!0})],c.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],c.prototype,"tileInfo",null),n([a({readOnly:!0})],c.prototype,"tileSize",null),n([a({constructOnly:!0})],c.prototype,"view",void 0),n([a({constructOnly:!0})],c.prototype,"layer",void 0),n([a()],c.prototype,"pointOfInterest",void 0),c=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);var F;(function(e){e[e.INVISIBLE=0]="INVISIBLE",e[e.VISIBLE_WHEN_EXTENDED=1]="VISIBLE_WHEN_EXTENDED",e[e.VISIBLE_ON_SURFACE=2]="VISIBLE_ON_SURFACE"})(F||(F={}));let g=class extends L{constructor(e){super(e),this.pointOfInterest=null}get tiles(){const e=this.tilesCoveringView,t=this._effectivePointOfInterest;if(h(t)){const i=e.map(o=>H(t,o));for(let o=1;o<i.length;o++)if(i[o-1]>i[o])return e.sort((s,l)=>H(t,s)-H(t,l)),e.slice()}return e}get tilesCoveringView(){var e,t;return this._filterTiles((t=(e=this.view.featureTiles)==null?void 0:e.tiles)==null?void 0:t.toArray()).map($e)}get tileInfo(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tilingScheme.toTileInfo())!=null?t:null}get tileSize(){var e,t;return(t=(e=this.view.featureTiles)==null?void 0:e.tileSize)!=null?t:256}get _effectivePointOfInterest(){var t;const e=this.pointOfInterest;return h(e)?e:(t=this.view.pointsOfInterest)==null?void 0:t.focus.location}initialize(){this.handles.add(S(()=>this.view.featureTiles,e=>{this.handles.remove(W),e&&this.handles.add(e.addClient(),W)},I))}_filterTiles(e){return $(e)?[]:e.filter(t=>Math.abs(t.measures.screenRect[3]-t.measures.screenRect[1])>Pe&&t.measures.visibility===F.VISIBLE_ON_SURFACE)}};function $e({lij:[e,t,i],extent:o}){return new C(`${e}/${t}/${i}`,e,t,i,o)}n([a({readOnly:!0})],g.prototype,"tiles",null),n([a({readOnly:!0})],g.prototype,"tilesCoveringView",null),n([a({readOnly:!0})],g.prototype,"tileInfo",null),n([a({readOnly:!0})],g.prototype,"tileSize",null),n([a({constructOnly:!0})],g.prototype,"view",void 0),n([a()],g.prototype,"pointOfInterest",void 0),n([a()],g.prototype,"_effectivePointOfInterest",null),g=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],g);const Pe=50,W="feature-tiles",Ce=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let O=class extends T{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=Ce.map(e=>new ee({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=l=>{if(h(l.label))return l.label;let r=l.lij.toString();return h(l.loadPriority)&&(r+=` (${l.loadPriority})`),r},t=this.getTiles(),i=new Array,o=new Set((this._labels.size,this._labels.keys()));t.forEach((l,r)=>{const d=l.lij.toString();o.delete(d);const u=l.lij[0],v=l.geometry;if(this.enablePolygons&&!this._polygons.has(d)){const w=new V({geometry:v,symbol:this._symbols[u%this._symbols.length]});this._polygons.set(d,w),i.push(w)}if(this.enableLabels){const w=e(l),k=r/(t.length-1),f=D(0,200,k),E=D(20,6,k)/.75,N=h(l.loadPriority)&&l.loadPriority>=t.length,z=new te([f,N?0:f,N?0:f]),M=this.view.type==="3d"?()=>new ie({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new se({text:w,halo:{color:"white",size:1/.75},material:{color:z},size:E})]}):()=>new ne({text:w,haloColor:"white",haloSize:1/.75,color:z,size:E});if(this._labels.has(d)){const m=this._labels.get(d),j=M();($(m.symbol)||JSON.stringify(j)!==JSON.stringify(m.symbol))&&(m.symbol=j)}else{const m=new V({geometry:v.extent.center,symbol:M()});this._labels.set(d,m),i.push(m)}}});const s=new Array;o.forEach(l=>{this._polygons.has(l)&&(s.push(this._polygons.get(l)),this._polygons.delete(l)),this._labels.has(l)&&(s.push(this._labels.get(l)),this._labels.delete(l))}),this.view.graphics.removeMany(s),this.view.graphics.addMany(i)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};n([a({constructOnly:!0})],O.prototype,"view",void 0),n([a({readOnly:!0})],O.prototype,"updating",void 0),n([a()],O.prototype,"enabled",null),O=n([b("esri.views.support.TileTreeDebugger")],O);let P=class extends O{constructor(e){super(e),this._handles=new ae}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this._handles.add(re(()=>clearInterval(e)))}destroy(){this._handles.destroy()}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(s=>{e.set(s.data.id,s.featureCount)}),this._debugInfo.pendingTiles.forEach(s=>{e.set(s.data.id,s.featureCount),t.set(s.data.id,s.state)});const i=s=>{var d;const l=t.get(s),r=(d=e.get(s))!=null?d:"?";return l?`${l}:${r}
${s}`:`store:${r}
${s}`},o=new Map;return this._debugInfo.storedTiles.forEach(s=>{o.set(s.data.id,s.data)}),this._debugInfo.pendingTiles.forEach(s=>{o.set(s.data.id,s.data)}),Array.from(o.values()).map(s=>({lij:[s.level,s.row,s.col],geometry:oe.fromExtent(le(s.extent,this.view.spatialReference)),label:i(s.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};n([a({constructOnly:!0})],P.prototype,"handle",void 0),P=n([b("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],P);let p=class extends L{constructor(e){super(e),this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:o}of t)for(const{z:s}of o)i.push(s);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this._editId=0}get updating(){return this.updatingHandles.updating||this._workerHandleUpdating}destroy(){this._workerHandle.destroy()}initialize(){this._workerHandle=new Fe(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){var s;const i=this._serviceInfoFromLayer(e.layer);if($(i))return;const o={configuration:this._convertConfiguration(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:(s=e.layer.elevationInfo)==null?void 0:s.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",o,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const i={distance:e.distance,point:e.coordinateHelper.vectorToPoint(e.point).toJSON(),types:e.types,filter:h(e.filter)?e.filter.toJSON():null};return this._workerHandle.invoke(i,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:h(e.tileInfo)?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async applyEdits(e,t){var r,d,u,v,w,k;const i=this._editId++,o={id:i};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",o,t));const s=await this.updatingHandles.addPromise(de(e.result,t)),l={id:i,edits:{addedFeatures:(d=(r=s.addedFeatures)==null?void 0:r.map(({objectId:f})=>f).filter(h))!=null?d:[],deletedFeatures:(v=(u=s.deletedFeatures)==null?void 0:u.map(({objectId:f,globalId:E})=>({objectId:f,globalId:E})))!=null?v:[],updatedFeatures:(k=(w=s.updatedFeatures)==null?void 0:w.map(({objectId:f})=>f).filter(h))!=null?k:[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",l,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}_convertConfiguration(e){return{filter:h(e.filter)?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}_serviceInfoFromLayer(e){var t,i,o;return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:(i=(t=e.parsedUrl)==null?void 0:t.path)!=null?i:"",fields:e.fields.map(s=>s.toJSON()),geometryType:he.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:(o=e.timeInfo)==null?void 0:o.toJSON()}}};n([a({constructOnly:!0})],p.prototype,"schedule",void 0),n([a({constructOnly:!0})],p.prototype,"hasZ",void 0),n([a({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),n([a({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),n([a({readOnly:!0})],p.prototype,"updating",null),n([a({readOnly:!0})],p.prototype,"availability",void 0),n([a()],p.prototype,"_workerHandleUpdating",void 0),p=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class Fe extends Ee{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let _=class extends T{constructor(e){super(e),this.pointOfInterest=null}get tiles(){return[new C("0/0/0",0,0,0,ue(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new pe({origin:new ce({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new ye({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}};n([a({readOnly:!0})],_.prototype,"tiles",null),n([a({readOnly:!0})],_.prototype,"tileInfo",null),n([a({readOnly:!0})],_.prototype,"tileSize",null),n([a({constructOnly:!0})],_.prototype,"layer",void 0),n([a()],_.prototype,"pointOfInterest",void 0),_=n([b("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],_);let y=class extends ge(T){constructor(e){super(e)}get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get updating(){return this._workerHandle.updating||this.updatingHandles.updating}get configuration(){const{view:e}=this,t=h(e)?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:this._layer.customParameters,viewType:t}}get availability(){return this._workerHandle.availability}get _layer(){return this.layerSource.layer}initialize(){var t;const e=this.view;if(h(e))switch(e.type){case"2d":this._tilesOfInterest=new c({view:e,layer:this._layer}),this._workerHandle=new p;break;case"3d":{const{resourceController:i}=e,o=this._layer,s=e.whenLayerView(o);this._tilesOfInterest=new g({view:e}),this._workerHandle=new p({schedule:r=>i.schedule(r),hasZ:this._layer.hasZ&&((t=this._layer.returnZ)!=null?t:!0),elevationAlignPointsInFeatures:async(r,d)=>{const u=await s;return J(d),u.elevationAlignPointsInFeatures(r,d)},queryForSymbologySnapping:async(r,d)=>{const u=await s;return J(d),u.queryForSymbologySnapping(r,d)}});const l=new fe(null);s.then(r=>l.set(r)),this.addHandles([e.elevationProvider.on("elevation-change",({context:r})=>{var u;const{elevationInfo:d}=o;ve(r,d)&&((u=this._workerHandle)==null||u.notifyElevationSourceChange())}),S(()=>o.elevationInfo,()=>{var r;return(r=this._workerHandle)==null?void 0:r.notifyElevationSourceChange()},I),S(()=>we(l.get(),({processor:r})=>r==null?void 0:r.renderer),()=>{var r;return(r=this._workerHandle)==null?void 0:r.notifySymbologyChange()},I),S(()=>_e(l.get(),!1,r=>r.symbologySnappingSupported),r=>{var d;return(d=this._workerHandle)==null?void 0:d.setSymbologySnappingSupported(r)},I)]);break}}else this._tilesOfInterest=new _({layer:this._layer}),this._workerHandle=new p;this.handles.add([Z(this._workerHandle)]),this._workerHandle.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null),this.updatingHandles.add(()=>this._updateTilesParameters,()=>this._workerHandle.updateTiles(this._updateTilesParameters,null),I),this.handles.add([S(()=>this.configuration,i=>this._workerHandle.configure(i,null),A)]),h(e)&&this.handles.add(S(()=>be.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new P({view:e,handle:this._workerHandle}),this.handles.add(Z(this._debug),"debug")):!i&&this._debug&&this.handles.remove("debug")},I)),this.handles.add(this.layerSource.layer.on("apply-edits",i=>{this._workerHandle.applyEdits(i,null)}))}refresh(){this._workerHandle.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,elevationInfo:o,point:s}=e;this._tilesOfInterest.pointOfInterest=i.vectorToPoint(s);const l=i.hasZ()?Se:o,r=this._getGroundElevation;return(await this._workerHandle.fetchCandidates(U({},e),t)).candidates.map(d=>ke(d,i,l,r))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}get _getGroundElevation(){return He(this.view)}};n([a({constructOnly:!0})],y.prototype,"spatialReference",void 0),n([a({constructOnly:!0})],y.prototype,"layerSource",void 0),n([a({constructOnly:!0})],y.prototype,"view",void 0),n([a()],y.prototype,"_tilesOfInterest",void 0),n([a({readOnly:!0})],y.prototype,"_updateTilesParameters",null),n([a({readOnly:!0})],y.prototype,"updating",null),n([a({readOnly:!0})],y.prototype,"configuration",null),n([a({readOnly:!0})],y.prototype,"availability",null),n([a()],y.prototype,"_getGroundElevation",null),y=n([b("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],y);export{y as FeatureServiceSnappingSource};
