import{V as F,P as d,Y as l,w as h,E as m,t as A,e as v,am as c,y as i}from"./arcadeUtils.821621ce.js";import{sg as g}from"./vendor.ad8aa1ba.js";async function o(t,r,e,n,s,a){if(n.length===1){if(l(n[0]))return c(t,n[0],i(n[1],-1));if(m(n[0]))return c(t,n[0].toArray(),i(n[1],-1))}else if(n.length===2){if(l(n[0]))return c(t,n[0],i(n[1],-1));if(m(n[0]))return c(t,n[0].toArray(),i(n[1],-1));if(d(n[0])){const u=await n[0].load(),f=await y(g.create(n[1],u.getFieldsIndex()),a,s);return n[0].calculateStatistic(t,f,i(n[2],1e3),r.abortSignal)}}else if(n.length===3&&d(n[0])){const u=await n[0].load(),f=await y(g.create(n[1],u.getFieldsIndex()),a,s);return n[0].calculateStatistic(t,f,i(n[2],1e3),r.abortSignal)}return c(t,n,-1)}async function y(t,r,e){const n=t.getVariables();if(n.length>0){const s=[];for(let u=0;u<n.length;u++){const f={name:n[u]};s.push(await r.evaluateIdentifier(e,f))}const a={};for(let u=0;u<n.length;u++)a[n[u]]=s[u];return t.parameters=a,t}return t}function p(t){t.mode==="async"&&(t.functions.stdev=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("stdev",n,s,a,r,t))},t.functions.variance=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("variance",n,s,a,r,t))},t.functions.average=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("mean",n,s,a,r,t))},t.functions.mean=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("mean",n,s,a,r,t))},t.functions.sum=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("sum",n,s,a,r,t))},t.functions.min=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("min",n,s,a,r,t))},t.functions.max=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>o("max",n,s,a,r,t))},t.functions.count=function(r,e){return t.standardFunctionAsync(r,e,(n,s,a)=>{if(F(a,1,1,r,e),d(a[0]))return a[0].count(n.abortSignal);if(l(a[0])||h(a[0]))return a[0].length;if(m(a[0]))return a[0].length();throw new A(r,v.InvalidParameter,e)})})}export{p as registerFunctions};
