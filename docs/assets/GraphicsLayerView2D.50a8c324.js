import{em as a,hA as h,aq as r,ar as o,as as p}from"./vendor.150443b7.js";import{y as l}from"./LayerView2D.494015a0.js";import{i as c}from"./GraphicContainer.e88c6275.js";import{o as m}from"./BaseGraphicContainer.5f69ea41.js";import{u as g}from"./LayerView.2481493a.js";import"./utils.9098e95e.js";import"./Utils.eb4237a0.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.0551b3c6.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.420ab2c9.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./cimAnalyzer.ec0c3ab9.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.31de2f9a.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.bd86856e.js";import"./normalizeUtilsSync.424adbeb.js";import"./VertexArrayObject.b8066877.js";import"./FeatureContainer.8a57c842.js";import"./TileContainer.3a4f9345.js";import"./WGLContainer.8ea5db01.js";import"./pixelUtils.e6b9584d.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.30b3a6f7.js";import"./StyleDefinition.5e257d9e.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./visualVariablesUtils.796619c8.js";import"./visualVariablesUtils.feab36b0.js";import"./Matcher.0d136acd.js";import"./tileUtils.0e15ef69.js";import"./TileClipper.31ed0265.js";import"./Geometry.d049a63c.js";import"./ExpandedCIM.6c0ca00a.js";import"./devEnvironmentUtils.d8d0484c.js";import"./schemaUtils.2554559a.js";import"./createSymbolSchema.b2543046.js";import"./util.cb1e83e1.js";import"./ComputedAttributeStorage.b3998e16.js";import"./centroid.b1c588e8.js";import"./vec3f32.1121a836.js";const n={remove(){},pause(){},resume(){}};let s=class extends l(g){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new m({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new c(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(e=>({type:"graphic",graphic:e,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(e=>!!e.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let e;return typeof i=="number"?e=[i]:i instanceof a?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(t=>t&&t.uid):h.isCollection(i)&&i.length>0&&(e=i.map(t=>t&&t.uid).toArray()),e=e==null?void 0:e.filter(t=>t!=null),e.length?(this._addHighlight(e),{remove:()=>this._removeHighlight(e)}):n}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};r([o()],s.prototype,"graphicsView",void 0),s=r([p("esri.views.2d.layers.GraphicsLayerView2D")],s);const hi=s;export{hi as default};
