import{aq as r,ar as i,as as a}from"./vendor.f59460b9.js";import p from"./FeatureLayerView2D.f301573f.js";import"./utils.2943fe63.js";import"./Utils.d99d4263.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.68429d95.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.a0e626ef.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./LayerView2D.4cbf4b16.js";import"./schemaUtils.fd351f45.js";import"./visualVariablesUtils.ba4abc49.js";import"./createSymbolSchema.649358ad.js";import"./cimAnalyzer.c46e6e24.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.837acd5e.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.48a1a1fe.js";import"./ExpandedCIM.8408bb4d.js";import"./util.9cd692f9.js";import"./popupUtils.149987f4.js";import"./LayerView.62cad0ec.js";import"./RefreshableLayerView.2e6bc086.js";const l=t=>{let e=class extends t{get availableFields(){return this.layer.fieldsIndex.fields.map(o=>o.name)}};return r([i()],e.prototype,"layer",void 0),r([i({readOnly:!0})],e.prototype,"availableFields",null),e=r([a("esri.views.layers.OGCFeatureLayerView")],e),e};let s=class extends l(p){supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}};s=r([a("esri.views.2d.layers.OGCFeatureLayerView2D")],s);const A=s;export{A as default};
