import{hA as p,mY as g,A as a,ah as u,E as _,ag as d,aq as l,ar as m,as as f}from"./vendor.150443b7.js";import{b as y,h as w,O as j,g as b,f as v,a as G,D as M}from"./Stop.17eef69f.js";import{y as V}from"./LayerView2D.494015a0.js";import{i as k}from"./GraphicContainer.e88c6275.js";import{o as I}from"./BaseGraphicContainer.5f69ea41.js";import{u as U}from"./LayerView.2481493a.js";import"./utils.9098e95e.js";import"./Utils.eb4237a0.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.0551b3c6.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.420ab2c9.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./cimAnalyzer.ec0c3ab9.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.31de2f9a.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.bd86856e.js";import"./normalizeUtilsSync.424adbeb.js";import"./VertexArrayObject.b8066877.js";import"./FeatureContainer.8a57c842.js";import"./TileContainer.3a4f9345.js";import"./WGLContainer.8ea5db01.js";import"./pixelUtils.e6b9584d.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.30b3a6f7.js";import"./StyleDefinition.5e257d9e.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./visualVariablesUtils.796619c8.js";import"./visualVariablesUtils.feab36b0.js";import"./Matcher.0d136acd.js";import"./tileUtils.0e15ef69.js";import"./TileClipper.31ed0265.js";import"./Geometry.d049a63c.js";import"./ExpandedCIM.6c0ca00a.js";import"./devEnvironmentUtils.d8d0484c.js";import"./schemaUtils.2554559a.js";import"./createSymbolSchema.b2543046.js";import"./util.cb1e83e1.js";import"./ComputedAttributeStorage.b3998e16.js";import"./centroid.b1c588e8.js";import"./vec3f32.1121a836.js";const C=Object.freeze({remove(){},pause(){},resume(){}}),F=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],o={graphic:null,property:null,oldValue:null,newValue:null};function c(t){return t instanceof y||t instanceof w||t instanceof j||t instanceof b||t instanceof v||t instanceof G||t instanceof M}function A(t){return p.isCollection(t)&&t.length&&c(t.getItemAt(0))}function H(t){return Array.isArray(t)&&t.length&&c(t[0])}let h=class extends V(U){constructor(){super(...arguments),this._graphics=new p,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new g({getCollections:()=>a(this.layer)&&!this.destroyed?[a(this.layer.routeInfo)?new p([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),u)}destroy(){var t;this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(e=>!!e.popupTemplate)}highlight(t){let e;e=c(t)?[this._getNetworkFeatureUid(t)]:H(t)?t.map(r=>this._getNetworkFeatureUid(r)):A(t)?t.map(r=>this._getNetworkFeatureUid(r)).toArray():[t.uid];const i=e.filter(a);return i.length?(this._addHighlight(i),{remove:()=>this._removeHighlight(i)}):C}async hitTest(t,e){if(this.suspended)return null;const i=this._graphicsView.hitTest(t).filter(a).map(s=>this._networkGraphicMap.get(s));if(!i.length)return null;const{layer:r}=this;return i.reverse().map(s=>({type:"route",layer:r,mapPoint:t,networkFeature:s}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e);this._highlightIds.set(e,i+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_createGraphic(t){const e=t.toGraphic();return e.layer=this.layer,e.sourceLayer=this.layer,e}_createGraphicsView(){const t=this.view,e=()=>this.requestUpdate(),i=new k(t.featuresTilingScheme);this._graphicsView=new I({container:i,graphics:this._graphics,requestUpdateCallback:e,view:t}),this.container.addChild(i),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const e=this._networkGraphicMap.get(t);return F.indexOf(e.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const e of t)if(this._highlightIds.has(e)){const i=this._highlightIds.get(e)-1;i===0?this._highlightIds.delete(e):this._highlightIds.set(e,i)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(e=>{const i=this._networkFeatureMap.get(e);return this._networkFeatureMap.delete(e),this._networkGraphicMap.delete(i),i}));for(const e of t.removed)this.handles.remove(e)}if(t.added.length){this._graphics.addMany(t.added.map(e=>{const i=this._createGraphic(e);return _(i.symbol)?null:(this._networkFeatureMap.set(e,i),this._networkGraphicMap.set(i,e),i)}).filter(a));for(const e of t.added)this.handles.add([d(()=>e.geometry,(i,r)=>{this._updateGraphic(e,"geometry",i,r)}),d(()=>e.symbol,(i,r)=>{this._updateGraphic(e,"symbol",i,r)})],e);this._graphics.sort((e,i)=>this._getDrawOrder(e)-this._getDrawOrder(i))}}_updateGraphic(t,e,i,r){if(!this._networkFeatureMap.has(t)){const n=this._createGraphic(t);return this._networkFeatureMap.set(t,n),this._networkGraphicMap.set(n,t),void this._graphics.add(n)}const s=this._networkFeatureMap.get(t);s[e]=i,o.graphic=s,o.property=e,o.oldValue=r,o.newValue=i,this._graphicsView.graphicUpdateHandler(o)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};l([m()],h.prototype,"_graphics",void 0),l([m()],h.prototype,"_routeItems",null),h=l([f("esri.views.2d.layers.RouteLayerView2D")],h);const kt=h;export{kt as default};
