import{aG as E,aH as b,W as l,ae as c,aA as m,pw as k,az as C,m1 as F,py as A,pH as $,pG as j,$ as h,b4 as G,eR as R,b8 as I,pI as _,fD as P,eS as x,d6 as H,kr as z,p8 as O,aJ as o,aK as p,aL as Z,ej as L,i9 as M}from"./vendor.faf54504.js";import{p as W}from"./normalizeUtilsSync.c97dd948.js";import{u as q}from"./FeatureStore.f1512574.js";import{Y as U}from"./QueryEngine.6e998ac4.js";import{r as B,a as Q}from"./queryEngineUtils.c3e4b9ed.js";import{r as v,a as T,n as S}from"./symbologySnappingCandidates.cd028838.js";import"./PooledRBush.9c181640.js";import"./optimizedFeatureQueryEngineAdapter.49289286.js";import"./centroid.a98813ae.js";import"./QueryEngineCapabilities.78217f95.js";import"./timeSupport.5a83cf41.js";import"./VertexSnappingCandidate.351fa65f.js";const w="graphics-collections";let r=class extends E(b){constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d";if(!s||t.type==="map-notes")return v();const a=async(i,n)=>(await L(e.whenLayerView(t),n)).elevationAlignPointsInFeatures(i,n);return v(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:a,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d",a=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&a?S(a,async(i,n)=>{const d=await e.whenLayerView(t);return c(n),d.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},n)}):S()}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this.updatingHandles.removeHandles(w);for(const a of s)this._addMany(a.graphics.toArray()),this.handles.add([a.on("graphic-update",i=>this._onGraphicUpdate(i)),this.updatingHandles.addOnCollectionChange(()=>a.graphics,i=>this._onGraphicsChanged(i))],w)},m);const{view:e}=this,{layer:t}=this.layerSource;l(e)&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{k(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),C(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),m)])}async fetchCandidates(e,t){const{point:s,coordinateHelper:a,elevationInfo:i}=e,n=await F(this._mapSources(g=>this._fetchCandidatesForSource(g,e,t)));c(t);const d=a.hasZ()?A:i,y=this._getGroundElevation,f=n.flat().map(g=>B(g,a,d,y));return $(s,f,a),f}get _getGroundElevation(){return Q(this.view)}async _fetchCandidatesForSource(e,t,s){const a=j(t),i=await e.queryEngine.executeQueryForSnapping(a,s);c(s);const n=await this._snappingElevationAligner.alignCandidates(i.candidates,s);c(s);const d=await this._symbologySnappingFetcher.fetch(n,s);c(s);const y=d.length===0?n:[...n,...d];return this._snappingElevationFilter.filter(a,y)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const a of e)h(a.geometry)||(this._needsInitializeProjection(a.geometry.spatialReference)?(t.push(a.geometry.spatialReference),s.set(a.uid,a)):this._add(a));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=G(async n=>{await R(e.map(d=>({source:d,dest:this.spatialReference})),{signal:n}),this._markLoadedSpatialReferences(e);for(const[,d]of t)this._add(d)});this.updatingHandles.addPromise(s.promise);const a={task:s,graphics:t},i=()=>M(this._pendingAdds,a);s.promise.then(i,i),this._pendingAdds.push(a)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this._loadedWkids.add(t.wkid),t.wkt!=null&&this._loadedWkts.add(t.wkt)}_add(e){if(h(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=I.fromExtent(t));const s=this._ensureSource(t.type);if(h(s))return;const a=this._createOptimizedFeature(e.uid,t);h(a)||(s.featureStore.add(a),_(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(e.wkid==null||!this._loadedWkids.has(e.wkid))&&(e.wkt==null||!this._loadedWkts.has(e.wkt))&&!P(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=x(W(t),this.spatialReference);if(!s)return null;const a=this._ensureGeometryHasZ(s),i=H(a,this._hasZ,!1);return new z(i,{[u]:e},null,e)}_ensureGeometryHasZ(e){var a;if(!this._hasZ)return e;const t=i=>{for(;i.length<3;)i.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=(a=s.z)!=null?a:0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(i=>i.forEach(t));break;case"polygon":s.rings.forEach(i=>i.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(l(t))return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=O.toJSON(e),s=this._hasZ,a=new q({geometryType:t,hasZ:s,hasM:!1});return{featureStore:a,queryEngine:new U({featureStore:a,fields:[{name:u,type:"esriFieldTypeOID",alias:u}],geometryType:t,hasM:!1,hasZ:s,objectIdField:u,spatialReference:this.spatialReference,scheduler:l(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),_(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:a,multipoint:i}=this._sources,n=[];return l(t)&&n.push(e(t)),l(s)&&n.push(e(s)),l(a)&&n.push(e(a)),l(i)&&n.push(e(i)),n}};o([p()],r.prototype,"getGraphicsLayers",void 0),o([p({constructOnly:!0})],r.prototype,"layerSource",void 0),o([p({constructOnly:!0})],r.prototype,"spatialReference",void 0),o([p({constructOnly:!0})],r.prototype,"view",void 0),o([p({readOnly:!0})],r.prototype,"updating",null),o([p({readOnly:!0})],r.prototype,"availability",void 0),o([p()],r.prototype,"_hasZ",null),o([p()],r.prototype,"_snappingElevationAligner",null),o([p()],r.prototype,"_snappingElevationFilter",null),o([p()],r.prototype,"_symbologySnappingFetcher",null),o([p()],r.prototype,"_extrudedPolygonSymbolsCount",void 0),o([p()],r.prototype,"_getGroundElevation",null),r=o([Z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],r);const u="OBJECTID";export{r as GraphicsSnappingSource};
