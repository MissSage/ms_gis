import{oh as p,oi as y,oj as w,ok as b,ol as I,eM as d,E as h}from"./vendor.f59460b9.js";class j{constructor(){this.code=null,this.description=null}}class v{constructor(t){this.error=new j,this.globalId=null,this.objectId=null,this.success=!1,this.uniqueId=null,this.error.description=t}}function m(e){return new v(e)}class q{constructor(t){this.globalId=null,this.success=!0,this.objectId=this.uniqueId=t}}function G(e){return new q(e)}const a=new Set;function P(e,t,i,g=!1,u){var c;a.clear();for(const s in i){const n=e.get(s);if(!n)continue;const l=i[s],r=E(n,l);if(r!==l&&u&&u.push({name:"invalid-value-type",message:"attribute value was converted to match the field type",details:{field:n,originalValue:l,sanitizedValue:r}}),a.add(n.name),n&&(g||n.editable)){const f=b(n,r);if(f)return m(I(f,n,r));t[n.name]=r}}for(const s of(c=e==null?void 0:e.requiredFields)!=null?c:[])if(!a.has(s.name))return m(`missing required field "${s.name}"`);return null}function E(e,t){let i=t;return typeof t=="string"&&p(e)?i=parseFloat(t):t!=null&&y(e)&&typeof t!="string"&&(i=String(t)),w(i)}let o;function V(e,t){if(!e||!d(t))return e;if("rings"in e||"paths"in e){if(h(o))throw new TypeError("geometry engine not loaded");return o.simplify(t,e)}return e}async function S(){return h(o)&&(o=await import("./geometryEngineJSON.29e2b117.js")),o}async function k(e,t){!d(e)||t!=="esriGeometryPolygon"&&t!=="esriGeometryPolyline"||await S()}export{m as a,G as f,V as g,P as m,k as w};
