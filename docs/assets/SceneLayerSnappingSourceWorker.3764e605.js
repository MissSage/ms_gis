import{fV as l,fN as m,g6 as h,gt as x,jR as f,aJ as V,aL as w,am as c,ae as v,$ as _,bX as L,o3 as b,p3 as j,g3 as u}from"./vendor.faf54504.js";import{v as P,b as S,j as I}from"./lineSegment.63b102f2.js";import{G as C}from"./Octree.a6973514.js";import{m as $}from"./edgeProcessing.ebf0be85.js";import"./Util.1a0ed408.js";import"./deduplicate.1d8fe9a7.js";import"./InterleavedLayout.9c97d639.js";import"./BufferView.4f86b08f.js";import"./types.44c7402c.js";import"./VertexAttribute.42396f25.js";import"./glUtil.b02793dc.js";import"./enums.2d9e6f64.js";import"./VertexElementDescriptor.1fdca6da.js";const T=1e3;function N(t,e,s){const n=x(),o=f(n);return l(o,o,t,.5),l(o,o,e,.5),n[3]=m(o,t),h(o,o,s),n}let g=class{constructor(){this._idToComponent=new Map,this._components=new C(t=>t.bounds),this._edges=new C(t=>t.bounds),this._tmpLineSegment=P(),this._tmpP1=c(),this._tmpP2=c(),this._tmpP3=c(),this.remoteClient=null}async fetchCandidates(t,e){await Promise.resolve(),v(e),await this._ensureEdgeLocations(t,e);const s=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,s),s.length<T),t.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(t,e){const s=[];if(this._components.forEachNeighbor(i=>{if(_(i.info)){const{id:r,uid:d}=i;s.push({id:r,uid:d})}return!0},t.bounds),!s.length)return;const n={components:s},o=await this.remoteClient.invoke("fetchAllEdgeLocations",n,L(e,{}));for(const i of o.components)this._setFetchEdgeLocations(i)}async add(t){const e=new p(t.id,t.bounds);return this._idToComponent.set(e.id,e),this._components.add([e]),{result:{}}}async remove(t){const e=this._idToComponent.get(t.id);if(e){const s=[];this._edges.forEachNeighbor(n=>(n.component===e&&s.push(n),!0),e.bounds),this._edges.remove(s),this._components.remove([e]),this._idToComponent.delete(e.id)}return{result:{}}}_setFetchEdgeLocations(t){const e=this._idToComponent.get(t.id);if(_(e)||t.uid!==e.uid)return;const s=$.createView(t.locations),n=new Array(s.count),o=c(),i=c();for(let a=0;a<s.count;a++){s.position0.getVec(a,o),s.position1.getVec(a,i);const E=N(o,i,t.origin),y=new k(e,a,E);n[a]=y}this._edges.add(n);const{objectIds:r,origin:d}=t;e.info={locations:s,objectIds:r,origin:d}}_addCandidates(t,e,s){const{locations:n,origin:o,objectIds:i}=e.component.info,r=n.position0.getVec(e.index,this._tmpP1),d=n.position1.getVec(e.index,this._tmpP2);h(r,r,o),h(d,d,o);const a=i[n.componentIndex.get(e.index)];this._addEdgeCandidate(t,a,r,d,s),this._addVertexCandidate(t,a,r,s),this._addVertexCandidate(t,a,d,s)}_addEdgeCandidate(t,e,s,n,o){if(!(t.types&b.EDGE))return;const i=f(t.bounds),r=S(s,n,this._tmpLineSegment),d=I(r,i,this._tmpP3);if(!j(t.bounds,d))return null;o.push({type:"edge",objectId:e,target:u(d),distance:m(i,d),start:u(s),end:u(n)})}_addVertexCandidate(t,e,s,n){if(!(t.types&b.VERTEX))return;const o=f(t.bounds);if(!j(t.bounds,s))return null;n.push({type:"vertex",objectId:e,target:u(s),distance:m(o,s)})}};g=V([w("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const z=g;class p{constructor(e,s){this.id=e,this.bounds=s,this.info=null,this.uid=++p.uid}}p.uid=0;class k{constructor(e,s,n){this.component=e,this.index=s,this.bounds=n}}export{z as default};
