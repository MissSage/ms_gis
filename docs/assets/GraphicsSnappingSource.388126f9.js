import{an as b,ao as E,A as l,W as c,ah as m,pd as k,ag as C,lK as F,pf as A,po as R,pn as $,E as h,aN as j,ey as P,aR as G,pp as f,fk as x,ez as I,cP as z,k8 as H,oR as O,aq as r,ar as p,as as Z,e0 as L,hS as M}from"./vendor.f59460b9.js";import{p as W}from"./normalizeUtilsSync.b6097452.js";import{u as q}from"./FeatureStore.08b87480.js";import{Y as U}from"./QueryEngine.36683ac5.js";import{r as B,a as Q}from"./queryEngineUtils.5d374e0a.js";import{r as v,a as T,n as S}from"./symbologySnappingCandidates.291b180c.js";import"./PooledRBush.1ab5198f.js";import"./optimizedFeatureQueryEngineAdapter.501a38f2.js";import"./centroid.b73c73db.js";import"./QueryEngineCapabilities.78217f95.js";import"./timeSupport.483bb1b8.js";import"./VertexSnappingCandidate.b045397a.js";const w="graphics-collections";let o=class extends b(E){constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d";if(!s||t.type==="map-notes")return v();const n=async(a,i)=>(await L(e.whenLayerView(t),i)).elevationAlignPointsInFeatures(a,i);return v(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:n,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d",n=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&n?S(n,async(a,i)=>{const d=await e.whenLayerView(t);return c(i),d.queryForSymbologySnapping({candidates:a,spatialReference:e.spatialReference},i)}):S()}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this.updatingHandles.removeHandles(w);for(const n of s)this._addMany(n.graphics.toArray()),this.handles.add([n.on("graphic-update",a=>this._onGraphicUpdate(a)),this.updatingHandles.addOnCollectionChange(()=>n.graphics,a=>this._onGraphicsChanged(a))],w)},m);const{view:e}=this,{layer:t}=this.layerSource;l(e)&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{k(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),C(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),m)])}async fetchCandidates(e,t){const{point:s,coordinateHelper:n,elevationInfo:a}=e,i=await F(this._mapSources(g=>this._fetchCandidatesForSource(g,e,t)));c(t);const d=n.hasZ()?A:a,y=this._getGroundElevation,_=i.flat().map(g=>B(g,n,d,y));return R(s,_,n),_}get _getGroundElevation(){return Q(this.view)}async _fetchCandidatesForSource(e,t,s){const n=$(t),a=await e.queryEngine.executeQueryForSnapping(n,s);c(s);const i=await this._snappingElevationAligner.alignCandidates(a.candidates,s);c(s);const d=await this._symbologySnappingFetcher.fetch(i,s);c(s);const y=d.length===0?i:[...i,...d];return this._snappingElevationFilter.filter(n,y)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const n of e)h(n.geometry)||(this._needsInitializeProjection(n.geometry.spatialReference)?(t.push(n.geometry.spatialReference),s.set(n.uid,n)):this._add(n));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=j(async i=>{await P(e.map(d=>({source:d,dest:this.spatialReference})),{signal:i}),this._markLoadedSpatialReferences(e);for(const[,d]of t)this._add(d)});this.updatingHandles.addPromise(s.promise);const n={task:s,graphics:t},a=()=>M(this._pendingAdds,n);s.promise.then(a,a),this._pendingAdds.push(n)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this._loadedWkids.add(t.wkid),t.wkt!=null&&this._loadedWkts.add(t.wkt)}_add(e){if(h(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const s=this._ensureSource(t.type);if(h(s))return;const n=this._createOptimizedFeature(e.uid,t);h(n)||(s.featureStore.add(n),f(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(e.wkid==null||!this._loadedWkids.has(e.wkid))&&(e.wkt==null||!this._loadedWkts.has(e.wkt))&&!x(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=I(W(t),this.spatialReference);if(!s)return null;const n=this._ensureGeometryHasZ(s),a=z(n,this._hasZ,!1);return new H(a,{[u]:e},null,e)}_ensureGeometryHasZ(e){var n;if(!this._hasZ)return e;const t=a=>{for(;a.length<3;)a.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=(n=s.z)!=null?n:0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(a=>a.forEach(t));break;case"polygon":s.rings.forEach(a=>a.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(l(t))return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=O.toJSON(e),s=this._hasZ,n=new q({geometryType:t,hasZ:s,hasM:!1});return{featureStore:n,queryEngine:new U({featureStore:n,fields:[{name:u,type:"esriFieldTypeOID",alias:u}],geometryType:t,hasM:!1,hasZ:s,objectIdField:u,spatialReference:this.spatialReference,scheduler:l(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),f(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:n,multipoint:a}=this._sources,i=[];return l(t)&&i.push(e(t)),l(s)&&i.push(e(s)),l(n)&&i.push(e(n)),l(a)&&i.push(e(a)),i}};r([p()],o.prototype,"getGraphicsLayers",void 0),r([p({constructOnly:!0})],o.prototype,"layerSource",void 0),r([p({constructOnly:!0})],o.prototype,"spatialReference",void 0),r([p({constructOnly:!0})],o.prototype,"view",void 0),r([p({readOnly:!0})],o.prototype,"updating",null),r([p({readOnly:!0})],o.prototype,"availability",void 0),r([p()],o.prototype,"_hasZ",null),r([p()],o.prototype,"_snappingElevationAligner",null),r([p()],o.prototype,"_snappingElevationFilter",null),r([p()],o.prototype,"_symbologySnappingFetcher",null),r([p()],o.prototype,"_extrudedPolygonSymbolsCount",void 0),r([p()],o.prototype,"_getGroundElevation",null),o=r([Z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],o);const u="OBJECTID";export{o as GraphicsSnappingSource};
