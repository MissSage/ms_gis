var Z=Object.defineProperty,B=Object.defineProperties;var H=Object.getOwnPropertyDescriptors;var $=Object.getOwnPropertySymbols;var Y=Object.prototype.hasOwnProperty,X=Object.prototype.propertyIsEnumerable;var E=(e,t,s)=>t in e?Z(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s,g=(e,t)=>{for(var s in t||(t={}))Y.call(t,s)&&E(e,s,t[s]);if($)for(var s of $(t))X.call(t,s)&&E(e,s,t[s]);return e},b=(e,t)=>B(e,H(t));import{aD as r,aE as a,aF as w,dP as T,qA as ee,hx as S,b2 as j,fg as te,qn as A,rf as se,lJ as c,aZ as re,fR as ie,hU as ae,d7 as oe,U as m,a1 as q,kz as ne,bQ as le,ru as pe,nY as de,nZ as ye,n_ as ue,q9 as ce,n$ as he,qq as fe,lh as ge,O as p,dw as me,qM as R,rv as ve,K as h,bp as be,mp as we,e4 as Ie,m_ as Le,Y as d,ee as Se,qj as je,ec as Fe,qf as Oe,rw as P,a9 as _e,j$ as xe,rx as $e,ry as Ee,rz as Te,qs as Ae,qO as qe,qP as Re,qQ as D,qE as Pe,rA as De,qk as Ne,ql as Ue,nd as Ce,qT as Qe,qm as ke}from"./vendor.ad8aa1ba.js";import{N as Ge,L as N}from"./SceneService.e312fc7b.js";import{t as Ve,y as Je,l as Ke}from"./FetchAssociatedFeatureLayer.548eac83.js";import{s as U,l as Me,u as ze,m as We}from"./I3SLayerDefinitions.4142ab11.js";import{g as Ze}from"./persistable.fb3fd197.js";import{d as Be,s as He}from"./popupUtils.43e550b9.js";import"./originUtils.2d0aad75.js";import"./multiOriginJSONSupportUtils.38b69b9c.js";import"./resourceUtils.38261f41.js";import"./I3SBinaryReader.f7193a9b.js";import"./VertexAttribute.42396f25.js";import"./edgeUtils.1b58a0cc.js";import"./symbolColorUtils.f2306800.js";import"./vec3f32.1121a836.js";let u=class extends T{constructor(){super(...arguments),this.name=null,this.field=null,this.currentRangeExtent=null,this.fullRangeExtent=null,this.type="rangeInfo"}};r([a({type:String,json:{read:!0,write:!0}})],u.prototype,"name",void 0),r([a({type:String,json:{read:!0,write:!0}})],u.prototype,"field",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],u.prototype,"currentRangeExtent",void 0),r([a({type:[Number],json:{read:!0,write:!0}})],u.prototype,"fullRangeExtent",void 0),r([a({type:["rangeInfo"],readOnly:!0,json:{read:!1,write:!0}})],u.prototype,"type",void 0),u=r([w("esri.layers.support.RangeInfo")],u);var I;let F=I=class extends ee(S.ofType(j)){constructor(e){super(e)}clone(){return new I(this.items.map(e=>e.clone()))}write(e,t){return this.toJSON(t)}toJSON(e){var s;const t=(s=e==null?void 0:e.layer)==null?void 0:s.spatialReference;return t?this.toArray().map(o=>{if(!t.equals(o.spatialReference)){if(!te(o.spatialReference,t))return e&&e.messages&&e.messages.push(new A("scenefilter:unsupported","Scene filters with incompatible spatial references are not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),null;const l=new j;se(o,l,t),o=l}const n=o.toJSON(e);return delete n.spatialReference,n}).filter(o=>o!=null):((e==null?void 0:e.messages)&&e.messages.push(new A("scenefilter:unsupported","Writing Scene filters without context layer is not supported",{modification:this,spatialReference:e.layer.spatialReference,context:e})),this.toArray().map(o=>o.toJSON(e)))}static fromJSON(e,t){const s=new I;return e.forEach(o=>s.add(j.fromJSON(o,t))),s}};F=I=r([w("esri.layers.support.PolygonCollection")],F);const O=F;var _;let f=_=class extends T{constructor(e){super(e),this.spatialRelationship="disjoint",this.geometries=new O,this._geometriesSource=null,this._handles=new re}initialize(){this._handles.add(ie(()=>this.geometries,"after-changes",()=>this.geometries=this.geometries,ae))}destroy(){this._handles.destroy()}readGeometries(e,t,s){this._geometriesSource={url:oe(e,s),context:s}}async loadGeometries(e,t){if(m(this._geometriesSource))return;const{url:s,context:o}=this._geometriesSource,n=await q(s,{responseType:"json",signal:ne(t,"signal")}),l=e.toJSON(),y=n.data.map(L=>b(g({},L),{spatialReference:l}));this.geometries=O.fromJSON(y,o),this._geometriesSource=null}clone(){return new _({geometries:le(this.geometries),spatialRelationship:this.spatialRelationship})}};r([a({type:["disjoint","contains"],nonNullable:!0,json:{write:!0}})],f.prototype,"spatialRelationship",void 0),r([a({type:O,nonNullable:!0,json:{write:!0}}),Ze({origins:["web-scene","portal-item"],type:"resource",prefix:"geometries"})],f.prototype,"geometries",void 0),r([c(["web-scene","portal-item"],"geometries")],f.prototype,"readGeometries",null),f=_=r([w("esri.layers.support.SceneFilter")],f);const Ye=f,Xe=["3DObject","Point"],C=ke();let i=class extends pe(Ge(de(ye(ue(ce(he(fe(ge)))))))){constructor(...e){super(...e),this.featureReduction=null,this.rangeInfos=null,this.operationalLayerType="ArcGISSceneServiceLayer",this.type="scene",this.fields=null,this.floorInfo=null,this.outFields=null,this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.excludeObjectIds=new S,this.definitionExpression=null,this.filter=null,this.path=null,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.priority=null,this.semantic=null,this.cachedDrawingInfo={color:!1},this.popupEnabled=!0,this.popupTemplate=null,this.objectIdField=null,this.globalIdField=null,this._fieldUsageInfo={},this.screenSizePerspectiveEnabled=!0}normalizeCtorArgs(e,t){return typeof e=="string"?g({url:e},t):e}getField(e){return this.fieldsIndex.get(e)}getFieldDomain(e,t){var o,n,l,y;const s=(n=(o=this.getFeatureType(t==null?void 0:t.feature))==null?void 0:o.domains)==null?void 0:n[e];return s&&s.type!=="inherited"?s:(y=(l=this.getField(e))==null?void 0:l.domain)!=null?y:null}getFeatureType(e){return e!=null&&p(this.associatedLayer)?this.associatedLayer.getFeatureType(e):null}get types(){var e;return p(this.associatedLayer)?(e=this.associatedLayer.types)!=null?e:[]:[]}get typeIdField(){return p(this.associatedLayer)?this.associatedLayer.typeIdField:null}get formTemplate(){return p(this.associatedLayer)?this.associatedLayer.formTemplate:null}get fieldsIndex(){return new me(this.fields)}readNodePages(e,t,s){return t.layerType==="Point"&&(e=t.pointNodePages),e==null||typeof e!="object"?null:U.fromJSON(e,s)}set elevationInfo(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}get geometryType(){return et[this.profile]||"mesh"}set renderer(e){R(e,this.fieldsIndex),this._set("renderer",e)}readCachedDrawingInfo(e){return e!=null&&typeof e=="object"||(e={}),e.color==null&&(e.color=!1),e}get capabilities(){const e=p(this.associatedLayer)&&this.associatedLayer.capabilities?this.associatedLayer.capabilities:Ve,{query:t,editing:{supportsGlobalId:s,supportsRollbackOnFailure:o,supportsUploadWithItemId:n,supportsReturnServiceEditsInSourceSpatialReference:l},data:{supportsZ:y,supportsM:L,isVersioned:k,supportsAttachment:G},operations:{supportsEditing:V,supportsAdd:J,supportsUpdate:K,supportsDelete:M,supportsQuery:z,supportsQueryAttachments:W}}=e,v=e.operations.supportsChangeTracking,x=ve();return{query:t,editing:{supportsGlobalId:s,supportsReturnServiceEditsInSourceSpatialReference:l,supportsRollbackOnFailure:o,supportsGeometryUpdate:!1,supportsUploadWithItemId:n},data:{supportsAttachment:G,supportsZ:y,supportsM:L,isVersioned:k},operations:{supportsQuery:z,supportsQueryAttachments:W,supportsEditing:V&&v,supportsAdd:x&&J&&v,supportsDelete:x&&M&&v,supportsUpdate:K&&v}}}get editingEnabled(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges}set editingEnabled(e){this._overrideIfSome("editingEnabled",e)}get infoFor3D(){return p(this.associatedLayer)?this.associatedLayer.infoFor3D:null}get defaultPopupTemplate(){return p(this.associatedLayer)||this.attributeStorageInfo?this.createPopupTemplate():null}readObjectIdField(e,t){return!e&&t.fields&&t.fields.some(s=>(s.type==="esriFieldTypeOID"&&(e=s.name),!!e)),e||void 0}readGlobalIdField(e,t){return!e&&t.fields&&t.fields.some(s=>(s.type==="esriFieldTypeGlobalID"&&(e=s.name),!!e)),e||void 0}get displayField(){return p(this.associatedLayer)?this.associatedLayer.displayField:null}readProfile(e,t){const s=t.store.profile;return s!=null&&Q[s]?Q[s]:(h.getLogger(this.declaredClass).error("Unknown or missing profile",{profile:s,layer:this}),"mesh-pyramids")}load(e){const t=p(e)?e.signal:null,s=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(be).then(()=>this._fetchService(t)).then(()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),p(this.filter)?this.filter.loadGeometries(this.spatialReference):null])).then(()=>this._validateElevationInfo()).then(()=>this._applyAssociatedLayerOverrides()).then(()=>this._populateFieldUsageInfo()).then(()=>we(this,{origin:"service"},t)).then(()=>R(this.renderer,this.fieldsIndex)).then(()=>this.finishLoadEditablePortalLayer(e));return this.addResolvingPromise(s),Promise.resolve(this)}async beforeSave(){p(this.filter)&&await this.load()}createQuery(){const e=new Ie;return this.geometryType!=="mesh"&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e}queryExtent(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryExtent(e||this.createQuery(),t))}queryFeatureCount(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatureCount(e||this.createQuery(),t))}queryFeatures(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryFeatures(e||this.createQuery(),t)).then(s=>{if(s==null?void 0:s.features)for(const o of s.features)o.layer=this,o.sourceLayer=this;return s})}async queryCachedAttributes(e,t){const s=Le(this.fieldsIndex,await Be(this,He(this)));return Je(this.parsedUrl.path,this.attributeStorageInfo,e,t,s)}async queryCachedFeature(e,t){const s=await this.queryCachedAttributes(e,[t]);if(!s||s.length===0)throw new d("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const o=new Se;return o.attributes=s[0],o.layer=this,o.sourceLayer=this,o}queryObjectIds(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryObjectIds(e||this.createQuery(),t))}queryAttachments(e,t){return this._getAssociatedLayerForQuery().then(s=>s.queryAttachments(e,t))}getFieldUsageInfo(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(h.getLogger(this.declaredClass).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)}createPopupTemplate(e){return je(this,e)}_getAssociatedLayerForQuery(){const e=this.associatedLayer;return p(e)&&e.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()}async _loadAssociatedLayerForQuery(){if(await this.load(),m(this.associatedLayer))throw new d("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new d("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer}hasCachedStatistics(e){return this.statisticsInfo!=null&&this.statisticsInfo.some(t=>t.name===e)}async queryCachedStatistics(e,t){if(await this.load(t),!this.statisticsInfo)throw new d("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const s=this.fieldsIndex.get(e);if(!s)throw new d("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.statisticsInfo)if(o.name===s.name){const n=Fe(this.parsedUrl.path,o.href);return q(n,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then(l=>l.data)}throw new d("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")}async saveAs(e,t){return this._debouncedSaveOperations(N.SAVE_AS,b(g({},t),{getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"}),e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(N.SAVE,e)}async applyEdits(e,t){const s=await import("./editingSupport.f13d783c.js");if(await this.load(),m(this.associatedLayer))throw new d(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),s.applyEdits(this,this.associatedLayer.source,e,t)}on(e,t){return super.on(e,t)}validateLayer(e){if(e.layerType&&!Xe.includes(e.layerType))throw new d("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new d("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new d("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(s,o){let n=!1,l=!1;if(s==null)n=!0,l=!0;else{const y=o&&o.isGeographic;switch(s){case"east-north-up":case"earth-centered":n=!0,l=y;break;case"vertex-reference-frame":n=!0,l=!y;break;default:n=!1}}if(!n)throw new d("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!l)throw new d("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)}_getTypeKeywords(){const e=[];if(this.profile==="points")e.push("Point");else{if(this.profile!=="mesh-pyramids")throw new d("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e}_populateFieldUsageInfo(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some(n=>n.name===e.name)),s=!!(p(this.associatedLayer)&&this.associatedLayer.fields&&this.associatedLayer.fields.some(n=>n&&e.name===n.name)),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||s,supportsLayerQuery:s};this._fieldUsageInfo[e.name]=o}}_applyAssociatedLayerOverrides(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides()}_applyAssociatedLayerFieldsOverrides(){if(m(this.associatedLayer)||!this.associatedLayer.fields)return;let e=null;for(const t of this.associatedLayer.fields){const s=this.getField(t.name);s?(!s.domain&&t.domain&&(s.domain=t.domain.clone()),s.editable=t.editable,s.nullable=t.nullable,s.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)}_applyAssociatedLayerPopupOverrides(){if(m(this.associatedLayer))return;const e=["popupTemplate","popupEnabled"],t=Oe(this);for(let s=0;s<e.length;s++){const o=e[s],n=this.originIdOf(o),l=this.associatedLayer.originIdOf(o);n<l&&(l===P.SERVICE||l===P.PORTAL_ITEM)&&t.setAtOrigin(o,this.associatedLayer[o],l)}}async _setAssociatedFeatureLayer(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new Ke(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(s){_e(s)||this._logWarningOnPopupEnabled()}}async _logWarningOnPopupEnabled(){await xe(()=>this.popupEnabled&&this.popupTemplate!=null);const e=`this SceneLayer: ${this.title}`;this.attributeStorageInfo==null?h.getLogger(this.declaredClass).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):h.getLogger(this.declaredClass).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)}_validateElevationInfo(){const e=this.elevationInfo;e&&(this.profile==="mesh-pyramids"&&e.mode==="relative-to-scene"&&h.getLogger(this.declaredClass).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&e.featureExpressionInfo.expression!=="0"&&h.getLogger(this.declaredClass).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))}};r([a({types:{key:"type",base:$e,typeMap:{selection:Ee}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],i.prototype,"featureReduction",void 0),r([a({type:[u],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],i.prototype,"rangeInfos",void 0),r([a({json:{read:!1}})],i.prototype,"associatedLayer",void 0),r([a({type:["show","hide"]})],i.prototype,"listMode",void 0),r([a({type:["ArcGISSceneServiceLayer"]})],i.prototype,"operationalLayerType",void 0),r([a({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),r([a(b(g({},C.fields),{readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}}))],i.prototype,"fields",void 0),r([a()],i.prototype,"types",null),r([a()],i.prototype,"typeIdField",null),r([a()],i.prototype,"formTemplate",null),r([a({readOnly:!0})],i.prototype,"fieldsIndex",null),r([a({type:Te,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],i.prototype,"floorInfo",void 0),r([a(C.outFields)],i.prototype,"outFields",void 0),r([a({type:U,readOnly:!0,json:{read:!1}})],i.prototype,"nodePages",void 0),r([c("service","nodePages",["nodePages","pointNodePages"])],i.prototype,"readNodePages",null),r([a({type:[Me],readOnly:!0})],i.prototype,"materialDefinitions",void 0),r([a({type:[ze],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),r([a({type:[We],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),r([a({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),r([a({readOnly:!0})],i.prototype,"attributeStorageInfo",void 0),r([a({readOnly:!0})],i.prototype,"statisticsInfo",void 0),r([a({type:S.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],i.prototype,"excludeObjectIds",void 0),r([a({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],i.prototype,"definitionExpression",void 0),r([a({type:Ye,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],i.prototype,"filter",void 0),r([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),r([a(Ae)],i.prototype,"elevationInfo",null),r([a({type:String})],i.prototype,"geometryType",null),r([a(qe)],i.prototype,"labelsVisible",void 0),r([a({type:[Re],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:D},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:D},write:!0}})],i.prototype,"labelingInfo",void 0),r([a(Pe)],i.prototype,"legendEnabled",void 0),r([a({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){var o,n;if(typeof e=="number"&&e>=0&&e<=1)return e;const s=(n=(o=t.layerDefinition)==null?void 0:o.drawingInfo)==null?void 0:n.transparency;return s!==void 0?De(s):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],i.prototype,"opacity",void 0),r([a({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"priority",void 0),r([a({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],i.prototype,"semantic",void 0),r([a({types:Ne,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],i.prototype,"renderer",null),r([a({json:{read:!1}})],i.prototype,"cachedDrawingInfo",void 0),r([c("service","cachedDrawingInfo")],i.prototype,"readCachedDrawingInfo",null),r([a({readOnly:!0,json:{read:!1}})],i.prototype,"capabilities",null),r([a({type:Boolean,json:{read:!1}})],i.prototype,"editingEnabled",null),r([a({readOnly:!0,json:{write:!1,read:!1}})],i.prototype,"infoFor3D",null),r([a(Ue)],i.prototype,"popupEnabled",void 0),r([a({type:Ce,json:{name:"popupInfo",write:!0}})],i.prototype,"popupTemplate",void 0),r([a({readOnly:!0,json:{read:!1}})],i.prototype,"defaultPopupTemplate",null),r([a({type:String,json:{read:!1}})],i.prototype,"objectIdField",void 0),r([c("service","objectIdField",["objectIdField","fields"])],i.prototype,"readObjectIdField",null),r([a({type:String,json:{read:!1}})],i.prototype,"globalIdField",void 0),r([c("service","globalIdField",["globalIdField","fields"])],i.prototype,"readGlobalIdField",null),r([a({readOnly:!0,type:String,json:{read:!1}})],i.prototype,"displayField",null),r([a({type:String,json:{read:!1}})],i.prototype,"profile",void 0),r([c("service","profile",["store.profile"])],i.prototype,"readProfile",null),r([a({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],i.prototype,"normalReferenceFrame",void 0),r([a(Qe)],i.prototype,"screenSizePerspectiveEnabled",void 0),i=r([w("esri.layers.SceneLayer")],i);const Q={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},et={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"},gt=i;export{gt as default};
