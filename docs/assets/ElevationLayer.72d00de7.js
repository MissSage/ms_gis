var T=Object.defineProperty,_=Object.defineProperties;var $=Object.getOwnPropertyDescriptors;var u=Object.getOwnPropertySymbols;var b=Object.prototype.hasOwnProperty,x=Object.prototype.propertyIsEnumerable;var y=(r,e,t)=>e in r?T(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,p=(r,e)=>{for(var t in e||(e={}))b.call(e,t)&&y(r,t,e[t]);if(u)for(var t of u(e))x.call(e,t)&&y(r,t,e[t]);return r},v=(r,e)=>_(r,$(e));import{O as h,$ as D,nX as E,nY as I,nZ as j,n_ as O,n$ as V,g8 as L,Y as A,bp as U,a1 as m,mA as k,a8 as f,aD as o,aE as s,o0 as C,o1 as J,lJ as q,aF as N,lh as P}from"./vendor.ad8aa1ba.js";import{h as F}from"./WorkerHandle.3accf0bd.js";class g extends F{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,i){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},i):Promise.resolve(null)}release(){--this.ref<=0&&(d.forEach((e,t)=>{e===this&&d.delete(t)}),this.destroy())}}const d=new Map;function M(r=null){let e=d.get(D(r));return e||(h(r)?(e=new g(t=>r.schedule(t)),d.set(r,e)):(e=new g,d.set(null,e))),++e.ref,e}let a=class extends E(I(j(O(V(P))))){constructor(...r){super(...r),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=M()}normalizeCtorArgs(r,e){return typeof r=="string"?p({url:r},e):r}destroy(){this._lercDecoder=L(this._lercDecoder)}readVersion(r,e){let t=e.currentVersion;return t||(t=9.3),t}load(r){const e=h(r)?r.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let i=0;i<t.typeKeywords.length;i++)if(t.typeKeywords[i].toLowerCase()==="elevation 3d layer")return!0;throw new A("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},r).catch(U).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(r,e,t,i){const n=h((i=i||{signal:null}).signal)?i.signal:i.signal=new AbortController().signal,w={responseType:"array-buffer",signal:n},S={noDataValue:i.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(r,e,t,i)).then(()=>m(this.getTileUrl(r,e,t),w)).then(l=>this._lercDecoder.decode(l.data,S,n)).then(l=>{var c;return{values:l.pixelData,width:l.width,height:l.height,maxZError:(c=l.fileInfo)==null?void 0:c.maxZError,noDataValue:l.noDataValue,minValue:l.minValue,maxValue:l.maxValue}})}getTileUrl(r,e,t){const i=!this.tilemapCache&&this.supportsBlankTile,n=k(v(p({},this.parsedUrl.query),{blankTile:!i&&null}));return`${this.parsedUrl.path}/tile/${r}/${e}/${t}${n?"?"+n:""}`}async queryElevation(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.51f1d008.js");return f(e),new t().query(this,r,e)}async createElevationSampler(r,e){const{ElevationQuery:t}=await import("./ElevationQuery.51f1d008.js");return f(e),new t().createSampler(this,r,e)}_fetchTileAvailability(r,e,t,i){return this.tilemapCache?this.tilemapCache.fetchAvailability(r,e,t,i):Promise.resolve("unknown")}async _fetchImageService(r){var i;if(this.sourceJSON)return this.sourceJSON;const e={query:p({f:"json"},this.parsedUrl.query),responseType:"json",signal:r},t=await m(this.parsedUrl.path,e);t.ssl&&(this.url=(i=this.url)==null?void 0:i.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};o([s({json:{read:{source:"copyrightText"}}})],a.prototype,"copyright",void 0),o([s({readOnly:!0,type:C})],a.prototype,"heightModelInfo",void 0),o([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],a.prototype,"path",void 0),o([s({type:["show","hide"]})],a.prototype,"listMode",void 0),o([s({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"minScale",void 0),o([s({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],a.prototype,"maxScale",void 0),o([s({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],a.prototype,"opacity",void 0),o([s({type:["ArcGISTiledElevationServiceLayer"]})],a.prototype,"operationalLayerType",void 0),o([s()],a.prototype,"sourceJSON",void 0),o([s({json:{read:!1},value:"elevation",readOnly:!0})],a.prototype,"type",void 0),o([s(J)],a.prototype,"url",void 0),o([s()],a.prototype,"version",void 0),o([q("version",["currentVersion"])],a.prototype,"readVersion",null),a=o([N("esri.layers.ElevationLayer")],a),a.prototype.fetchTile.__isDefault__=!0;const K=a;export{K as default};
