import{nN as r,nO as i}from"./vendor.1bde3be2.js";function l(e){return r.extendedSpatialReferenceInfo(e)}function a(e,n,t){return r.clip(i,e,n,t)}function s(e,n,t){return r.cut(i,e,n,t)}function p(e,n,t){return r.contains(i,e,n,t)}function d(e,n,t){return r.crosses(i,e,n,t)}function g(e,n,t,u){return r.distance(i,e,n,t,u)}function m(e,n,t){return r.equals(i,e,n,t)}function h(e,n,t){return r.intersects(i,e,n,t)}function x(e,n,t){return r.touches(i,e,n,t)}function y(e,n,t){return r.within(i,e,n,t)}function S(e,n,t){return r.disjoint(i,e,n,t)}function R(e,n,t){return r.overlaps(i,e,n,t)}function w(e,n,t,u){return r.relate(i,e,n,t,u)}function D(e,n){return r.isSimple(i,e,n)}function b(e,n){return r.simplify(i,e,n)}function A(e,n,t=!1){return r.convexHull(i,e,n,t)}function T(e,n,t){return r.difference(i,e,n,t)}function v(e,n,t){return r.symmetricDifference(i,e,n,t)}function E(e,n,t){return r.intersect(i,e,n,t)}function L(e,n,t=null){return r.union(i,e,n,t)}function V(e,n,t,u,o,c,f){return r.offset(i,e,n,t,u,o,c,f)}function j(e,n,t,u,o=!1){return r.buffer(i,e,n,t,u,o)}function z(e,n,t,u,o,c,f){return r.geodesicBuffer(i,e,n,t,u,o,c,f)}function I(e,n,t,u=!0){return r.nearestCoordinate(i,e,n,t,u)}function H(e,n,t){return r.nearestVertex(i,e,n,t)}function _(e,n,t,u,o){return r.nearestVertices(i,e,n,t,u,o)}function O(e,n,t,u){if(n==null||u==null)throw new Error("Illegal Argument Exception");const o=r.rotate(n,t,u);return o.spatialReference=e,o}function P(e,n,t){if(n==null||t==null)throw new Error("Illegal Argument Exception");const u=r.flipHorizontal(n,t);return u.spatialReference=e,u}function q(e,n,t){if(n==null||t==null)throw new Error("Illegal Argument Exception");const u=r.flipVertical(n,t);return u.spatialReference=e,u}function B(e,n,t,u,o){return r.generalize(i,e,n,t,u,o)}function C(e,n,t,u){return r.densify(i,e,n,t,u)}function M(e,n,t,u,o=0){return r.geodesicDensify(i,e,n,t,u,o)}function $(e,n,t){return r.planarArea(i,e,n,t)}function G(e,n,t){return r.planarLength(i,e,n,t)}function N(e,n,t,u){return r.geodesicArea(i,e,n,t,u)}function k(e,n,t,u){return r.geodesicLength(i,e,n,t,u)}function F(e,n,t){return n==null||t==null?[]:r.intersectLinesToPoints(i,e,n,t)}function J(e,n){r.changeDefaultSpatialReferenceTolerance(e,n)}function K(e){r.clearDefaultSpatialReferenceTolerance(e)}const U=Object.freeze(Object.defineProperty({__proto__:null,extendedSpatialReferenceInfo:l,clip:a,cut:s,contains:p,crosses:d,distance:g,equals:m,intersects:h,touches:x,within:y,disjoint:S,overlaps:R,relate:w,isSimple:D,simplify:b,convexHull:A,difference:T,symmetricDifference:v,intersect:E,union:L,offset:V,buffer:j,geodesicBuffer:z,nearestCoordinate:I,nearestVertex:H,nearestVertices:_,rotate:O,flipHorizontal:P,flipVertical:q,generalize:B,densify:C,geodesicDensify:M,planarArea:$,planarLength:G,geodesicArea:N,geodesicLength:k,intersectLinesToPoints:F,changeDefaultSpatialReferenceTolerance:J,clearDefaultSpatialReferenceTolerance:K},Symbol.toStringTag,{value:"Module"}));export{L as A,$ as B,k as C,V as D,I as E,J as G,M as H,B as I,H as L,K as M,U as O,F as P,j as R,v as S,_ as T,C as V,G as _,p as a,O as b,h as c,w as d,x as f,R as g,b as h,s as i,z as j,y as l,D as m,d as o,S as p,N as q,a as r,g as s,l as t,m as u,P as v,E as w,T as x,A as y,q as z};
