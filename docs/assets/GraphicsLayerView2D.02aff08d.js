import{ee as a,hx as h,aD as r,aE as o,aF as p}from"./vendor.ad8aa1ba.js";import{y as c}from"./LayerView2D.dfaa8db6.js";import{i as l}from"./GraphicContainer.3ecde44c.js";import{o as m}from"./BaseGraphicContainer.fc5d4975.js";import{u as g}from"./LayerView.e359e190.js";import"./utils.baffb554.js";import"./Utils.4c2feac4.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.22d23c43.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.6f6162d1.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./cimAnalyzer.209d4429.js";import"./fontUtils.c3d9f30f.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.ebb41fc5.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.cc457c75.js";import"./normalizeUtilsSync.b16e64df.js";import"./VertexArrayObject.6d35aaee.js";import"./FeatureContainer.f0f5888c.js";import"./TileContainer.9a7cb2ee.js";import"./WGLContainer.af3d731a.js";import"./pixelUtils.62190471.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.83597331.js";import"./StyleDefinition.02cc41be.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./visualVariablesUtils.8e59fa54.js";import"./visualVariablesUtils.551507c0.js";import"./Matcher.d6847bda.js";import"./tileUtils.eab69325.js";import"./TileClipper.51ce0e42.js";import"./Geometry.d049a63c.js";import"./ExpandedCIM.a759c9e9.js";import"./schemaUtils.9f875565.js";import"./createSymbolSchema.85d3f514.js";import"./util.69d9a6e8.js";import"./ComputedAttributeStorage.23683ac7.js";import"./centroid.7be204a9.js";import"./vec3f32.1121a836.js";const d={remove(){},pause(){},resume(){}};let s=class extends c(g){constructor(){super(...arguments),this._highlightIds=new Map}attach(){this.graphicsView=new m({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:this.layer.graphics,container:new l(this.view.featuresTilingScheme)}),this._updateHighlight(),this.container.addChild(this.graphicsView.container),this.handles.add(this.layer.on("graphic-update",this.graphicsView.graphicUpdateHandler),"graphicslayerview2d")}detach(){this.container.removeAllChildren(),this.graphicsView.destroy(),this.graphicsView=null,this.handles.remove("graphicslayerview2d")}async hitTest(i){return this.graphicsView?this.graphicsView.hitTest(i).map(e=>({type:"graphic",graphic:e,mapPoint:i,layer:this.layer})):null}async fetchPopupFeatures(i){if(this.graphicsView)return this.graphicsView.hitTest(i).filter(e=>!!e.popupTemplate)}queryGraphics(){return Promise.resolve(this.graphicsView.graphics)}update(i){this.graphicsView.processUpdate(i)}moveStart(){}viewChange(){this.graphicsView.viewChange()}moveEnd(){}isUpdating(){return!this.graphicsView||this.graphicsView.updating}highlight(i){let e;return typeof i=="number"?e=[i]:i instanceof a?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(t=>t&&t.uid):h.isCollection(i)&&i.length>0&&(e=i.map(t=>t&&t.uid).toArray()),e=e==null?void 0:e.filter(t=>t!=null),e.length?(this._addHighlight(e),{remove:()=>this._removeHighlight(e)}):d}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){var i;(i=this.graphicsView)==null||i.setHighlight(Array.from(this._highlightIds.keys()))}};r([o()],s.prototype,"graphicsView",void 0),s=r([p("esri.views.2d.layers.GraphicsLayerView2D")],s);const hi=s;export{hi as default};
