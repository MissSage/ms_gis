import{ck as y,pV as g,q0 as U,ac as C,p_ as $}from"./vendor.ad8aa1ba.js";import{i as E,b as G}from"./cimAnalyzer.209d4429.js";import{CIMSymbolRasterizer as V,GeometryStyle as I}from"./CIMSymbolRasterizer.ae0f7028.js";import"./fontUtils.c3d9f30f.js";import"./BidiEngine.d8bba3fc.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./number.30628ef2.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.ebb41fc5.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.cc457c75.js";import"./Rasterizer.de49efb9.js";import"./imageutils.c5bd8d1b.js";import"./rasterizingUtils.f70fef8e.js";const b=new V(null,!0),a=y(g.size),R=y(g.maxSize),q=y(g.lineWidth),A=1;function O(t){const e=t==null?void 0:t.size;return typeof e=="number"?{width:e,height:e}:{width:e!=null&&typeof e=="object"&&"width"in e?e.width:null,height:e!=null&&typeof e=="object"&&"height"in e?e.height:null}}async function ee(t,e={}){var v;const{node:w,opacity:j,symbolConfig:m}=e,x=typeof m=="object"&&"isSquareFill"in m&&m.isSquareFill,M=e.cimOptions||e,o=M.geometryType||U((v=t==null?void 0:t.data)==null?void 0:v.symbol),i=O(e),{feature:z,fieldMap:S}=M;if(i.width==null||i.height==null){const r=await E.resolveSymbolOverrides(t.data,z,null,S,o);if(!r)return null;(t=t.clone()).data={type:"CIMSymbolReference",symbol:r},t.data.primitiveOverrides=null;const d=[];G.fetchResources(r,b.resourceManager,d),d.length>0&&await Promise.all(d);const{width:u,height:p}=G.getEnvelope(r,null,b.resourceManager);i.width=o==="esriGeometryPolygon"?a:o==="esriGeometryPolyline"?q:u!=null&&isFinite(u)?Math.min(u,R):a,i.height=o==="esriGeometryPolygon"?a:p!=null&&isFinite(p)?Math.max(Math.min(p,R),A):a}const c=await b.rasterizeCIMSymbolAsync(t,z,i,x||o!=="esriGeometryPolygon"?I.Preview:I.Legend,S,o);if(!c)return null;const{width:P,height:F}=c,s=document.createElement("canvas");s.width=P,s.height=F,s.getContext("2d").putImageData(c,0,0);const f=C(i.width),h=C(i.height),l=new Image(f,h);l.src=s.toDataURL(),j!=null&&(l.style.opacity=`${j}`);let n=l;if(e.effectView!=null){const r={shape:{type:"image",x:0,y:0,width:f,height:h,src:l.src},fill:null,stroke:null,offset:[0,0]};n=$([[r]],[f,h],{effectView:e.effectView})}return w&&n&&w.appendChild(n),n}export{ee as previewCIMSymbol};
