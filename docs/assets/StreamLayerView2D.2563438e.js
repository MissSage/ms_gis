var j=Object.defineProperty,S=Object.defineProperties;var g=Object.getOwnPropertyDescriptors;var l=Object.getOwnPropertySymbols;var x=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var c=(e,t,r)=>t in e?j(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r,p=(e,t)=>{for(var r in t||(t={}))x.call(t,r)&&c(e,r,t[r]);if(l)for(var r of l(t))O.call(t,r)&&c(e,r,t[r]);return e},d=(e,t)=>S(e,g(t));import{aJ as n,aK as o,aL as R,az as m,a3 as y,ei as _,$ as u,W as h}from"./vendor.faf54504.js";import I from"./FeatureLayerView2D.42b1127e.js";import{e as E}from"./util.2f95e8b0.js";import"./utils.f12e4514.js";import"./Utils.b66268a2.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.5f3d51a1.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.41925623.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./LayerView2D.f9d8756f.js";import"./schemaUtils.54e7aa39.js";import"./visualVariablesUtils.017afb35.js";import"./createSymbolSchema.9b74e55c.js";import"./cimAnalyzer.1303f7c5.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.b04cd495.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.bed38f50.js";import"./ExpandedCIM.a540a237.js";import"./popupUtils.6b4a036b.js";import"./LayerView.9097b9c4.js";import"./RefreshableLayerView.21a246c0.js";function f(e,t){if(u(e)&&u(t))return null;const r={};return h(t)&&(r.geometry=t.toJSON()),h(e)&&(r.where=e),r}let s=class extends I{constructor(){super(...arguments),this._enabledDataReceived=!1,this.errorString=null,this.connectionStatus="disconnected"}initialize(){this.handles.add([m(()=>{var e;return(e=this.layer)==null?void 0:e.purgeOptions},()=>this._update()),m(()=>this.suspended,e=>{e?this._proxy.pauseStream():this._proxy.resumeStream()})])}get connectionError(){if(this.errorString)return new y("stream-controller",this.errorString)}on(e,t){e==="data-received"&&(this._enabledDataReceived=!0,this._proxy.enableEvent("data-received",!0));const r=super.on(e,t),i=this;return{remove(){r.remove(),e==="data-received"&&(i._proxy.closed||i.hasEventListener("data-received")||i._proxy.enableEvent("data-received",!1))}}}queryLatestObservations(e,t){if(!(this.layer.timeInfo.endField||this.layer.timeInfo.startField))throw new y("streamlayer-no-timeField","queryLatestObservation can only be used with services that define a TrackIdField");return this._proxy.queryLatestObservations(this._cleanUpQuery(e),t).then(r=>{const i=_.fromJSON(r);return i.features.forEach(a=>{a.layer=this.layer,a.sourceLayer=this.layer}),i})}detach(){super.detach(),this.connectionStatus="disconnected"}_createClientOptions(){return d(p({},super._createClientOptions()),{setProperty:e=>{this.set(e.propertyName,e.value)}})}_createTileRendererHash(e){const t=`${JSON.stringify(this.layer.purgeOptions)}.${JSON.stringify(f(this.layer.definitionExpression,this.layer.geometryDefinition))})`;return super._createTileRendererHash(e)+t}async _createServiceOptions(){const e=this.layer,{objectIdField:t}=e,r=e.fields.map(b=>b.toJSON()),i=E(e.geometryType),a=e.timeInfo&&e.timeInfo.toJSON()||null,v=e.spatialReference?e.spatialReference.toJSON():null;return{type:"stream",fields:r,geometryType:i,objectIdField:t,timeInfo:a,source:this.layer.parsedUrl,serviceFilter:f(this.layer.definitionExpression,this.layer.geometryDefinition),purgeOptions:this.layer.purgeOptions.toJSON(),enableDataReceived:this._enabledDataReceived,spatialReference:v,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,updateInterval:this.layer.updateInterval,customParameters:e.customParameters}}};n([o()],s.prototype,"errorString",void 0),n([o({readOnly:!0})],s.prototype,"connectionError",null),n([o()],s.prototype,"connectionStatus",void 0),s=n([R("esri.views.2d.layers.StreamLayerView2D")],s);const te=s;export{te as default};
