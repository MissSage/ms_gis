import{rA as a,aq as m,as as l,bx as p}from"./vendor.150443b7.js";import{n as d}from"./BitmapTileContainer.3d6021aa.js";import{o as c}from"./BaseTileRenderer.38ca7ae6.js";import"./Bitmap.3f05d3f3.js";import"./utils.9098e95e.js";import"./Utils.eb4237a0.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.0551b3c6.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.420ab2c9.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./TileContainer.3a4f9345.js";import"./WGLContainer.8ea5db01.js";import"./pixelUtils.e6b9584d.js";import"./VertexArrayObject.b8066877.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.30b3a6f7.js";import"./StyleDefinition.5e257d9e.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";class h{constructor(){this.gradient=null,this.height=512,this.width=512}render(t){a(t,512,this.intensities,this.gradient,this.minDensity,this.maxDensity)}}let o=class extends c{constructor(e){super(e),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new d(e.tileInfoView)}createTile(e){const t=this._container.createTile(e);return this.tileInfoView.getTileCoords(t.bitmap,e),t.bitmap.resolution=this.tileInfoView.getTileResolution(e),t}onConfigUpdate(){const e=this.layer.renderer;if(e.type==="heatmap"){const{minDensity:t,maxDensity:s,colorStops:n}=e;this._intensityInfo.minDensity=t,this._intensityInfo.maxDensity=s,this._gradient=p(n),this.tiles.forEach(r=>{const i=r.bitmap.source;i&&(i.minDensity=t,i.maxDensity=s,i.gradient=this._gradient,r.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(e){e.addChild(this._container)}uninstall(e){this._container.removeAllChildren(),e.removeChild(this._container)}disposeTile(e){this._container.removeChild(e),e.destroy()}supportsRenderer(e){return e&&e.type==="heatmap"}onTileData(e){const t=this.tiles.get(e.tileKey);if(!t)return;const s=e.intensityInfo,{minDensity:n,maxDensity:r}=this._intensityInfo,i=t.bitmap.source||new h;i.intensities=s&&s.matrix||null,i.minDensity=n,i.maxDensity=r,i.gradient=this._gradient,t.bitmap.source=i,this._container.addChild(t),this._container.requestRender(),this.requestUpdate()}onTileError(e){console.error(e)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(e,t){return console.error(e),Promise.reject()}};o=m([l("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],o);const $=o;export{$ as default};
