var W=Object.defineProperty;var k=Object.getOwnPropertySymbols;var H=Object.prototype.hasOwnProperty,K=Object.prototype.propertyIsEnumerable;var A=(e,t,i)=>t in e?W(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i,b=(e,t)=>{for(var i in t||(t={}))H.call(t,i)&&A(e,i,t[i]);if(k)for(var i of k(t))K.call(t,i)&&A(e,i,t[i]);return e};import{eS as S,aR as L,a7 as Y,mU as C,hT as J,az as Q,ez as G,W as I,$ as X,mW as Z,bu as q,n3 as tt,e5 as B,n4 as et,e7 as it,aJ as w,aK as x,aL as at}from"./vendor.faf54504.js";import{b as D,g as st,d as rt}from"./kmlUtils.a9ec02bb.js";import{S as ot,T as nt,R as lt}from"./Bitmap.64843fff.js";import{a as pt}from"./BitmapContainer.b16692d9.js";import{y as ht}from"./LayerView2D.f9d8756f.js";import{i as T}from"./GraphicContainer.209d63bd.js";import{o as R}from"./BaseGraphicContainer.9e46822b.js";import{u as mt}from"./LayerView.9097b9c4.js";import{C as ct,$ as dt}from"./rasterProjectionHelper.ac99406d.js";import{a as ut,e as gt}from"./WGLContainer.3275b1cd.js";import{y as _t,o as ft}from"./RenderingContext.9d80cad8.js";import{P as M,G as U,D as N,L as z,Y as yt,V as wt,f as O}from"./enums.2d9e6f64.js";import{x as bt}from"./VertexArrayObject.cccbf8c8.js";import{E as $}from"./Texture.5f3d51a1.js";import"./utils.f12e4514.js";import"./Utils.b66268a2.js";import"./number.30628ef2.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.41925623.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./cimAnalyzer.1303f7c5.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.b04cd495.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.bed38f50.js";import"./normalizeUtilsSync.c97dd948.js";import"./FeatureContainer.681e7125.js";import"./TileContainer.c0bbe6b2.js";import"./visualVariablesUtils.6a30877b.js";import"./visualVariablesUtils.017afb35.js";import"./Matcher.34d4c620.js";import"./tileUtils.909aef5e.js";import"./TileClipper.b1a84b9f.js";import"./Geometry.d049a63c.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./ExpandedCIM.a540a237.js";import"./devEnvironmentUtils.d8d0484c.js";import"./schemaUtils.54e7aa39.js";import"./createSymbolSchema.9b74e55c.js";import"./util.2f95e8b0.js";import"./ComputedAttributeStorage.1bb13a38.js";import"./centroid.a98813ae.js";import"./vec3f32.1121a836.js";import"./pixelUtils.34cd9289.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.c4ecd603.js";import"./StyleDefinition.099454d7.js";import"./config.82550349.js";import"./programUtils.a96a972c.js";import"./NestedMap.6f8cbc5c.js";import"./OrderIndependentTransparency.9f3f7312.js";class h{constructor(t){if(t)this._ownsRctx=!1,this._rctx=t;else{if(h._instance)return h._instanceRefCount++,h._instance;h._instanceRefCount=1,h._instance=this,this._ownsRctx=!0;const a=document.createElement("canvas").getContext("webgl");a.getExtension("OES_texture_float"),this._rctx=new _t(a,{})}const i={applyProjection:!0,bilinear:!1,bicubic:!1},r=ft("raster/reproject","raster/reproject",new Map([["a_position",0]]),i);this._program=this._rctx.programCache.acquire(r.shaders.vertexShader,r.shaders.fragmentShader,r.attributes),this._rctx.useProgram(this._program),this._program.setUniform1f("u_opacity",1),this._program.setUniform1i("u_image",0),this._program.setUniform1i("u_flipY",0),this._program.setUniform1i("u_transformGrid",1),this._quad=new ut(this._rctx,[0,0,1,0,0,1,1,1])}reprojectTexture(t,i,r=!1){const a=S(t.extent,i),s=new L({x:(t.extent.xmax-t.extent.xmin)/t.texture.descriptor.width,y:(t.extent.ymax-t.extent.ymin)/t.texture.descriptor.height,spatialReference:t.extent.spatialReference}),{x:o,y:m}=ct(s,i,t.extent);let p=(o+m)/2;const n=Math.round((a.xmax-a.xmin)/p),c=Math.round((a.ymax-a.ymin)/p);p=(a.width/n+a.height/c)/2;const V=new L({x:p,y:p,spatialReference:a.spatialReference}),f=dt({projectedExtent:a,srcBufferExtent:t.extent,pixelSize:V,hasWrapAround:!0,spacing:[16,16]}),y=gt(this._rctx,f),u=new $(this._rctx,{width:n,height:c,pixelFormat:M.RGBA,dataType:U.UNSIGNED_BYTE,wrapMode:N.CLAMP_TO_EDGE,samplingMode:z.LINEAR,hasMipmap:!1}),l=new bt(this._rctx,{colorTarget:yt.TEXTURE,depthStencilTarget:wt.NONE,width:n,height:c},u);if(this._rctx.bindFramebuffer(l),this._rctx.setViewport(0,0,n,c),this._rctx.useProgram(this._program),this._rctx.bindTexture(t.texture,0),this._rctx.bindTexture(y,1),this._quad.bind(),this._program.setUniform2f("u_srcImageSize",t.texture.descriptor.width,t.texture.descriptor.height),this._program.setUniform2fv("u_transformSpacing",f.spacing),this._program.setUniform2fv("u_transformGridSize",f.size),this._program.setUniform2f("u_targetImageSize",n,c),this._quad.draw(),this._quad.unbind(),this._rctx.useProgram(null),this._rctx.bindFramebuffer(null),y.dispose(),r){const g=new ImageData(l.descriptor.width,l.descriptor.height);return l.readPixels(0,0,l.descriptor.width,l.descriptor.height,M.RGBA,U.UNSIGNED_BYTE,g.data),l.detachColorTexture(O.COLOR_ATTACHMENT0),l.dispose(),{texture:u,extent:a,imageData:g}}return l.detachColorTexture(O.COLOR_ATTACHMENT0),l.dispose(),{texture:u,extent:a}}reprojectBitmapData(t,i){const r=ot(t.bitmapData)?nt(t.bitmapData):t.bitmapData,a=new $(this._rctx,{width:t.bitmapData.width,height:t.bitmapData.height,pixelFormat:M.RGBA,dataType:U.UNSIGNED_BYTE,wrapMode:N.CLAMP_TO_EDGE,samplingMode:z.LINEAR,hasMipmap:!1},r),s=this.reprojectTexture({texture:a,extent:t.extent},i,!0);s.texture.dispose();const o=document.createElement("canvas");return o.width=s.imageData.width,o.height=s.imageData.height,o.getContext("2d").putImageData(s.imageData,0,0),{bitmapData:o,extent:s.extent}}async loadAndReprojectBitmapData(t,i,r){const a=(await Y(t,{responseType:"image"})).data,s=document.createElement("canvas");s.width=a.width,s.height=a.height;const o=s.getContext("2d");o.drawImage(a,0,0);const m=o.getImageData(0,0,s.width,s.height);if(i.spatialReference.equals(r))return{bitmapData:m,extent:i};const p=this.reprojectBitmapData({bitmapData:m,extent:i},r);return{bitmapData:p.bitmapData,extent:p.extent}}destroy(){this._ownsRctx?(h._instanceRefCount--,h._instanceRefCount===0&&(this._quad.dispose(),this._program.dispose(),this._rctx.dispose(),h._instance=null)):(this._quad.dispose(),this._program.dispose())}}h._instanceRefCount=0;class F{constructor(){this.allSublayers=new Map,this.allPoints=[],this.allPolylines=[],this.allPolygons=[],this.allMapImages=[]}}let d=class extends ht(mt){constructor(){super(...arguments),this._bitmapIndex=new Map,this._mapImageContainer=new pt,this._kmlVisualData=new F,this.allVisiblePoints=new C,this.allVisiblePolylines=new C,this.allVisiblePolygons=new C,this.allVisibleMapImages=new J}async hitTest(e,t){var r,a,s;const i=this.layer;return[(r=this._pointsView)==null?void 0:r.hitTest(e),(a=this._polylinesView)==null?void 0:a.hitTest(e),(s=this._polygonsView)==null?void 0:s.hitTest(e)].flat().filter(Boolean).map(o=>(o.layer=i,o.sourceLayer=i,{type:"graphic",graphic:o,layer:i,mapPoint:e}))}update(e){this._polygonsView&&this._polygonsView.processUpdate(e),this._polylinesView&&this._polylinesView.processUpdate(e),this._pointsView&&this._pointsView.processUpdate(e)}attach(){this._fetchController=new AbortController,this.container.addChild(this._mapImageContainer),this._polygonsView=new R({view:this.view,graphics:this.allVisiblePolygons,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polygonsView.container),this._polylinesView=new R({view:this.view,graphics:this.allVisiblePolylines,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._polylinesView.container),this._pointsView=new R({view:this.view,graphics:this.allVisiblePoints,requestUpdateCallback:()=>this.requestUpdate(),container:new T(this.view.featuresTilingScheme)}),this.container.addChild(this._pointsView.container),this.handles.add([this.allVisibleMapImages.on("change",e=>{e.added.forEach(t=>this._addMapImage(t)),e.removed.forEach(t=>this._removeMapImage(t))}),Q(()=>this.layer.visibleSublayers,e=>{for(const[t,i]of this._kmlVisualData.allSublayers)i.visibility=0;for(const t of e){const i=this._kmlVisualData.allSublayers.get(t.id);i&&(i.visibility=1)}this._refreshCollections()})]),this.updatingHandles.addPromise(this._fetchService(this._fetchController.signal)),this._imageReprojector=new h}detach(){this._fetchController.abort(),this._fetchController=null,this._mapImageContainer.removeAllChildren(),this.container.removeAllChildren(),this._bitmapIndex.clear(),this._polygonsView&&(this._polygonsView.destroy(),this._polygonsView=null),this._polylinesView&&(this._polylinesView.destroy(),this._polylinesView=null),this._pointsView&&(this._pointsView.destroy(),this._pointsView=null),this._imageReprojector&&(this._imageReprojector.destroy(),this._imageReprojector=null)}moveStart(){}viewChange(){this._polygonsView.viewChange(),this._polylinesView.viewChange(),this._pointsView.viewChange()}moveEnd(){}isUpdating(){return this._pointsView.updating||this._polygonsView.updating||this._polylinesView.updating}_addMapImage(e){(this.view.spatialReference.isWGS84||this.view.spatialReference.isWebMercator)&&this._imageReprojector.loadAndReprojectBitmapData(e.href,G.fromJSON(e.extent),this.view.spatialReference).then(t=>{const i=new lt(t.bitmapData,{immutable:!1,requestRenderOnSourceChangedEnabled:!0});i.x=t.extent.xmin,i.y=t.extent.ymax,i.resolution=t.extent.width/t.bitmapData.width,i.rotation=e.rotation,this._mapImageContainer.addChild(i),this._bitmapIndex.set(e,i)})}async _getViewDependentUrl(e,t){const{viewFormat:i,viewBoundScale:r,httpQuery:a}=e;if(I(i)){if(X(t))throw new Error("Loading this network link requires a view state.");let s;if(await Z(),I(r)&&r!==1){const _=new G(t.extent);_.expand(r),s=_}else s=t.extent;s=S(s,q.WGS84);const o=S(s,q.WebMercator),m=s.xmin,p=s.xmax,n=s.ymin,c=s.ymax,V=t.size[0]*t.pixelRatio,f=t.size[1]*t.pixelRatio,y=Math.max(o.width,o.height),u={"[bboxWest]":m.toString(),"[bboxEast]":p.toString(),"[bboxSouth]":n.toString(),"[bboxNorth]":c.toString(),"[lookatLon]":s.center.x.toString(),"[lookatLat]":s.center.y.toString(),"[lookatRange]":y.toString(),"[lookatTilt]":"0","[lookatHeading]":t.rotation.toString(),"[lookatTerrainLon]":s.center.x.toString(),"[lookatTerrainLat]":s.center.y.toString(),"[lookatTerrainAlt]":"0","[cameraLon]":s.center.x.toString(),"[cameraLat]":s.center.y.toString(),"[cameraAlt]":y.toString(),"[horizFov]":"60","[vertFov]":"60","[horizPixels]":V.toString(),"[vertPixels]":f.toString(),"[terrainEnabled]":"0","[clientVersion]":tt,"[kmlVersion]":"2.2","[clientName]":"ArcGIS API for JavaScript","[language]":"en-US"},l=_=>{for(const E in _)for(const P in u)_[E]=_[E].replace(P,u[P])},g=B(i);l(g);let j={};I(a)&&(j=B(a),l(j));const v=et(e.href);return v.query=b(b(b({},v.query),g),j),`${v.path}?${it(g)}`}return e.href}async _fetchService(e){const t=new F;await this._loadVisualData(this.layer.url,t,e),this._kmlVisualData=t,this._refreshCollections()}_refreshCollections(){this.allVisiblePoints.removeAll(),this.allVisiblePolylines.removeAll(),this.allVisiblePolygons.removeAll(),this.allVisibleMapImages.removeAll(),this.allVisiblePoints.addMany(this._kmlVisualData.allPoints.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolylines.addMany(this._kmlVisualData.allPolylines.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisiblePolygons.addMany(this._kmlVisualData.allPolygons.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e)),this.allVisibleMapImages.addMany(this._kmlVisualData.allMapImages.filter(e=>this._isSublayerVisible(e.sublayerId)).map(({item:e})=>e))}_isSublayerVisible(e){const t=this._kmlVisualData.allSublayers.get(e);return!!t.visibility&&(t.parentFolderId===-1||this._isSublayerVisible(t.parentFolderId))}_loadVisualData(e,t,i){return this._fetchParsedKML(e,i).then(async r=>{for(const a of r.sublayers){t.allSublayers.set(a.id,a);const s=a.points?await D(a.points):[],o=a.polylines?await D(a.polylines):[],m=a.polygons?await D(a.polygons):[],p=a.mapImages||[];if(t.allPoints.push(...s.map(n=>({item:n,sublayerId:a.id}))),t.allPolylines.push(...o.map(n=>({item:n,sublayerId:a.id}))),t.allPolygons.push(...m.map(n=>({item:n,sublayerId:a.id}))),t.allMapImages.push(...p.map(n=>({item:n,sublayerId:a.id}))),a.networkLink){const n=await this._getViewDependentUrl(a.networkLink,this.view.state);await this._loadVisualData(n,t,i)}}})}_fetchParsedKML(e,t){return st(e,this.layer.spatialReference,this.layer.refreshInterval,t).then(i=>rt(i.data))}_removeMapImage(e){const t=this._bitmapIndex.get(e);t&&(this._mapImageContainer.removeChild(t),this._bitmapIndex.delete(e))}};w([x()],d.prototype,"_pointsView",void 0),w([x()],d.prototype,"_polylinesView",void 0),w([x()],d.prototype,"_polygonsView",void 0),w([x()],d.prototype,"updating",void 0),d=w([at("esri.views.2d.layers.KMLLayerView2D")],d);const Ve=d;export{Ve as default};
