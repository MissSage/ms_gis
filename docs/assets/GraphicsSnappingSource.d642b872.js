import{aA as b,aB as E,O as l,a8 as c,au as f,pq as k,at as C,lX as F,ps as A,pB as $,pA as j,U as h,a_ as R,eL as x,b2 as G,pC as m,fx as P,eM as I,d0 as O,kl as H,p2 as Z,aD as o,aE as p,aF as z,ed as L,i3 as M}from"./vendor.1bde3be2.js";import{p as q}from"./normalizeUtilsSync.9d282989.js";import{u as B}from"./FeatureStore.3048bb4f.js";import{Y as U}from"./QueryEngine.e161872a.js";import{r as W,a as Q}from"./queryEngineUtils.b57c216c.js";import{r as v,a as T,n as S}from"./symbologySnappingCandidates.2591b023.js";import"./PooledRBush.80db976d.js";import"./optimizedFeatureQueryEngineAdapter.a3dff0e0.js";import"./centroid.27e27241.js";import"./QueryEngineCapabilities.78217f95.js";import"./timeSupport.f2cf5a12.js";import"./VertexSnappingCandidate.b64de684.js";const w="graphics-collections";let r=class extends b(E){constructor(e){super(e),this.availability=1,this._sources={multipoint:null,point:null,polygon:null,polyline:null},this._loadedWkids=new Set,this._loadedWkts=new Set,this._pendingAdds=[],this._extrudedPolygonSymbolsCount=0}get updating(){return this.updatingHandles.updating}get _hasZ(){const e=this.view;return l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes"}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d";if(!s||t.type==="map-notes")return v();const i=async(n,a)=>(await L(e.whenLayerView(t),a)).elevationAlignPointsInFeatures(n,a);return v(s,{elevationInfo:t.elevationInfo,alignPointsInFeatures:i,spatialReference:e.spatialReference})}get _snappingElevationFilter(){const{view:e}=this,t=l(e)&&e.type==="3d"&&this.layerSource.layer.type!=="map-notes";return T(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource,s=l(e)&&e.type==="3d",i=this._extrudedPolygonSymbolsCount>0;return s&&t.type!=="map-notes"&&i?S(i,async(n,a)=>{const d=await e.whenLayerView(t);return c(a),d.queryForSymbologySnapping({candidates:n,spatialReference:e.spatialReference},a)}):S()}destroy(){for(const e of this._pendingAdds)e.task.abort();this._pendingAdds.length=0,this._mapSources(e=>this._destroySource(e))}initialize(){this.updatingHandles.add(()=>this.getGraphicsLayers(),s=>{this.updatingHandles.removeHandles(w);for(const i of s)this._addMany(i.graphics.toArray()),this.handles.add([i.on("graphic-update",n=>this._onGraphicUpdate(n)),this.updatingHandles.addOnCollectionChange(()=>i.graphics,n=>this._onGraphicsChanged(n))],w)},f);const{view:e}=this,{layer:t}=this.layerSource;l(e)&&e.type==="3d"&&t.type!=="map-notes"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:s})=>{k(s,t.elevationInfo)&&this._snappingElevationAligner.notifyElevationSourceChange()}),C(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),f)])}async fetchCandidates(e,t){const{point:s,coordinateHelper:i,elevationInfo:n}=e,a=await F(this._mapSources(g=>this._fetchCandidatesForSource(g,e,t)));c(t);const d=i.hasZ()?A:n,y=this._getGroundElevation,_=a.flat().map(g=>W(g,i,d,y));return $(s,_,i),_}get _getGroundElevation(){return Q(this.view)}async _fetchCandidatesForSource(e,t,s){const i=j(t),n=await e.queryEngine.executeQueryForSnapping(i,s);c(s);const a=await this._snappingElevationAligner.alignCandidates(n.candidates,s);c(s);const d=await this._symbologySnappingFetcher.fetch(a,s);c(s);const y=d.length===0?a:[...a,...d];return this._snappingElevationFilter.filter(i,y)}refresh(){}_onGraphicUpdate(e){if(this.getGraphicsLayers().some(t=>t.graphics.includes(e.graphic)))switch(e.property){case"geometry":case"visible":this._remove(e.graphic),this._addMany([e.graphic])}}_onGraphicsChanged(e){for(const t of e.removed)this._remove(t);this._addMany(e.added)}_addMany(e){const t=[],s=new Map;for(const i of e)h(i.geometry)||(this._needsInitializeProjection(i.geometry.spatialReference)?(t.push(i.geometry.spatialReference),s.set(i.uid,i)):this._add(i));this._createPendingAdd(t,s)}_createPendingAdd(e,t){if(!e.length)return;const s=R(async a=>{await x(e.map(d=>({source:d,dest:this.spatialReference})),{signal:a}),this._markLoadedSpatialReferences(e);for(const[,d]of t)this._add(d)});this.updatingHandles.addPromise(s.promise);const i={task:s,graphics:t},n=()=>M(this._pendingAdds,i);s.promise.then(n,n),this._pendingAdds.push(i)}_markLoadedSpatialReferences(e){for(const t of e)t.wkid!=null&&this._loadedWkids.add(t.wkid),t.wkt!=null&&this._loadedWkts.add(t.wkt)}_add(e){if(h(e.geometry)||!e.visible)return;let t=e.geometry;if(t.type==="mesh")return;t.type==="extent"&&(t=G.fromExtent(t));const s=this._ensureSource(t.type);if(h(s))return;const i=this._createOptimizedFeature(e.uid,t);h(i)||(s.featureStore.add(i),m(e.symbol)&&this._extrudedPolygonSymbolsCount++)}_needsInitializeProjection(e){return(e.wkid==null||!this._loadedWkids.has(e.wkid))&&(e.wkt==null||!this._loadedWkts.has(e.wkt))&&!P(e,this.spatialReference)}_createOptimizedFeature(e,t){const s=I(q(t),this.spatialReference);if(!s)return null;const i=this._ensureGeometryHasZ(s),n=O(i,this._hasZ,!1);return new H(n,{[u]:e},null,e)}_ensureGeometryHasZ(e){var i;if(!this._hasZ)return e;const t=n=>{for(;n.length<3;)n.push(0)},s=e.clone();switch(s.hasZ=!0,s.type){case"point":s.z=(i=s.z)!=null?i:0;break;case"multipoint":s.points.forEach(t);break;case"polyline":s.paths.forEach(n=>n.forEach(t));break;case"polygon":s.rings.forEach(n=>n.forEach(t))}return s}_ensureSource(e){const t=this._sources[e];if(l(t))return t;const s=this._createSource(e);return this._sources[e]=s,s}_createSource(e){const t=Z.toJSON(e),s=this._hasZ,i=new B({geometryType:t,hasZ:s,hasM:!1});return{featureStore:i,queryEngine:new U({featureStore:i,fields:[{name:u,type:"esriFieldTypeOID",alias:u}],geometryType:t,hasM:!1,hasZ:s,objectIdField:u,spatialReference:this.spatialReference,scheduler:l(this.view)&&this.view.type==="3d"?this.view.resourceController.scheduler:null}),type:e}}_remove(e){this._mapSources(t=>this._removeFromSource(t,e));for(const t of this._pendingAdds)t.graphics.delete(e.uid),t.graphics.size===0&&t.task.abort()}_removeFromSource(e,t){const s=t.uid;e.featureStore.has(s)&&(e.featureStore.removeById(t.uid),m(t.symbol)&&this._extrudedPolygonSymbolsCount--)}_destroySource(e){e.queryEngine.destroy(),this._sources[e.type]=null}_mapSources(e){const{point:t,polygon:s,polyline:i,multipoint:n}=this._sources,a=[];return l(t)&&a.push(e(t)),l(s)&&a.push(e(s)),l(i)&&a.push(e(i)),l(n)&&a.push(e(n)),a}};o([p()],r.prototype,"getGraphicsLayers",void 0),o([p({constructOnly:!0})],r.prototype,"layerSource",void 0),o([p({constructOnly:!0})],r.prototype,"spatialReference",void 0),o([p({constructOnly:!0})],r.prototype,"view",void 0),o([p({readOnly:!0})],r.prototype,"updating",null),o([p({readOnly:!0})],r.prototype,"availability",void 0),o([p()],r.prototype,"_hasZ",null),o([p()],r.prototype,"_snappingElevationAligner",null),o([p()],r.prototype,"_snappingElevationFilter",null),o([p()],r.prototype,"_symbologySnappingFetcher",null),o([p()],r.prototype,"_extrudedPolygonSymbolsCount",void 0),o([p()],r.prototype,"_getGroundElevation",null),r=o([z("esri.views.interactive.snapping.featureSources.GraphicsSnappingSource")],r);const u="OBJECTID";export{r as GraphicsSnappingSource};
