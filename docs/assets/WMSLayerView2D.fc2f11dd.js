var M=Object.defineProperty;var v=Object.getOwnPropertySymbols;var U=Object.prototype.hasOwnProperty,F=Object.prototype.propertyIsEnumerable;var P=(r,e,t)=>e in r?M(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[e]=t,I=(r,e)=>{for(var t in e||(e={}))U.call(e,t)&&P(r,t,e[t]);if(v)for(var t of v(e))F.call(e,t)&&P(r,t,e[t]);return r};import{aq as s,ar as m,mg as L,as as S,J as g,X as R,x as q,ag as W,eg as $}from"./vendor.f59460b9.js";import{a as V}from"./BitmapContainer.8b19b6d1.js";import{y as D}from"./LayerView2D.4cbf4b16.js";import{v as B}from"./ExportStrategy.31a1ebed.js";import{u as z}from"./LayerView.62cad0ec.js";import{i as A}from"./RefreshableLayerView.2e6bc086.js";import{l as G}from"./ExportWMSImageParameters.cc175f41.js";import"./WGLContainer.36a5457c.js";import"./enums.2d9e6f64.js";import"./pixelUtils.2345058e.js";import"./utils.2943fe63.js";import"./Utils.d99d4263.js";import"./number.30628ef2.js";import"./Texture.68429d95.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.a0e626ef.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./VertexArrayObject.aedfa412.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.58a17754.js";import"./StyleDefinition.32daf7f5.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./Bitmap.3cb1ae16.js";const H=r=>{let e=class extends r{initialize(){this.exportImageParameters=new G({layer:this.layer})}destroy(){this.exportImageParameters.destroy(),this.exportImageParameters=null}get exportImageVersion(){var t;return(t=this.exportImageParameters)==null||t.commitProperty("version"),this.commitProperty("timeExtent"),(this._get("exportImageVersion")||0)+1}fetchPopupFeatures(t){const{layer:a}=this;if(!t)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","Nothing to fetch without area",{layer:a}));const{popupEnabled:n}=a;if(!n)return Promise.reject(new g("wmslayerview:fetchPopupFeatures","popupEnabled should be true",{popupEnabled:n}));const d=this.createFetchPopupFeaturesQuery(t);if(!d)return Promise.resolve([]);const{extent:i,width:o,height:p,x:u,y:c}=d;if(!(i&&o&&p))throw new g("wmslayerview:fetchPopupFeatures","WMSLayer does not support fetching features.",{extent:i,width:o,height:p});return a.fetchFeatureInfo(i,o,p,u,c)}};return s([m()],e.prototype,"exportImageParameters",void 0),s([m({readOnly:!0})],e.prototype,"exportImageVersion",null),s([m()],e.prototype,"layer",void 0),s([m(L)],e.prototype,"timeExtent",void 0),e=s([S("esri.layers.mixins.WMSLayerView")],e),e};let h=class extends H(A(D(z))){constructor(){super(...arguments),this.bitmapContainer=new V}supportsSpatialReference(r){return this.layer.serviceSupportsSpatialReference(r)}update(r){this.strategy.update(r).catch(e=>{R(e)||q.getLogger(this.declaredClass).error(e)})}attach(){const{layer:r}=this,{imageMaxHeight:e,imageMaxWidth:t}=r;this.bitmapContainer=new V,this.container.addChild(this.bitmapContainer),this.strategy=new B({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:t,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.handles.add(W(()=>this.exportImageVersion,()=>this.requestUpdate()),"exportImageVersion")}detach(){this.handles.remove("exportImageVersion"),this.strategy.destroy(),this.strategy=null,this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(r){const{view:e,bitmapContainer:t}=this,{x:a,y:n}=r,{spatialReference:d}=e;let i=null,o=0,p=0;if(t.children.some(E=>{const{width:f,height:x,resolution:j,x:l,y}=E,w=l+j*f,b=y-j*x;return a>=l&&a<=w&&n<=y&&n>=b&&(i=new $({xmin:l,ymin:b,xmax:w,ymax:y,spatialReference:d}),o=f,p=x,!0)}),!i)return null;const u=i.width/o,c=Math.round((a-i.xmin)/u),C=Math.round((i.ymax-n)/u);return{extent:i,width:o,height:p,x:c,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(r,e,t,a){return this.layer.fetchImageBitmap(r,e,t,I({timeExtent:this.timeExtent},a))}};s([m()],h.prototype,"strategy",void 0),s([m()],h.prototype,"updating",void 0),h=s([S("esri.views.2d.layers.WMSLayerView2D")],h);const ge=h;export{ge as default};
