import{at as n,au as m,dT as f,hx as d,nd as j,ne as g,nf as c,aD as b,aF as u}from"./vendor.ad8aa1ba.js";import{y as w}from"./LayerView2D.dfaa8db6.js";import{i as V}from"./GraphicContainer.3ecde44c.js";import{o as S}from"./BaseGraphicContainer.fc5d4975.js";import{u as v}from"./LayerView.e359e190.js";import"./utils.baffb554.js";import"./Utils.4c2feac4.js";import"./number.30628ef2.js";import"./enums.2d9e6f64.js";import"./Texture.22d23c43.js";import"./VertexElementDescriptor.1fdca6da.js";import"./MaterialKey.6f6162d1.js";import"./alignmentUtils.6849a0a8.js";import"./definitions.d3c1cadf.js";import"./cimAnalyzer.209d4429.js";import"./fontUtils.c3d9f30f.js";import"./BidiEngine.d8bba3fc.js";import"./Rect.95b0fd2e.js";import"./callExpressionWithFeature.ebb41fc5.js";import"./GeometryUtils.4f19e772.js";import"./floatRGBA.cc457c75.js";import"./normalizeUtilsSync.b16e64df.js";import"./VertexArrayObject.6d35aaee.js";import"./FeatureContainer.f0f5888c.js";import"./TileContainer.9a7cb2ee.js";import"./WGLContainer.af3d731a.js";import"./pixelUtils.62190471.js";import"./vec4f32.f3b49d2e.js";import"./ProgramTemplate.83597331.js";import"./StyleDefinition.02cc41be.js";import"./config.82550349.js";import"./GeometryUtils.51c4032a.js";import"./earcut.afc1d357.js";import"./visualVariablesUtils.8e59fa54.js";import"./visualVariablesUtils.551507c0.js";import"./Matcher.d6847bda.js";import"./tileUtils.eab69325.js";import"./TileClipper.51ce0e42.js";import"./Geometry.d049a63c.js";import"./ExpandedCIM.a759c9e9.js";import"./schemaUtils.9f875565.js";import"./createSymbolSchema.85d3f514.js";import"./util.69d9a6e8.js";import"./ComputedAttributeStorage.23683ac7.js";import"./centroid.7be204a9.js";import"./vec3f32.1121a836.js";let h=class extends w(v){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,s){if(!this.graphicsViews.length)return null;const r=this.layer;return this.graphicsViews.reverse().map(t=>{const i=this._popupTemplates.get(t),o=t.hitTest(e);for(const a of o)a.layer=r,a.sourceLayer=r,a.popupTemplate=i;return o}).flat().map(t=>({type:"graphic",graphic:t,layer:r,mapPoint:e}))}update(e){if(this.graphicsViews)for(const s of this.graphicsViews)s.processUpdate(e)}attach(){this.handles.add([n(()=>{var e;return(e=this.layer)==null?void 0:e.featureCollections},e=>{this._clear();for(const{popupInfo:s,featureSet:r,layerDefinition:t}of e){const i=f.fromJSON(r),o=new d(i.features),a=t.drawingInfo,y=s?j.fromJSON(s):null,p=g(a.renderer),l=new S({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:o,renderer:p,container:new V(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,y),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=p.symbol):this.layer.lineSymbol=p.symbol:this.layer.polygonSymbol=p.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},m),n(()=>{var e;return(e=this.layer)==null?void 0:e.polygonSymbol},e=>{this._graphicsViewMap.polygon.renderer=new c({symbol:e})},m),n(()=>{var e;return(e=this.layer)==null?void 0:e.lineSymbol},e=>{this._graphicsViewMap.polyline.renderer=new c({symbol:e})},m),n(()=>{var e;return(e=this.layer)==null?void 0:e.pointSymbol},e=>{this._graphicsViewMap.point.renderer=new c({symbol:e})},m)],"georsslayerview")}detach(){this.handles.remove("georsslayerview"),this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};h=b([u("esri.views.2d.layers.GeoRSSLayerView2D")],h);const je=h;export{je as default};
